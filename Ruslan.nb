(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1010163,      19499]
NotebookOptionsPosition[   1005120,      19425]
NotebookOutlinePosition[   1005527,      19441]
CellTagsIndexPosition[   1005484,      19438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:0411\:0435\:0437", " ", 
    "\:0437\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:043e\:0439", " ", 
    "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:0438", 
    RowBox[{"(", "WMS", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d1", "=", "0.100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2", "=", "0.114"}], ";"}], 
  RowBox[{"(*", "\[Mu]m", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Np", "=", "8"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
     "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\:0441\
\:043a\:0438\:0439"}], ",", " ", 
    RowBox[{
     RowBox[{
     "\:043e\:043a\:0441\:0438\:0434", " ", 
      "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
     RowBox[{
     "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
      "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
      "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
     "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rsi", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", 
      RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Isi", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"980", "+", 
      RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nRsi", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
  RowBox[{"nIsi", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"nRsi", "+", 
    RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rsio2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", 
      RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isio2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"398", "+", 
      RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nrsio2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nisio2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", "=", 
   RowBox[{"nrsio2", "+", 
    RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rh2o", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", 
      RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ih2o", " ", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"104", "+", 
      RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRh2o", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
  RowBox[{"nIh2o", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nd", "=", 
   RowBox[{"nRh2o", "+", 
    RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ret", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", 
      RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nRet", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
   RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:041c\:0435\:0442\:043e\:0434", " ", 
    "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
    "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nddEMA", "=", 
   RowBox[{"nd", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", "Vet", "*", 
        RowBox[{"(", 
         RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
       RowBox[{"2", "nd"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", "nd"}], "+", "net", "-", 
       RowBox[{"Vet", 
        RowBox[{"(", 
         RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bdd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
    "nddEMA", "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p1", "=", 
    RowBox[{"n1", " ", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", 
   RowBox[{"n2", " ", "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdd", "=", 
   RowBox[{"nddEMA", "*", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "b1", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
        RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], "*", "p1", "*", 
        RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
       RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"L2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "b2", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
        RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], "*", "p2", "*", 
        RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
       RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ldd", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "bdd", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
        RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], "*", "pdd", "*", 
        RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
       RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
  RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "\:0441\:0442\:0438\:043b\:0438", " ", 
   "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
   "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelT", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelR", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"label", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"style", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", "12", 
     ",", 
     RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color", " ", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{"color", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
       "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
     RowBox[{"LegendMarkers", "\[Rule]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
         RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"#", ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], ")"}]}],
      ",", 
     RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RightWMS", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"L2", ".", "L1"}], ",", "Np"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LeftWMS", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"L2", ".", "L1"}], ",", "Np"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mwms", "=", 
   RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
  RowBox[{"M11WMS", "=", 
   RowBox[{"Mwms", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
  RowBox[{"M12WMS", "=", 
   RowBox[{"Mwms", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
  RowBox[{"M21WMS", "=", 
   RowBox[{"Mwms", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
  RowBox[{"M22WMS", "=", 
   RowBox[{"Mwms", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tWMS", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "*", "Q0"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"M11WMS", "+", 
         RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
      RowBox[{"(", 
       RowBox[{"M21WMS", "+", 
        RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Twms", " ", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rWMS", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"M11WMS", "+", 
         RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
      RowBox[{"(", 
       RowBox[{"M21WMS", "+", 
        RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"M11WMS", "+", 
         RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
      RowBox[{"(", 
       RowBox[{"M21WMS", "+", 
        RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rwms", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rl", "=", "0.752"}], ";", 
   RowBox[{"ll", "=", "0.765"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G1WMS", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Rwms", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dd", "\[Rule]", "1"}], ",", 
        RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"2", "/", "10"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G2WMS", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Rwms", "/.", 
         RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Rwms", "/.", 
         RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Rwms", "/.", 
         RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Rwms", "/.", 
         RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Rwms", "/.", 
         RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"2", "/", "10"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
     RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1WMS", " ", "=", 
   RowBox[{"\[Lambda]", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"Rwms", "/.", 
        RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]2WMS", " ", "=", 
   RowBox[{"\[Lambda]", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"Rwms", "/.", 
        RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]3WMS", "=", 
   RowBox[{"\[Lambda]", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"Rwms", "/.", 
        RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]4WMS", "=", 
   RowBox[{"\[Lambda]", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"Rwms", "/.", 
        RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]5WMS", " ", "=", 
   RowBox[{"\[Lambda]", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"Rwms", "/.", 
        RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "0.762", ",", "0.764"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WMS", "=", 
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G3WMS", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "WMS", "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"Fit", "[", 
    RowBox[{"WMS", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"G3WMS", ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"f1", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Framed", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"f1", ",", "\"\<Without mirror symmetry\>\""}], "}"}], "}"}],
        "]"}], ",", "16", ",", "Black"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"var1", "=", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n2", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n2", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n1", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n1", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.075", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n1", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.075", ",", 
        RowBox[{
         RowBox[{"Re", "[", "n2", "]"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}]}], "}"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8902021815869975`*^9, 3.890202184072356*^9}, {
   3.890202304971348*^9, 3.8902023094962473`*^9}, {3.8902027855118303`*^9, 
   3.8902028572069407`*^9}, {3.890202919466313*^9, 3.8902029306421595`*^9}, {
   3.890202991139358*^9, 3.8902029917808657`*^9}, {3.890203059708217*^9, 
   3.8902030703950634`*^9}, {3.8902031357030177`*^9, 
   3.8902031426233997`*^9}, {3.8902032458292923`*^9, 3.890203250555464*^9}, {
   3.8902034741074624`*^9, 3.890203519435869*^9}, {3.890203556825513*^9, 
   3.890203583010481*^9}, {3.890203943208389*^9, 3.8902040051318235`*^9}, {
   3.890204041778763*^9, 3.8902040476154413`*^9}, {3.8902040849522223`*^9, 
   3.890204091397949*^9}, {3.890204127941805*^9, 3.8902041624854755`*^9}, {
   3.8902042120430875`*^9, 3.890204233168825*^9}, {3.890204375844813*^9, 
   3.890204382651579*^9}, {3.890204501343052*^9, 3.890204503707718*^9}, {
   3.8902045399081373`*^9, 3.890204569128833*^9}, {3.8902046434665294`*^9, 
   3.8902047494600325`*^9}, {3.890204876949515*^9, 3.890204882671727*^9}, {
   3.8902049304086075`*^9, 3.8902049393795958`*^9}, {3.89020499599267*^9, 
   3.8902050088156853`*^9}, {3.8902050755511055`*^9, 3.890205562090572*^9}, {
   3.890205595497433*^9, 3.890205641875495*^9}, {3.8902056866902285`*^9, 
   3.8902057130388136`*^9}, {3.890205775996608*^9, 3.8902058130956078`*^9}, {
   3.8902058865558076`*^9, 3.8902061045231915`*^9}, {3.89020618087418*^9, 
   3.890206199933651*^9}, 3.8902062328692474`*^9, {3.890206276171381*^9, 
   3.8902062941473255`*^9}, {3.8902064699035487`*^9, 3.8902065179825277`*^9}, 
   3.890294053433333*^9, {3.8902941863265667`*^9, 3.8902941874605865`*^9}, {
   3.8902949459835544`*^9, 3.8902949498328714`*^9}, {3.890295095834169*^9, 
   3.8902951193066797`*^9}, {3.89029515514347*^9, 3.8902952095315347`*^9}, {
   3.890295412073635*^9, 3.8902954581208553`*^9}, {3.8902955111572294`*^9, 
   3.8902955586435337`*^9}, {3.890295592453964*^9, 3.890295593936298*^9}, {
   3.890295681995139*^9, 3.890295684175197*^9}, {3.890295934251587*^9, 
   3.8902959614114923`*^9}, {3.8902960154185686`*^9, 
   3.8902960276485825`*^9}, {3.890296225184774*^9, 3.8902962647058825`*^9}, {
   3.8902963289379473`*^9, 3.8902963299859624`*^9}, 3.890296392665984*^9, {
   3.890296469669637*^9, 3.8902965130719323`*^9}, {3.8902966154892855`*^9, 
   3.890296650936061*^9}, {3.8902966880332117`*^9, 3.890296694543047*^9}, {
   3.8902967305076056`*^9, 3.8902967992651005`*^9}, {3.8902968418602796`*^9, 
   3.8902970173888435`*^9}, {3.890297058000898*^9, 3.8902970621828976`*^9}, {
   3.8902971767349596`*^9, 3.8902971807028027`*^9}, {3.8902973710835395`*^9, 
   3.8902974598323*^9}, {3.890297601028773*^9, 3.8902977311516314`*^9}, {
   3.890297776404581*^9, 3.890297895453925*^9}, {3.890297943609458*^9, 
   3.8902979706942472`*^9}, {3.890298008526276*^9, 3.8902981213460283`*^9}, {
   3.890298152186446*^9, 3.890298156508218*^9}, 3.8902982249770193`*^9, {
   3.8902982913370914`*^9, 3.890298291975489*^9}, {3.8902983960823812`*^9, 
   3.8902984358320303`*^9}, {3.890298755923162*^9, 3.890298763133069*^9}, {
   3.8902989189532566`*^9, 3.890298965058691*^9}, {3.8902989998224163`*^9, 
   3.8902993651418076`*^9}, {3.8902994091077857`*^9, 3.890299435384307*^9}, {
   3.890299466022318*^9, 3.8902994739819527`*^9}, 3.8902995254970407`*^9, {
   3.890299602001653*^9, 3.890299611186776*^9}, {3.8902997263522415`*^9, 
   3.8902998988585167`*^9}, {3.8903000009476476`*^9, 
   3.8903000640682273`*^9}, {3.8903001103966894`*^9, 
   3.8903001195317993`*^9}, {3.890300159874646*^9, 3.8903001839418955`*^9}, {
   3.890300236003379*^9, 3.890300351962025*^9}, {3.8903660051717825`*^9, 
   3.8903660275224066`*^9}, {3.8903660655978174`*^9, 
   3.8903660950473003`*^9}, {3.890366135571576*^9, 3.8903661558339024`*^9}, {
   3.890366219994934*^9, 3.890366220703311*^9}, {3.8903662611598554`*^9, 
   3.8903662641354084`*^9}, {3.890366296293851*^9, 3.8903663243867235`*^9}, {
   3.890366364869524*^9, 3.8903664636207457`*^9}, {3.8903665201126194`*^9, 
   3.890366522257512*^9}, {3.890366613009797*^9, 3.8903668173582306`*^9}, {
   3.8903668526849566`*^9, 3.8903668679856353`*^9}, {3.890366915534255*^9, 
   3.8903669623714123`*^9}, {3.8903670380171156`*^9, 3.890367069527485*^9}, {
   3.8903671167536116`*^9, 3.8903671262056465`*^9}, 3.8903671597326107`*^9, {
   3.890367190946599*^9, 3.8903672225627427`*^9}, 3.8903672768439603`*^9, 
   3.890367332270003*^9, {3.890367487570797*^9, 3.890367490225387*^9}, {
   3.8903682941100054`*^9, 3.890368296869258*^9}, {3.890368361064475*^9, 
   3.8903683626830926`*^9}, 3.8903684489081335`*^9, {3.8903692304023333`*^9, 
   3.8903692474382496`*^9}, {3.8903695805157704`*^9, 3.890369582152754*^9}, {
   3.8903743857208796`*^9, 3.890374475085062*^9}, {3.8903745152061505`*^9, 
   3.8903748988547153`*^9}, {3.890374941821417*^9, 3.890374945066083*^9}, {
   3.8903750139832478`*^9, 3.8903751299737053`*^9}, {3.8903751813077836`*^9, 
   3.8903755709123793`*^9}, {3.890375656228202*^9, 3.8903756584981074`*^9}, {
   3.890375704537569*^9, 3.890375886445794*^9}, {3.890375918876642*^9, 
   3.890375974332494*^9}, {3.8903760083915677`*^9, 3.89037622539186*^9}, 
   3.890376268082283*^9, {3.8903763330811996`*^9, 3.8903763682542953`*^9}, {
   3.890452295941531*^9, 3.8904522961088057`*^9}, 3.890452405373012*^9, {
   3.8904526529884634`*^9, 3.890452659998107*^9}, {3.890453056224834*^9, 
   3.89045305815838*^9}, 3.8904549836709485`*^9, {3.890455036278062*^9, 
   3.8904550768501177`*^9}, {3.8904552184596977`*^9, 3.890455229479238*^9}, {
   3.890455263340884*^9, 3.890455268594637*^9}, {3.8904552993016777`*^9, 
   3.890455299639742*^9}, {3.890455342315604*^9, 3.890455351655409*^9}, {
   3.8904554041856728`*^9, 3.8904554106943054`*^9}, {3.890455472904327*^9, 
   3.890455485226382*^9}, {3.8915741098697157`*^9, 3.8915741609417734`*^9}, {
   3.8915742957156763`*^9, 3.8915743186135063`*^9}, {3.8915744921265154`*^9, 
   3.8915745089806585`*^9}, {3.8915746486789703`*^9, 
   3.8915746596627283`*^9}, {3.891574696798006*^9, 3.891574701269408*^9}, 
   3.891574907490342*^9, {3.8915750469525437`*^9, 3.891575050100524*^9}, {
   3.8915751419091325`*^9, 3.8915751491327667`*^9}, {3.891575204085143*^9, 
   3.891575241828029*^9}, {3.891592787204873*^9, 3.891592787732126*^9}, {
   3.8923154939388456`*^9, 3.892315550003194*^9}, {3.892315623574566*^9, 
   3.892315633878171*^9}, {3.8923157139501815`*^9, 3.8923157349001303`*^9}, {
   3.892315788631873*^9, 3.8923157992919903`*^9}, {3.892315834709812*^9, 
   3.892315835860643*^9}, 3.892315872945222*^9, {3.8923159151396165`*^9, 
   3.892315927593734*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"1e1d5f88-552d-407b-915e-b8efdc9be19a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUmnk0Vl0UxpEoSWgQldKckJSS0mOIVEiGDEnGSqRSiUokpJIyRyoyJDKL
Ms8UIjOhd/Z6x2gQKd/9/rJ+69z33nP2fvaz91mLgtMFM1chAQGBL6ICAv//
/Zt8VkxAgISxuXuKZ8XyIH8nVNpZiAR9qezqvfGvoe2SIdcoTELIsdsCqEyB
o37z2i2iJDhFxiTZqT9D4EamYth8Eg4evaTmEhCNFNF5O/gLSCClXelK591H
PXPTXjMJEjpsmB43zQJA/3BQ760kCYsfOnI+n/GCSNaZI8sXk9DtbKUVtOg0
NoXdNb+xlASv7jNBZG8XGJ5/dWJEhoRe5cs5ousvwM2kyVlHjoTwS8XaFJ/r
uL9t1D11JQl53TdqTikEI0tS9IroahJqS1M3PpB5hNbxjTfPKZAwtfhp/Bm7
GHA7DYLa1pFwKlt3ndWnp5AoOh2mupGE5JexK7uOJ2NbTEh01GZif+d2xy+h
pcLUOz3xlyIJknfFt2tey8Alq8ZUG2US7ok+2HR6OguRGow35dtIMOHOXGq2
yUWhrMjb1Wok2KjGmFJ08tE9vaEicCcJal/UXP2LCvDzi34DfRcJe8e9C5X/
FWJZhWub4R7i/TxXLT/Zt9j9PLgnay8JLxvd9kkIFcPaP21YYj8JiX9H994v
KoavQwP9kjYJO/49l4tQKUGCDp3brUuCu7PKv1zPEpStnftrtz4Jy7sYOtZX
SjA0Z8O/hIMkWDG8jQdRgr+0AyL/DpEwb82NY06dxZBvdJFwNCJBTsn+9aRy
MfAqaFm9CQmXl/4rvGX5Fg6hqfKbjpHAZqrZlBsV4bZb/cb75iRwrrob2i4v
xMvDNBWuJRHvtm3vWBX5qNsqvNvUmoTJi5fB0ssDTXw9Cm1JoP71f3zTORsb
252P+p4ioTTqbuTTtnQczLtjNeRIwtMci83M2yk4G5FyCi4kDJ/Fo2XHknDP
q+7My9MkzLpcU4xJTkCmOfXCXDcScppMOyRVYtCyc47PWXcSBDUNfhhffgzO
0nUBLedJKDDRNKXvugeJSd1QlYskONwRlY55egfb+p0eR3iRQDcpkn1qGwDT
94FPflwh4ZJdTYHtSX94JbxMsrpGQqevkhij/jaibtRmlPqSkHHB5YBEWQiK
7Ch5q26SoLz+zSWT5+Ho0RJ6H3CL+N4pLdc9b6PxS35tDTWA0M9Vpupk0FPI
COh+MLhDQpPCUdHynmRokB0/vw4m8pVwWXzn3XTY1N4eEA8lQePjzbFnjVm4
npJMvnCfhFuHjvfHVeeh3JU8rv6IhCy1QJa8WAm0WQ7StU8IvX1sWUoyr0Xx
2MIA66ckeJIObJbaUg+lsVIu7xkJST9svUnjDXjJPHMiOImEFpl3LTdfN0GG
ueTDihQSynfFBGcf+YCw0ZpdBWkknK/02tzX/RFCo56phhkkfNabLBnRaYUP
Y4X010yi/iL+BSo/bgOP3ux/NZuEv5aqnS8qPsGFfpW7II+E4wraD4Ob2zFI
W3viZQHx+6ntXQ1WHTCltTdrvCVB+trC5s53HWik3tzVXkJCxIfpUgHRz9hH
3ZLqWkqCLs/W6p/OZxRQeqVmyklwPtvyIcLtMzZT7vhHVpEwUvlqTrTfZzwj
q3I315JQ7/tpkkewNHnYtqqehN+nHbUSzn1GKOl+s2UTEY/w025P9T7j39fd
uzgfCL3aK8mKzv+MK19pKYGtJER3Gf0SKusAayRCSradhDlRl1KabTrgMLLf
P/czCdrHbj8zb2lH7zCbo99NwrabFzMVKz/BaPiJ7VAvCX7OdeOaD9tQO6Tf
7DVA+ME3f+d/e1qhMTShPn+I2I9abd+xxo9Y98VIaheZ0If4g7Lrd5vwZHDq
ViuVhEj2nFXxtQ2QGEznODFIeKisQPs9VofpfoHmR2wS+MKXlPWkqnGxP1t9
I4+EhldKmil7ysHos00p/0bC4ZVqd8qt3sGuT1TK/DsJz5s3qhY9KMLn3qJb
Yz9JWLtwR8YBeh4Meh05/r9JqLm67YXTWCbKeyRsl/0h8ncib4FRdCrUesqa
3vwl4cyRhHeOPc+Q0X1WXU+ADIFfBSoXF0dDvntpyoAQGfs35Ku3K4UScauV
vDiXDM+ERVSptT4Q67pwS2QeGUK657/t0HdAQOdKTqIYGUrs48kujuvx6/MH
mx0Lyejix4co6+2Fx2fvpg+LyIj4o7XDwv40KB3r1B2kySiWWsLNL7kJq46O
l7+WkFHkpFOSS7qP1nY/yYcyZJhafkosc42BbrvirXVyxPsmQuPf9z/Hu099
7PcryQhTjuuQa0qFyqcgG9PVZKg81GKzUzKR2ra9iaFAhn/+HPvIS3mQaxvZ
6beejKWKASn9BYUQadWQzNxCMOdnavupUtxsoftpKxHf7/CO7sqrwMTHSHav
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
GR8zrHKe8hErZxB2rY2JOUExM1ef8+G3T0R6UQcTvce0jVe94MPFvjEuvZOJ
dwm7xWsI3v7SIKWnj4kOPbnNs0mEH205WLqDwkS1zO4V1il8CO0xZPJ/MWG/
47lY4is+xmzned6dYuLbKvU9KzMIP77Z/F1+hokNuVWfEwh+Vm04ayw4hmTB
5wFRrwn/MTy07M2CMTx0PHHwShYfnlaHD5xdMwZRbnfNdA4fg1eNkkiHxrCD
uQ42b4n5SXBqjofRGBpWammVELzjYdqZSZMxuJeMPltSzEdY6j8VCYsxJEpF
09oIJi5uFXvtxzBzoXKn5jvCj1SXfon1GsPsq8/UyVKi/7CHlxo/HQNvH8tN
vJoPuWv3ffufjeH6LRUFG4IbhXYPOyeNoTPwlHUawWvkHqdeTxvD8rc8o301
xHxkqLsjI3cMue/TDVxqCX9LTzedUz+GNe8TPybW8yHgeOHBe84Yhjgbs/Oa
+dg6s3u+LH8MUR5H4sYIPh4ncNdnfAx67ZoSaz/w8aYtInD3rzEo3LjxIoJg
a80i37ezY3glJLfT/SMfuYunzuRLs+D+3Xq3aCsRn5wauuRSFmTOUq9oECx8
+L7zRRkWciUKlNwItg1YcWrbSha0pYvmfiBYhKt1PHsDC+ukD6oEthH9pDHw
wGsNFtIE7e/1f+LjnuOR2nl7Wbjl8vOuQDsfRTOLtc9qsbCFP39kE8FiO9L2
btJlYaXr4qArBBe/aFJLO8KC0f5h+7kdfJA1H+cJm7DAWmheuYlg8V5rFRdT
FtQoF2wOEewkztqyzpKFYwaV2+8TvNBXXCHZngXJyiy24GdCD0t6ngs4svBu
ke/rVQQ75T5b6eDMwiKxbTc1CH5HV1m++ixxvph9h9wJpgZMxtw6x0KkkePu
OwRLrKxePOLBQqJsvUICwS5mxxY9u8TCrHnJp3qCH3FlH85cZmF/SnpgP8Gl
oRQxO28WXB65L2UTTF+XFVrmw4Kh+Eb/GYIlqy6LrLjBgtYplIh38rHXdl/Q
dT8Wvm5qK1pB8OmfwkKD/iwUtL3z3EJwxOM2/z2BLKSSHb+oE1y+NfbvkyAW
vFbM/6ZN8D46m7T1LguLDWadjvy//lynvvIeC45c5jqL/9et414dC2MhfFv1
hhMEl0lx79PCWZjUv2TjQLBmi67ntQgWekKP5DsTXBr05JhYNAtT7qZyrv+v
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
6ycTH7JiE0M03+NVP8uogkroz6Dl0fO89xBwjVXWYzCRdH/7+1yHShRr0RLj
mYQ901JZ9qkSlhvUhL6zmKitvPydf0sVqqumJ924TCiVdg0ebquCwwtV3ZZZ
wt/DpT0iG6ux3jy0cvUvJnwWkdv/3ajGg0WHInPnmUj96Hqan6cG27qe8/5a
YBLv15IXATI16E0Zczj5lwnf2dyYF2o12HPS78wADwsF/rYfF3vUYFRsqGgb
LwtJtypv3I6vQdCUkrQjHwuXuoxGtctqcOTt08DKxSycsBbkT+iswYwPeW6p
AAurz9MXm3yvQcylnTYXl7AQMVS899m/GqjLuncmLmUhr5BPRkqsFty57qMz
y1g4pWqfu3F7LdKat2fvX86C6kxIi/+BWujFuKz2FGKhx/1flpl6LRbZt3t+
/o8FiZt7ymIMapF/eDNNQpiFI0I3o1WtamEmdN/YWoTwz6e8RdOhFkJDnxrf
rGThbcPw+cr7tSjPldo7v4qFJ5eUT0S71eLaE8ek02Is/Cv30xvwrsWa8w1C
oeIsaO+W+O3jX4uGjZIPh1azsCh22Wzs81rco9+ckpVgwXSVi8K6F7WQqa3V
vbeWhbZT/tn8hN0RIl5VLcnCl2OMPBNi/RPL6/LL1xPxvDwdsonwp6BcGWmw
gQXBqVGSPnHeIN9KvhQpFn7qZyrPP6mFf4/1rZ8bWbCJvRwlSsR7IL1s4MAm
FkqVHBlJN2tBcRJSfyrDwh190+vplrUIP21e3L6ZBbsQXp3NBB5qa4ql121l
IfCjuNQGAi/m1yXPr25jocl6w70IAs+kMuNfBdtZ2LLeR/IFgffCZb4udXkW
8jG9atWiWtjtsTn7ZAcLLROfiyR+1oAk2FhftJOF/4LOBw6SalBY4V8qpUjk
9z+bvMxXNZAO/6F0UYmIT/eAQklwDZ7f0M72280C/0KedqBzDa5tWBXPVmbh
3LJannTVGvRx7q6W38cCT8mhlJ/SNVBr631xZT+Bz5FSuxW8NZBye+n56QAL
eteP7+j0qEbPqPS1pKMsVLh8fUGzrMKJd55jvaosKJU89GCLV+FNyKTR8mMs
XLVrtWY0VML/RNY55xMsvPgnmTovU4ljaYrKWmdYyHz2tehJfQVybFX/zuqw
cO/YIZGE0jJIHku6r6DHQtmk/gnv82V4JsHLsLxA4HVd4qU8pRSWzR8nPuuz
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
SOjzttMd4aYWAp8LZ4XkJ0jYqb5U/3crFx4BwSPXifk17ee+UbN2oj7qJzgI
EvNf5IEQ7vYeLu4WbGe3EfPao7Yzm8uHuHjx+HOdN1FvmrMdl4iMEPjIDOcH
E/VI4ln8jM0oFxEtczeP0/vwFqyilRNcdA2c3Rf5qQ+M/IST179xscfPxkzI
pQ/Xwjg2EixC/48C19m39KL0lrSmA5uL/sz8HfSiXghond1Vz+HCL/T0441x
vUhbnMy9NccF9af0aTf7Xow6aT1r/MPFyaUZYxoCvbhkmJrlvHQWRz5unrLZ
2YOMvW2Brctmsejsy5xq4R6wRX7dllk+i7UbL0w1M7sR2qx9sO0/4vu/zAFm
aTfaDv1u3io6ixNSJpGvVbtxeoPuTM+GWShpHEoyUO36//9Nb5ffOAuv/f5j
KzZ0YbI3o8hdehb3yzbv85rvhGfQgsvOzbNIs3stmlbaicp/mUJPZWdxo8ah
YGJnJ4QGu+hf5GbxVu9FWNSyThiV/elR3DELbR6NzhXE+zh3+0L8gMIstov9
mT+b0IEz55547Fachbhdz1KxRx2IlHtl80xpFn0DJv2p+h2Y4u/RGNo9i8n+
rcELSh3YO/5XQVl5Fr5pvDobhTrwPwguGYE=
       "]]},
     Annotation[#, "Charting`Private`Tag$12511#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923156743216586`*^9, 3.892315744880889*^9, 
  3.892315807952059*^9, 3.8923158471007853`*^9, 3.8923158904946747`*^9, 
  3.892315934350828*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"6233d565-3e66-48d4-b881-71b2a256fa2b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$12565#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
syLK6P8BXk+mVw==
          "]]}, Annotation[#, "Charting`Private`Tag$12565#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$12565#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJwV13c8Vm8UAPDKqIxCREWREZLshDr2SkLISmRUVlYyIkVSSEZWhLKi7BAl
1M9eUVLI5s3rvS8NO/2Of/h8P/e993nuc89zznn4Ll41ctiyadMmZfyz8f/U
5cXTF1lI4F133072FhXcum/lO6EPPoksk0E/lGfa6oXWUC7asuFP2/jqQtC0
UiZPpNBWz3WlstFmNlxtRzfun0nbTUIztBxYEdm430V92JWVBA+VNAp40KWf
OhV90N1tMd+5N56nZJ4UhG5/Mc+yYS5mN8NotFT2D8+96MyXie+L0c9ECg9z
btxPzOT+Qt/0FXJn2bjfPcbdj40EF2QKVbagq3qFb91G6z4tV92MTpWri4lA
X/wap7oJbbdGlKahz578dnI9mAo/7+r9qUc7MvmIrKB3pm/1Z9hFgry3to3z
aN2OwJDH6Gcj5XtH0OISHPFZ6DDVrD/f0WxxL7JeohnumnUNob+aDfz3Dr18
gPnmAPryhPy2CTSvYXxXHzps9VekGDsJtmnflelA14s4JbxFT/ic3v4aTfI4
ztyItkmv/FiJZqneFtqJztBYS6pAW+vmegyjGevZBMrRa04Teps5SKBtai9W
hJZ/YU2jgbaY4qTLRheLn3VvR3PPpvZEo59IK+kO7CZB6vcPNbZo6cv3E8bR
UU1VJ2zQzan9Y2R0SJRLrfXG+tBdC1hD14qyvrFEa/W/fMHDSQJWslKeCXru
xoGdNuhlrh5FHbRq45ZPE2jVik+2R9HTZi3nCS4SfGdZyl68SYWT4QLWi2if
b07P/6DjK29ab9qD7/tYsuAXWnW33AU2dKtS5XMqOrX3qY0cutwtPHYabaR/
wy4I/W/Eme0Lulbt6JUde0kQ3Xv+Q/nG88QfeYvvI0Hvz+5KJ7S4mvCAHFpd
e4fnZXTLuRoVQKsFpIk6oteDR3cYoPO7XybYoi/3HnnugZbwuWFhhlb0bRwq
R8eGb36ogR6rX9RU5CbBX81tL/ajJU0s9mjzYHwIN7u3BVHhgf2KtCFaN889
sBk945Wib4EWZPx89z/009hvIS7onb/aHr1Ds3VbEA/RMlanEsrQP3Ut339F
02eaCD9GlypbuTrvJ4F14d2wy2gpMev6BwdwfcsOf1kNxO9/KLAkEW33a+Tc
ErqRPzUzA51htb3vN9p837dbpehg45etFHQwg6lqH7pCgePRMLqDdPo9Dy8J
ir+vvmhAX84+8d8L9IhOylAYOn0/T0srHwkSc31G6TfGs/1sPcJPgr0693wX
A3D9TdoXDwqRIMLbWSLFnwruKW/2gzAJ+sNY9Dj9cD1WLmUbiJLA0NvQ2+w6
xjOj0dFoMRLMbC0z23ONCglJJdGJ6Ddd5kdY0NxCrHPp6AzDvlV69CGV7uJi
tL/hybDf3hg/1/WletC8KzoGXWiXcV1ZjiMkyBqDVyHolho1xcfo/TmqmdNe
VLjtIquVK47xyvdwOsWTCq2/My2L0cL0J/mi0ayBO9xfo0fgiFEIOiNqOqkN
/d2jNNkZ/bYweYaK1nO9V6uIXpr7GyV/lATinkNm3zyo4Hqt8VMLmuvIvhQW
tFnQuYuzEri/RY6FXLhKBeZfqnp/0MZdB2MM0Q2XxOXW0UaH0uPV0GKGdAws
kpgfpwRvHEJvEigrkUY7rd5pJ9yokNeyY3MAmpC57hSAXmZvTN8uRYLT6vvO
RbpSIaVAZkhIGuevOld935kKcXRmR46inRsmtwSgIy8EBB5DazfdB2d04K4G
Hm30LZq3CafQNgFnrK+gP98uq2FEC51yGi5Ai80bfLnnRIWymfRRCRkSHFBy
3BF4hQrtIoxTCrKYL9XIB05cwnwWpDijht6+iytPGK3S60zooRc+1xxgR1fc
aF+wRr+WEB6accR46oraGoImxroeJKI9r7GItKElzi3VUhyowFnP4WIph/tD
+epApD0VLprx/gw4RgKFw4U0sbY439hwq1D0dPxyhD/aun2uMRJ91bprsx3a
Qrn+cRqasOx9JY0+K3xR4x2a21PnxCcbKqgvPUvaIk+CB4GM1axowaRDcA+9
aK0zHWiN+feLeGTCcRK8zerL2W2J68+UlZ+OVtuVEbNoQYVLKnta8tChRaU2
/eipfBr6GnRvwPGCZPRkYP/NYTR3nBuxFz3Gf9tLWIEEye2/WbnMqTB09bNF
NTps0oC0aor5LUvX7z16xHyZ5yva6uu7xHa0454m6Qr0oGr+p+9orlSVf1fR
3zhu6tMokmDYtYR1zIQK/TXCqnro3B+NNHXGVOjZekPkO7qja4HxohHGk4g7
zzQ6pTa2VBF9RNeedQ7NsvxalgMdHqm3vFkJx79H/7HJkAonWHlaBNHdvSzn
DqPz9tZedkXfpCcHkM9g/BzZlLeGllQn/9I/TYV8/d+P6U7gfh7g6OdH918l
Re9Ae7rIxS3pYb4q7b7Oi2ZQfBSViSbJZWqpb/z+j2XU/CnM58qq0xHo1e4X
kfd0qSB8NlRo30kSPBe6yJmkRYVk8+JgfvSgiGe1E5rBZvDbYTQNdUH6BHrW
RSZaCR345snzUU0qlIRNLJ5HS6hzpQijFarVWzLQZeJn7QvVqXCKj85FCEgw
yT4snaRChTeHJBvF0b/Uj6k5oMXFz/MeQ5c6+x6UQrMovvqkhea+23WmTRn7
DWOHE1fQ5FyvC6uA3yv8vx0v0KzR9/cbncT+h3qnRFKZBJ/WFy73K2A+mat9
p4AO33H0UAq6d36xQw29OzHpmSVa/veVGRP0/d1PPg8dpwLN8ml+f/TD2Cz2
YXkqJG3Z/agB7a6jVPhJjgrvOXJ8z6pgPRr9VnBPigoLu4fDrNDeXQZ+qmhh
Lq5HDui34q+XViQx/+69X3IdbcrzgtEZbXbAbeYx+v4ORm8tCSoQwnJWE+jm
07upc0ew/1JqhGuqWH/enjtHI4L3HzxWHog2LZWeqxCmAt32POEw9Lha5zEn
9M/P91gT0Z1OoR+7DlGh7erp8So07a7ig4lCVAh69ilsDU03d/kLhwDuD4bx
jhA1XJ99fErd+3H95s+qRqL7z/7X5Ivu+fKhIh5tfezjT150bVZOejY6o2hV
wJ0H1+Okk0cTWuHs5Znt3FTQ85xnZ1QnweWj326I7sF6+fWfZSxa945j1r5d
WF9eULNT0B022atVbFTwvzlMfYr2H6keN0GrCr4LKUNv8pmwe8CK38c9qOAT
mrT5NNvKTir83vp3ZbcGXuf1ja9hooKs3EryY/RyaY/JGB0V9m6fGX+GpuvM
9nVHrw98PfICvW7awbFOi/X41uv6N2hWY2oNJ9q0w/fHEFqZniZTfQsVfOwX
5Xk1SRCQEsIRuk5AVezvL1nozaTPEXELBFjbzH9+iS4x0N9Fi6YRJ3or0IJk
yoDXHwL0W6a7mtGXa4MPG/4mYPLft6ZZdNAj1/QtPwlgc62vlNHCfPdz+AVQ
CHDVepD4QWvj/UfOco3jdY6IRx3ovslAPbcxHH/sblwf+v2E97n3owTQBt2K
JqGjoyvSnEYISCn3vsukjfmVKa3m5RABzXyW143RdO//K6btJ+Dg2qFzE+hG
iz41UhsBTEVWNbPo5F5ygij6j23MgT9oAQbbSedWvL9pZZpOB/uPpkOu5Gac
X1yH7yH01msev4f+w/mIeqU4odcFS+Wi3xFwxrx2aA5d1Jt4gb2UAHmmXyrL
aDPXP3pSJTj+u0M5m3VJwOwh/0u/mIDfAjFubOi4q702oYU4/zm7f9JoX5HJ
gOF8Aqbubue7jt5D89rf+BkBNyqM7f+iOc05M4TiCDhkn3CD/hSeH/aql/yL
IaCHtT9+J/pmR93XvocECLta/seHZjpyzObmAwI+8V8U0kSn3Y3qqLpHgFjM
VdIDdNK9A2YtNwkYcL7vwqtHguMdJZzKTgSE7WkPFUFH9jkq9F4mQKKJOU0K
vV5g/NXuEl4/GNOhjg7e3uwdaE+A1NdE8Sto7buLN2KsCbivmT1XgrYI7/E4
ZkSAAl+dt9pprIdeodx6xwgwqgm+qIeOEakpuC9LgLOJioEJWtDw5cp/0gSk
3ms4fAntxhVYJSVBwL/5D2P30dOjTb3jwgR8aGgx6EFHWAUfT9tDwJDV/ZMD
aJb5G6RnnAQsLOiKTaAn5Om7cjhwvQ63b11AT+rs48lkxfnFddbu0SfBt9jw
Isft+P3se8Vs0XXmloNiSxS4vB631wk9Fip//ucfCgQnGW/zQlfuOeVR9osC
pe2fx0PRSSdvCgpTKcAu25+Sh7Z0077+bZIC3+iGts2hFS69YjbroYB97tRE
0BkSVGVfXTTLpUCd0LD8XbQl44vc51kU4Mn5EhmN3rVc9Pd3JgX6spplMtCT
tCS7gFQKaD3ND61HX6dERWnEUEA0zU2A1oAEo+MW9g1+FAjjvuTLhE7kC0ur
8KHA+OML7ezoGCWuiCwvCqSmGHgLov9amyi7ulJgR5LUB030k9W7ksU2FJiP
XbC7hy4xVnGc1aCAPhu1MgYt7fEuzkuVAvkx04wp6Nbte878OkmBiw/7y/LR
wtHHeAaPUeBTVDVNOzqPZWuLgQgFqsKDnu0wJMHK3webyxgoEBREPx6Hjo5s
6ChqnIXUJUZyKrooMae7sn4Wqj1Zf2WjFehEzcrezMKCIzdNFVrcqMs4tHQW
3M5I8Q+irYH51r20WbDmtbYTMCJB9ns/kRX3WbiRYud8BJ2ZJmgi5DwLKexX
vOTQNaKBx9UcZqFvm3eINlr+QryNvvks6M/fe+aCHhRdccpSnoUTDa/Gy9E/
LdJb9jPNgoVSDfkt2oujm6pENwu+FXW/GtEimn4ntdfJUJ7fRvMVrdj/zUBw
jgxicaP8f9H6HkHz8z1k4LZnttc4SwLIU2xNiCeDwnc2F310a+jAa8dIMpiZ
cXmfQ99ss1M+EEqGeD3+0CvoNQOf99peZGCSPZ4Vhf7L8kXc24AMa3QOE5/R
EpQ840E6Mlg7PDX6js7SGEssW5uBug/DdVPoCB0NC49fMxASYpG2iP5kOPf3
ycgMMGw2MN1jjOerJ8IjVa9ngGtNodkK7fJ9i0+c4wz4W/rKOaBpJXSrcyxn
YLD6VZYrekdL34UUgxlI95O4FYQejF9l5VOYAaFFQYUM9Kki54h0xhmQ/sny
YhxtPxQ/sZD7A+IN9ffOos9smXjYn/IDFoojwn+jfazMh2OjfkD1VXoHOhNc
v0ZWyWjPH6BMWeU5hKZ0a39LUPgB+qSpaCd0Le38T6sGzMNaAuueaHFJ9fTb
pSRgy7V1CUBLKvJIXX+K5wSHQe1IdNEXpjOtt0hgNf5xcyE6wWLqLS32WU7f
33jNoxl8W4IFX0yDgqhf5TK62b/QRj15Grb7yK5uNsX9fDQmUjhsGvKYC2+z
oYNJQ7knLkzDlFJ6jDR611OV+NAd02D7+FbRNfT1N7qUNpspkJg+8SsQTSN7
/OGQzhRskl6RC0MHnZ7hypWagietnrUJphv1LEXDmmYKBpftOirRYxydBWqZ
kxgPmuTljfFEJp5zd06AcNaWo1vOkeDYNVVGKJ2ARWqtJwP6AbN8GkPCBCTc
PbayF81sszM72WoCeiuEtyuhC8Q5OwInx0Gfg/FQEDqI79py8uQY7LdtcgpD
y7fB4cn3Y0B5EVL4AN1sQvuzLXMMItXXZNPR1ZyX3a5YjUGrF0W9Dt3i6bG9
p30UNHq6Lm4xw/oquDA8lTwCfVzJFozoUrUI82NuI+B44aIRO9pbps1ru+oI
hM/+VhFCyykecXToHoZ2+r18uujViRlf5fPfwVjRfjgG/bLVcm2bzgDYZy1Z
8pnj+xU9pK0K+QR/ZurPiqLvJK6anWX7BGGSEaek0aJnU2xjM3ohr5ZHUQPd
Iu9HFn/TA7P9qnuvoCULT9s6z3eDN3NUfzF6yU3D4s6HVqAzNu1+jRZ/nkV+
P9ECCSkHmhvQ2lPPRz3oW6DqUGnlJ/Rc1YpJp34TrKl8SVhCB0QffZ629B6i
wjMebLYgQXtb3ZidyHvY33UljAEtw3vajP18AyhbrV3jRvNIO0397aiDUB8+
E2W0U75V3rbKGjB/erBMG52jOxOweKUaxDv5WQ3Rs57eRdUCr+GLoFCHLVr8
2awkfVkFvDA8dNgJfdac00Xi7isIDhS+54lOYKYJ8rQvB9HPohoh6Fr+sQFv
xVL4t0nsWQSaPmk0ql22BD6JHdkcj2YxF77tpFAMgaFH32ahlbZKbhJsegFG
xRL7XqJtYpPLNFkLQGhQ0u8VestpHvedns+hW1pGthH9be4uk49fDmRfkI3r
RNME9Vf95s0G/wi5+b6N5/Wctx0YeQb6lcfODKPNeB403nv9FPjH5V9Oo+sn
T/iZFWTC0g4FxrmN9aD7k5BUkQHtCopXltDD++g4D1WmQ6ajUtMmSxKcP6Bb
zCH7BHxiTwhuR788qVx/dToVTtWeDGFFH/myKTCx8zHwzsDoHvRfrSLZ7zMp
8JtDBQ6iN1tp8oQqpUCLimqaKLpnmZe96n0yPHFVW5VCXwsOvpMYnAyeyerm
iuggMW0jca9k0PpPo1INrfmYodXncTJwz2ty6KHFrnqWmi8nwzy3tpcxupNj
yaowMgUatXU+WqHltzW0Kpg8hhRv3aMO6IkWn+9lRqlwNeNUlCv6jXX547eh
aaDerke+huaebvIizzwBrqXTOkHof1mPz9ioZgCF/0xuGPouU7NKv3AmNJwx
oIveGD/DKzZa+CkkBhjaJaJzWiQ+Sqg8A5dco/p09MnccOsLnlmg3Hv2QB5a
r1W6vLImGzj+GQcWo5nEXpV0cefCjKjpQBXa0WVuVu5RHtSanjtej5ai16W/
LpAPlwvN/3xEHygLTYy88xJOfLM4+w3tU/PyqYVpEbDRW5WMob80nKxYTiuG
mvPWrr82vte8ztLTzFLYwWw3yW6FeVeBQXSFqxLG5O3VeNA3dJaHrPWqoNLe
IVMQvZDO9rXh7muweXPpvBz6z8TAS1WON1Dm7PL5HNp3ZFcxe30d6Mb6T9ug
i+S5lXLu1MNIVfjyFbTWLdYAx9MNwESfzXMDLeJMrOdMvgfHjCGHDPT+SWnv
Cukm4Pqsv0BCk3W+Sp3m6YQbJyU5/c9jPtF9TbVi7gM2BxAJQb/7J3ZEyL8P
8iJOK0aibyuXHTaY6oPP/VcuPEG7quw/nPPmC4h7Pc1tQPuBX3WczVcYzd0l
z2iN/ffPKx5lwYPg28mny44+2WucWjwyCDv+HLXiQTc2v41+B0OgoKoXfBS9
J+ySD+PqEMQPhjafRZNqPa/IOQ6DJuuCWSo64tTXArmto8DLo/QxCz3+4di5
GbFRWBG+rfMS/TzeQFfGaBQKlXco1KL/Xts9Gfl4FHa7C+0bQZMfFMraiIzB
dKfpEP8FzC9b72ULSI1Dw7dUEzG0zpmC72GG45A6NdYhg/7eI3ntvvs4GKy7
1Wqg3wa6K/i9HIeqI3fTL6EZ5hvldvBPQHhkpW0BWrjz2er43wm4mPT3axk6
x+jov2bOSVDKUjN6g75jfZzDWnIS5mq6VDvQXYfcpFLtsL6Rp/mpG+OH0HLe
/jAJwrpcU1I2JIgVCRp85zsFW0ytrRXR4kvrkbseYH20zepTQ6domOYLPpuC
h34STcbosZ254eHtU7CUp53ng+73yycucE9Dy1Y/p2o0R3zAma0l08Cy6WRV
AzpQdyJGt2EazJa20Lehf/IYdVj0TgOJFJk5gFY64ft14vc00Ldm9K+hdw0H
3yiRJYF6ZLMm2JKgofvCemUhnoNCo+K10K3yHgm732JfdcNo7Az6fsaP6VNt
JLBzHQy0QUcV7h5XmsY40p8rv4Weeq2wVYvnB9SxcPF/QPv9M3/gcvsHbNs+
5N6ODiLOi3o/+AEGm5/WfkIvNL21tcB+aXj+sMUkWqX5jM2Hkh+w3gMx9Bcx
38so+uwd/gFKjy7900ZPJbVQhWVmoGpP5UAH2kiHO8a4dQbqme4N9aGZiy7V
ZvfOQOs/i+Fh9I+3b/4MDs7A0OT62Dz669foH+vEDGwp1ZzhsMP9GxHntJeN
DKd1+5bOo5OsjMsXz5LB9ETeiiPaR4VxsNuSDDYS/mtX0QXGT9kf2ZHBc/f+
TbfRlTJ93cOeZEgac9iag0704Z2885AMY/5/OAh06Y3D5XrNZCC7NnEuotu9
eF7+6STDb5vkPZvsMb6l87OjPpNhq9YJHjb03kthHhFj2F/vuiMgh+akzdX9
sEoGnwJ26SB0TeEhyXOHZ4FxUNpghwPmvyL7zyeDZ8Gs/ETVbrR/nQh8DJ2F
nEgt3gPoX7yD+eb3ZkH5hOXcUbT+C/UlvdhZ8H5y+6Eh+reh5eW6Z7MwaPOx
Ox6tkHfYbv7DLIgcH5BPQwtYKJvNNc+CD+tkRjbaq+0oaap9Flgaltwr0FZa
ZdI1n2ZBnZ+XtR8dG1E3tWViFl5Muhnuc8T++fGaCt9mCiy/9X3NjzZxp/59
RksBzYTbfGLofYZ+mQe2UWBEM2FeCf0zu+jH5p14vsx7G2ONHnrj7u/NTYFA
J6aeTDTHQuoHXjk8r1GfGwlfwvqyxeE1rQMFrBrq3CTRt8tD+P5dooDzoy/3
FdDDmYKBv5woEK5I914PvfZ015lWdwq8v2sj7YEmW2nskrpBAXleTvZqdN+f
aZFFPG8eNAz9fOoyxnv/rZaK1xSQEHg8b4y2ETlzgvENBWCxhNka7eP+8oxl
LY6fNqzhvmHR8wFEAwUSfyhUxKM99WR3j7VRgOn2fMIQmmXBQ3LrEAX+lFqb
Xb2C/UVxw9i9NQp4ev7W8UVbbWHXsVqnACF5X/EWWjllX/ThTQRMFb/aH4fu
1kzrq6MhoL+QabICndNhyNHEQEB1frXHOjoq7RC/NhcBQU93R0Q5Yf2evhCq
JUnAiu2LGwloYfUqzQYpAnz4VN3S0X9fzTxXkCGwfrsalqAZ+2guCRwjwObJ
B87P6Ngsac1BJQLUUjyzuJ2x36l9VDeqRcC22M63BegZJdqbF60IaJZL5ShH
Zx4DszvnCQgfuOL6Bi3T9Tw5xxp/L0jH04HWD5+zmbBBVyneINBOH5eNTjsQ
sP17noKky8b+Yz3xxZUABtGQygr09XyFnKFAAlo7DXa+Q3cJj3X2BBFw32v/
pSa05vF/pY038fdvX+/uR0sHRFfk30IbzF1bRvfEviTZ3UH7nJdRciVBXOqD
vtRIAhgbjpXUo6uyoobkUgiItGV724qm/8r5j+sxATs2U5p70amfQynLaDbl
pyOT6Mbad8er0gjgqmViYXAjQfj3sjahTAIEqkfdjNDFBaTsjlwCTpZGiI2j
L7RYdZwpJ6DO0FF+Fv33oYzbzlcEqMwrq/9BH3SW29OJVpdYsNx6FeP1P5N4
7UoCThXaRBxGf+CO1JOqJsAsX3bGC61cMyf47R0Bnk+Hc2ndSSA0sDZ4p5UA
+UM/9zCjw3Tjhva3EfC3gDaSA92hmShRiQ5/JeIuhNYsY+qZbCcgrdlLXhud
rKpyQLELvx+xtSUCLecgUd/YS8B+RYkZNg/sP5kvVl4eJGDinarVPvS2PL8J
Cvq5ukknP9rmcsktzyECZPT9S2XQhewtO/2/E6Bj+8HfFJ0sphRze4QA77tm
jCloNsWor34TBLT0BovxeWK+vF5fTT9LwJo6m7cIOoe6ab8fWqLiWY0kWioo
n5mMTkhq1FVFVxeXx3dQCLh4numKHfqNbZVRFBXjeyoxOxvtPFS1a+knAaIr
hftFvbB+eWY/Dlom4LyzsqMU+uHP0IJx9MPBjy8V0FMpVebaKwQs1P5WOoXu
0+OJY1kloCFEwdIFbdVcfjd1jQBL5sbEQvRvsurE038YL7xDLNLemN+LDmS5
0FEhODKASQmt3XuTthN9bWnPNg10d8semqP0VLDuNv1nii6nYRuioiWDuyn+
aJO6W2yu26jQN/y+tQE9Sl78ZcJIBd70/FCja/j+bu9nJlioUMbju+Thg/Mh
X1vfuY8Ks276Fv7oxtidbufQAnUCb26jk3ovZzxBx1/8eDMO/ZrPX1+Mmwo+
uaJbX6HFh0a+qPNQQV5yiGMJfb62bNDpABVq1VWlg65jXe/vuBXJT4VWZya3
+774fslLz6UPUyHWxrMlDv0khC/EG21h0i+Qht5hP3XwFZp8MmugCG2gZFUp
K0YFJjYlnc/owov3FWWOUEG/ylmA1w/jXf3wrNBRKvTQtn17hd4cN1w2IUWF
lGUJuXdo6frqkf3SVLhIJMQ0o7k/ywyaoX99uag9gL7xngLtaPaClVeb/DEf
lVbVFctQwdRQNOYUesjnY7+7HBX2az6cNUYXKfEy5KGnFBa0rNH7X4YzD6Ov
CzSsu6NLDf0j9I5RIWnR3CUBfc0s5YqgPBVsZt81paMpKp6SlmjhUUH+52im
IpqOh+jXrfNfa9CygTzBq+jb787J/of2O8+QJHGcCrrlbx92bjy/zi/UAc32
nH/2C9pDOk0jBf0t7Z7WKNp4NXugE/0/DEAhAw==
          "]]}, Annotation[#, "Charting`Private`Tag$12565#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
T9pVOCbRfGDUcpx0uUa7SeynkReLxk6+Nh8nkcINEXKw8pubQTfhLe+Xpm+F
Tfk1fU5Tn6+Pb9SBc7b1/VaAt365sckZXsOh4Z96FP2b7r2JAtjjkiar5xHE
w7o3ftoHcJ6cbbQXDmF+KA213w8LbEzNaYNdzTSNzWBF5pKRPDjtcsXGU7C8
YeecNfxvsrIvGhZKDrN+ZYp5uaLW+BM8Na09622C9XJoUbAzwvttTNcoN0I/
9DdRxAUWqcstSoBDUw5z+cJnLgn+PQkXNrT1R8Ap8yp8vLDAto7UHJj7BGPj
kQPjpHNxN9cE3CP4gb/PcJw4ZA8NhBykkb+NX4U/62N+lu5RvQR/5mtRzoHF
7n+OuQYfXp6y/izcnlWjcgdWkawKFoH1MnMj3sLzc6IbrPTGiXy6hxS7Mfpr
f0Pu1r3jZDJh+sRl2HzNvqeZWjif/OMv4mH1N/wsHnBu/DBPKsxa1iSyE7aP
63iaC4eeVnjZpIn9jS1Z1AB/bmtOmNHAeYoK+W+ZCfq5C4rhhCBeQzj6E2F+
4YfX7qthfWd5xtJglSNrVzvCJT4rft6D7ZJmLTbA045rFhXDxeyOfP/tQr46
uFXyKyyy5Nu2WzsRXxI2J6RM0Y+1/uEO2YF8W/Gsvwg+aukqyaOMeU69dOw1
3NTpceTtVvQTz9/8rIa/hU3tOAMX5dYv+gIfFyxh71PCeUz8LrkAJ+S6FT/d
gnrusNRh7yHMr0qla/U2oX9bfHKgDbZvvH9OXg7PP5lp+g3uWXNgZ5cs9qOy
580Q3PycI/MKHB5umT4D+//s9RmTQf5mNT4ifBj9objW4mxp5MP5XTXH4Bcn
08OWSo0T5R98j/rhuuySE0nimLdMjETo8K6xuMSd8HT+lagpuOqyoc03MayX
J8fJxWboX17KV0jDGow/YjLwZEHY00JR7B9t6JoLLGFYWfxcCPPDt1e+k/C9
muZfLvyIB/mzL37DOcL7HNnhJf7b/rAewXkv2GGfvgL1aunjMH64ouPD70Y+
1FP1jHhl+L/180lyy8eJ3a0LT07DfY2Pe2p50D+Y6479puzenvWAHfGfxbaZ
7SiNcDxXX6cMz4yX+XDDjs+0VrxahHx8acecCMwd/Um/gQ359rnsEnX4p5Dc
30EW/H5BHpkQWJkt9vXCPJPs/fTBns2cRpaJ868snmKSdqGbljyw84jwhfWw
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
YdeBrivyfEzyP22uBfA=
          "]]}, Annotation[#, "Charting`Private`Tag$12565#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.7520000002653061, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.7520000002653061, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.7520000002653061, 0.7649999997346939}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8923156743216586`*^9, 3.892315744880889*^9, 
  3.892315807952059*^9, 3.8923158471007853`*^9, 3.8923158904946747`*^9, 
  3.892315943728088*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"c5a65fea-af40-471b-85bd-097d57041655"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.7549387484049674}, {0.25, 0.7569940244455717}, {
       0.5, 0.7590598312039067}, {0.75, 0.7611356992466962}, {1., 
       0.7632209327200744}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0X1UzGkUB/Be2KKthGKktZMJNUUqeQlfFdOLyjYTeUlmozBIkRMtMqlE
XjrJy0qKWqSt0EyhUkbLshEz2ZSayZjy1Ez9hHTiqH32j3vu+fxz7z3fy47Y
yY800NPTC6T1f/ePJC9ru1Yu/jqzZpJwBsEI70kxKpYbjjqKoyOpXXPPXyxj
LcVEB2+ZiHr5s6bbOawQuNs93rqHOnTTQHUmaxN2WTfcOUbdNuuI9wlWHLqN
VKuk1HmWK1KPsZLR3D6UOdqeQGxcNv0oKwsVmYtNpNSr11wu/dBXAN+ZQYXT
uAQmw+Iwn59KQVx1fyc6EtgF95KH6RI0Z0ZPlTsRxD+fj/Of7yLHXsz1nEUw
QWKh1NevQayDrfScM0G52ru+YaEMEzcKdKNdCGSiHOs1ujqY928Jj3cl6J+2
yLx4x2NM6PuR/48bgcFg0Rhru6fo43h+8nAncB8WlgtK6vFGZmiVNZegPtnt
+SOHBljdu7G7Yx7BlAztYGHvC3C63h4ULCDQDqiUr5zl8Eq6ZlLoQVDQXfnU
7KQCroLvy6wXEZjZXGM0mkbsOTC3MnUxwfGt0qg8zr94ZKF3uxkEX5YUabYk
NkHbtnqVnydBnEudxOrha0wZv2R/nheBqqQu/SW7BdOTKlaMX0rwTdSYbZ/w
Bol+48LFywi4nkZDUZWteJ/wvecVj8DnCnvzrQlK2GriuT6+NC+bDbZvw1TY
UXGoO9ePwFG30qQpsB3Gmh2aPn+CceYfjOu+tiPeV5suDKD/r8kunXrxLfqt
BiTlgQTb3CqbRy1Xg2dzOt1+BUGRX0Te/S9qdO0fl3PmF5qndtKYzrPvkM2z
de4KJpAKfAyzlmrws++DmDUCgkTflFxJpwaSsl6XWyEE7Db/1/kpHbiwV8/Z
YBXBgrnJWSyXTgj2XGnZGUoQ9lPDoL6iE9at8h/+Wk3nPz2hjhG/R3nC6Xb3
tQTnR4TH8TkEEYfVHhnr6P1K6RWDOoL1HZZydRjByAPikPmxXXBKbLbkhxPo
FYaXqsd2w+Qw9831DQS7LpSeGCvrRvV906DJvxJUc9OMLaK1qBU0fkuLILDw
3+WYZKaDgm/PbdtI0Or0QrGvSoc7R82MgyIJbl4CRxPeg2KHpKirUXRvqbuF
zVAPPnFahgc2ExxKuSxuvdEL01AZL2orQTGxyTYLYDDn0zzzKhFBWk6KUBnE
QDN77UgZ9SZ+j11JMIPTMb99e0w9uarqZmAog76e6vcK6mOn1j06HsHgT+JV
q6Xe4v573+h9DKYqA2KttxHYJo/3NbrKYMwToSKBemjeftOm6wxqjJKeHKJu
7nknv1rEIJqXX5NKnRFatp53i0H9w46iTOphB/7ulCoGR+6Lkm9Qt748dclQ
wWCoLG5OC/Wd1IGNilcMij+e4bZTZ3lssM9/zWDd7Ap2J/XyP2ZKvJQM7pYM
mn6kvrf32RNxF4O4woOdo7YTnHWacypYR+8lua3m1LHqiyFshoF82gO5JfWM
gO2q2s8MnAsMa9jUI/QbCzIGGKjUHOl06naph0j4lcFJNq/IibpKlD/L+TuD
hcLNl12pz00x6R8eZqC9lHZuPvV/SHhv3w==
        "]]},
      Annotation[#, "Charting`Private`Tag$12695#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7544786270541284},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.008282417372535482`", " ", "\[Delta]"}], "+", 
             "0.7549286385179755`"}], "\"Without mirror symmetry\""}}, 
         RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
         ColumnAlignments -> Center], "\[NoBreak]", ")"}], StripOnInput -> 
      False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.7544786270541284, 0.7632209327200744}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923156743216586`*^9, 3.892315744880889*^9, 
  3.892315807952059*^9, 3.8923158471007853`*^9, 3.8923158904946747`*^9, 
  3.892315948352983*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"90d33cf3-9838-4790-a022-cbb613544b6e"],

Cell[BoxData["8.282417372535482`"], "Output",
 CellChangeTimes->{3.8923156743216586`*^9, 3.892315744880889*^9, 
  3.892315807952059*^9, 3.8923158471007853`*^9, 3.8923158904946747`*^9, 
  3.8923159485574017`*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"559c14cf-2caa-480e-b795-097d8ecf26da"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8915749726253695`*^9, 
  3.8915749726273685`*^9}},ExpressionUUID->"a0e2059e-a9af-471e-8507-\
1f3a92c01886"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.891574889536792*^9, 
  3.8915748895508127`*^9}},ExpressionUUID->"50b4ed49-ace9-457b-a3cf-\
fabf89c92772"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.891574968909479*^9, 
  3.8915749707799315`*^9}},ExpressionUUID->"6f59ad83-c66e-4149-93d8-\
09affc701b91"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.891574450937738*^9, 
  3.8915744509453335`*^9}},ExpressionUUID->"49de2d5b-bafa-4ba8-b14e-\
630cc8bcaf83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\:0417\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:0430\:044f", " ", 
      "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:044f", " ", "a"}], 
     ")"}], 
    RowBox[{"(", "MS", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1", "=", "0.100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", "0.114"}], ";"}], 
   RowBox[{"(*", "\[Mu]m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Np", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0423", " ", "\:043a\:0440\:0435\:043c\:043d\:0438\:044f", " ", 
     "\:043f\:0440\:0435\:043b\:043e\:043c\:043b\:0435\:043d\:0438\:0435", 
     " ", "\:0431\:043e\:043b\:044c\:0448\:0435", " ", "\:0447\:0435\:043c", 
     " ", "\:0443", " ", "\:043e\:043a\:0441\:0438\:0434\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
      "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\
\:0441\:043a\:0438\:0439"}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:043e\:043a\:0441\:0438\:0434", " ", 
       "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
      RowBox[{
      "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
       "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
       "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
      "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rsi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Isi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"980", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nRsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"n1", "=", 
     RowBox[{"nRsi", "+", 
      RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rsio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"398", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrsio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nisio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2", "=", 
     RowBox[{"nrsio2", "+", 
      RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rh2o", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih2o", " ", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"104", "+", 
        RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"nRh2o", "+", 
      RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ret", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRet", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0435\:0442\:043e\:0434", " ", 
     "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
     "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nddEMA", "=", 
     RowBox[{"nd", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "Vet", "*", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
         RowBox[{"2", "nd"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "nd"}], "+", "net", "-", 
         RowBox[{"Vet", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bdd", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
      "nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"n1", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", 
     RowBox[{"n2", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdd", "=", 
     RowBox[{"nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p1", "*", 
          RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
    RowBox[{"L2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p2", "*", 
          RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ldd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "bdd", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
          RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "pdd", "*", 
          RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
         RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
    RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\:0441\:0442\:0438\:043b\:0438", " ", 
     "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
     "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelR", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"label", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"style", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       "12", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"color", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"color", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
         "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
       RowBox[{"LegendFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"var", " ", "a"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RightWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LeftWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L2", ".", "L1"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mwms", "=", 
     RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
    RowBox[{"M11WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M12WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
    RowBox[{"M21WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M22WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "Q0"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Twms", " ", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rwms", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl", "=", "0.698"}], ";", 
    RowBox[{"ll", "=", "0.713"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl1", "=", "0.8"}], ";", 
    RowBox[{"ll1", "=", "0.815"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"G1WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Rwms", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dd", "\[Rule]", "ddf"}], ",", 
         RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"G2WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"G4WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]2WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]3WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]4WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]5WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f1", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f1", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]11WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]22WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]33WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]44WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]55WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS1", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]11WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]22WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]33WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]44WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]55WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS1", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS1", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f3", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS1", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f4", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f3", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS1", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f3", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f3", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8903692845011873`*^9, 3.8903694350045147`*^9}, {
   3.890369497038045*^9, 3.8903695006116133`*^9}, {3.8903697816977234`*^9, 
   3.8903698044863844`*^9}, {3.8903698392529373`*^9, 
   3.8903698421980877`*^9}, {3.890370237407218*^9, 3.8903702419453535`*^9}, {
   3.8903715913472896`*^9, 3.8903716469006186`*^9}, {3.890371758310467*^9, 
   3.8903718552286673`*^9}, {3.890371892427713*^9, 3.8903719077967196`*^9}, {
   3.890371947487087*^9, 3.8903719861502123`*^9}, {3.890372035053011*^9, 
   3.890372043181467*^9}, {3.8903721106569815`*^9, 3.8903721115716696`*^9}, 
   3.890373393614624*^9, {3.890452597243334*^9, 3.890452624747986*^9}, 
   3.8904530648580437`*^9, {3.8904531382733727`*^9, 3.890453148731327*^9}, {
   3.890453210528209*^9, 3.8904532112397676`*^9}, {3.8904532643141003`*^9, 
   3.8904532898751945`*^9}, {3.8915752633460383`*^9, 
   3.8915752639712973`*^9}, {3.8915926812191825`*^9, 3.891592720417348*^9}, {
   3.892316051081355*^9, 3.8923160587769814`*^9}, 3.89231729459544*^9, {
   3.8923173394787364`*^9, 3.892317376804702*^9}, {3.892317406908793*^9, 
   3.8923174231110024`*^9}, 3.8923174734978685`*^9},
 CellLabel->
  "In[1768]:=",ExpressionUUID->"a011b9d2-9d19-45d8-a266-13bb2ce4df89"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
b9ateJLn6dJ6WSPhT0g9mEeZIHNumPeNx7GbnsLBbeWjKlniIy/35M0szsfo
x7XfFReR/fdj67eJFwhbu+lA8JIhqFaFlv+vguuOp/r9oyKUfEMaiNKW0iSV
crSEVKIkSUoiyShFVggJDTNllpkdmWXvGbLnvVdGdK+7idLv8/vz/frc53ne
z3mfc573+59LPZaDr5PgPStLReVd4SpWVi70zpy+lrmRCteis9EFfXmYTD1X
ILaFCorn8S+Cc/mQuHfNums7FUGCC22rVxchs/lW/cGdVNS4N5f6iX2B+i6r
zRG7qPCwyFo28e8LHkw79V3fT0XSmLpJSU4xhHQ8lSqUqKh/JacZ4FiC2Kzn
rzcfpOLh25EY+q5SKIsFTvkcpsKp7nNBSVcpWuzC1X8eoSJ6xG8DVbkMZu0x
78+ACumJ2EdrXMvwZ1/Sn/RjVMjLL6npLSpDcHDGZdGTVGwZ+E9tL6MM8uzc
7PvqVMiJXhmVlS1H+cXi/zo1qHj8V3FZ1ulyGORWWSifoSKEdFtg0rwc06ua
Kt+epSK01Gv3oHs5fB59X/fnPBX+45El74LKIdPd99hYl4qqE3uUlaPK8VmZ
0lF2kYrki7dW18WW40z4z92bLlMRMXlM2Yz4Tpml+3lfoWJn84POrcHleHxl
dnT8KpGPpeDd7Z7lEC36p6ZlTMVhxrzoC8tyJEkJRqYRPr+ttO/jA+1yqDov
n1luSkX/LHU9r1w5OvtX6dqZUcG4u2qn0d8yWB2RSf9uTsX5bSrPk5vKwBe1
eckBSyrOvn4tvSKsDO/+7jANt6Ji3bE+yYorZdhrvL9kzpoKSevz90fWlKGu
5LDkNTsqnq7QqjjxvhTcJ5rfNjyiws3VmMfGrAQvSDryXsQ7JHL82PRcQTE2
HzPwHnOiwuTsyhl7vmLo8pqrpD6hQrwy047t9gU/b1qH/edJxfiLorHJrCK4
Vz5k2HhRMXE2W+RTfyEyvLySFJ9Tcejh9oEJmQIICX4QLwmi4uAOVnmA2WeU
Lxucak0g7ie59HeY/Eek+dml3U6monuLWkKSRBLClwrc+5NCxUflfV8kRBNg
K7ibti2Lii+UxzWJm97DyKcyozib4GvYQLOgbzRO8xvY6OVS4SibPB7+6x3W
8XnQ3Yqo4K3Wn8jZFwIhz1WfVhZTcTHb2a1eOhBcnhS7lFIqpnrjXRodAkB5
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
xt0=
       "]]},
     Annotation[#, "Charting`Private`Tag$47495#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.892317479487427*^9},
 CellLabel->
  "Out[1813]=",ExpressionUUID->"040f9c01-2e4f-4aeb-afd6-4f18442c7a82"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
clak3Bx9w3u3xQTamOESvw/6fyCU5pI=
          "]]}, Annotation[#, "Charting`Private`Tag$47549#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
9C2/PZfG0Y7nmf9+RP8P++R/iQ==
          "]]}, Annotation[#, "Charting`Private`Tag$47549#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
kZsU0Q/v7bkygV4jF2x+C/0/fznMNw==
          "]]}, Annotation[#, "Charting`Private`Tag$47549#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
iwX/A67D5rY=
          "]]}, Annotation[#, "Charting`Private`Tag$47549#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$47549#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.6980000003061224, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.6980000003061224, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.6980000003061224, 0.7129999996938775}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.8923174827114105`*^9},
 CellLabel->
  "Out[1814]=",ExpressionUUID->"d20bc0c0-9f9b-499d-9e47-f54085825203"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV13c4l18UAHAkpewVUiQiSRp2dRBCkZCdkBAVqdCSsstOZUVGVrYSRWST
nWTv8X2/g0hRwu/8/nqfz/M+9z7vfe89556zy87V8BIDHR1dKD0d3f9P45ya
2NhYAoSKl406LWmgeiMRUtFsHxOmVS1oIK18eyoHrW8wuTvfjAYbG2UOVqHT
1qNjAs/RoGQitnEavWz9VE3yDA0EtrstHY4jIJnBQ0NCnQbDwULn2tDLc7ZK
nBI0aDZY+vsd7U9/TMZIHMdv63o1hm7zyYl/upsG4a8DqYvo+wO3+9hF8Hs+
L/hujyeAWT2j4Bc/DVKWG4uc0DdlQjRubaGBo+Mtjg0JBBSbnAcFKhUsLnIE
sKJHm7JaBMlU0L/wZmUbOsrERvvfDBWOmI5NS6P3+n2hK5ugAt1JvQoTdLAw
036BASrE7BF3zkYv7+re5d5Ehcap7pqzLwl4wXZ11400Knwcc1WyQvtxflNm
T6FC3tCWfAe0IGwhMpOoEP1NNe4uelX/8VJ3HBVs6nLcXqNjXFL82SOpsJzm
t+MPuly/OWHrfSrstT/i+SqRgN/OAc6bjahQmmqtko12q435621ABe2JoPVi
9CLTMsdPPSo42Q0FNqB11gNqv2pTIdMmIGYWfZXbYt7jOBUkz/eWHU0iQDuR
I0NtL9rk3r9edOLkQkXnPwqUPkuvGkcf/+NGWvhDAe1vHX5UNOeP0QOcSxRw
MhZnpXuF/6dpzybNeQpkGrbtkEBbUPmvB09RQPKMCNxC03Sy5x62UkBCu/Yh
ZzKen/57F/jiKSB6fYJnO/qMxe19ky8oIBTHkCmG1s0QKc2LpgAXVbVNAd2/
JLlBOYwCa+EVgtZoHSMaVfIhBbq/lxRnoxvKz9jZO1DgkWPW1IkUAlScR18d
lKHA/YhGLz30LH0Na7gUBbzKZraaomM+auSS9lDg2tY9h5zRBesf3CKEKWCe
n+IdgWbN2ehTyEEB2aX4bUPoaO3n5+UWyDAUEKbjkUrAA/PJR8JFZBievJrj
g9ae1xRIyiXDqLoe+xP0Bd3kawJZZJhc2/otCT1ikK+4lkQGskewTRN638Zo
r8BQMvx28PMUSiOgNWltMdKRDBwn77yuRteoifbrbyMD12vzza3okZRTO7Zx
kYF7g5LLd7ReLLNQHwsZ+CqXZKno3DtPJHUZyCCkcKuc9zUBe/699Rmh4r5I
uH11QruqJgi0VxGgvsmBnj2dgC8Wne7eF/HcZ3YX8aPVJT91fT2P69I9YS+K
jrIg5Yqa4bkLFWmQQ1N5pYpzThMgzzMQYoW2/2S44bocAVK7DPiz0dmsiRNF
GwngUlE+oJlBgC9jq2//KxIUDGaO6qO/EUzRenEkOOO9LcoMHXajaKH0KQlC
Pi8uuqA3j7x09wogAZN2/oco9M7zX61iXUjw11hMaxT9OKy/yPwICSausZ2/
m0lA4ahZSlDlDARpHhv2R4eriJTovZ8BGaErFyLQXyL0xDfnz4BXU5Pta7Q7
k1y/VeIMsIr5O7SjD2+Q+uN7bwYU+lZcd2fh/ioK5H+Un4EnJ4hHX9A8bCW/
7VKmQVaQn7EHbXBM4Nq7mGno+aHlP4reVN+qtRI2DSKJaYG/0DBp1mdzdxre
LV8IEc4mIP+3WmyU0TSM5PY8u4G+qbb1ujf9NBzmr83c/oaAde62gVXDKdDo
nVkWR1963cPaeXIKjGO26siid8Y7Mz4/OgU3+Y0IDfQxu52ri+JT8JZ/fO81
tHuYn/7G5Uk4IkD3pgo9yijFYhs7CfKCR3Mv5RDwqe7dpacdE6DVf2HVFX1W
puDFg5oJMInz1buDjryQHWJZMgEegl9oYWjlZ5m+4/ET8F7QQqYU7WHLvXmf
wwQobvfK35KL58HpyXjs0jgoC70tzEcfz3oZGsU6DjPCjgZl6OH23jm79TGI
3i04V42e+ZDSsXt+DGalfKR70E+B74dH9xikKJ3O+IdOf8Ezbhs3BltNJxN0
8ghQyjA5orl7DAYjeYIm0LWk8g6xvaPgvemW9bYCAg7xgRLX1kE4pEpq2YVW
pFOX7ZgYgGkvSxVp9M+Fb6ku5QOgR1bjV0O/Zvj+ReXqAAi1snU5o70aYgVP
tvbDh6hMzU9o96pTGqqBfbC0Y1D6UiHG40iw7vRkD7gdObFSVEQA7+CqRKVN
J3wu0CwtR3edqd48Id8JXPu1b9WjV74/ojGydkKxuN5cHzpykjdDs6wDfvOZ
TtAVE8Ce55vWztkB9/44f9FHfwtqznIKbIXAT1HxZPRM5nCai20j9Co/M1tE
t94KG7TmaATJ9y9419ChNTNZ/pUN0JyfEM75loAtPhfEPXY2AEtyuq8imuMk
l7HQSB1E+X5wCUB3ZXcOm1ytgUTtcRXRdwRczwvc2xVbARZ5fQ370C8+04mV
sVcAL0+nkRy6sLCz+nFAOYSMVLpoo4e5yk3XPT7CXY+X8dfQXOo1HzIuloFZ
mtnKBzTdrLFNles74NliEFiLjgqw47f4/RbaXU9yt6H5OKfv7vZ+C1oq8vvG
0MyajoImkcVwpIvbclMJ5m8WBqv8+kLgpGv/YIQ+l/W0zXcsB1ou1WudRycV
bZjy48+BoC8VXQ7ofItG4pLhG6B7kUO+jfY+SwqdasuC2f2PBV+h5+X9JTMo
6ZD99GF6Fvr7OSaxm8rpcOmP16FiNNuLFluLkNcwWOuoW4+uEq3xDlVKg2ZL
zTtUtFq9jq7Gh2QI+HyU6Tf6yttLPFGiyaAmcSRqHd28vJ9BOuwVlC6IZnO9
J+CtSD/n++FEyAim61dEU2fjtz5+Gwd2c0uX1NHT44ybd32MhZ3n5uZPobkn
H+WkN8bAc5Fh5gtolaev2NOWn4Pf+49K/uhMoVtmdrlPQcvwxrNwdOexCCPz
wSjYTJOaj0Ur5Pw69oU7CkJF4zLz0BG0M5c1EiLAoOIsYxm6MjXmY1l/OHCZ
MdvUoOd3bdYTDwuD56Fe23rRF/YLZs9IhoCZpOyNcTS9Vc+oOccT2F4z00ZF
bzgyEnWM+TEMn0+SWkJPEbxKidzB8GrZJIC+lIDuIxn2AQeCwO4p2/hW9FRR
XcW6VSCIydQf40MvW3kzcCcEwHTj/VgR9B3VvI2NVH/Iuij3Swr9toUnT/yM
P1xZoxrIoeXEAn4drPEDmdi0HEB7D6iQ5rX94Mdhq826aI8BjbTLo75Q1MZt
b4xeYeI1Twj2hZuXv1Rao38UHT4ZouELCoy+2y+jn7cyVylz+sLfRGXPG2jl
l+3imXOPoFxpoes++lJeLOXryCPw7s6SCUL7XPN/Vj72CFRdbR9H/f99ghvL
Lvx6BAxbBKYT/h+/qrtaJugLdWkdahno37Sv2xvO+kIQBL0sRPs1c4w9jPMF
3X748xHdnyuzf3LRF1huLRnXowNM1xanbfygjT2/oAMdbfpH/dGwH0RkO7AM
oHu2OCjmXvUHI82dTlPoXMZYNmu2AOAb/VYzh6YfMuJ/XBUAvXdChf/+v35h
9Rpxv0CI49W8y1iG+TA+KlbMPAisCv71sKFHHHJO3IZgGJtyCduN3kL6a0KG
J5Dms5u8Hz3Qz1A2Yx4CDtsHNBXRyknpk//8QoFsoLt6Gr0v9kU896YIyKHQ
m5uitxLqeltLIsA1oOytLfrX+yzRy1cjYfGj5BUP9I83NXT7f0VBiclogw96
+dzh+Xt1T8Fr/sXuJ2iSU8F3psRoWN2zaSAJbTloJBzj+ByYoqZ0mtAOyQ6H
dCzjoFH65euv6HifMhHGK/HwpMGYfhjdq8/UH+aXAByrNaUL6Eel7Xy9LYkg
4JQiIfSBANVdiX4nBpPBS4voFEd3OBaMffZMgV4x2XsH0Pf5mn+78qXC87GK
DnV0+bL0WTifBjyWfbcvowcyotMn2DOATZ+jpQTtzjJ4rpghF65Km3pUoXfL
LlWWtuZCy5ZEkWY0RViH52Z8Hn7fvltD6JJDizW3hAtgs9rJnYwfMT7vyjDd
6SoEhiPebmfRe+NPRKy6vwNbrjpBS/T65BcHOeo7qPqxtc4ebdR5juTrUAIP
cmMFvNAmXGp2Rtbv4d+ed9WJ6JXihr1qFmXwW4DKQ0XrSm9Te/CgAsjr5mUB
5dg/tdFag2VrwIDb9nAk2l+p8n6oTw2U7HHKjUerDWZMTHTUwCM9j+QCtPX6
7khv91oQjI8K7keTeSrzxcrqQFf+i7lMBZ7vhRUhNsNGyL5y9O83tNKDFPGT
Ka3g3LdTRbySAElqx60liW5Q6RH0O4C2UlMIVDzbDSxf+VqV0ApMPNpOd7oh
r4Xtgj76RvHezsiWbpivXHvkiT5s/s9m3fUbeKUPNzehXZTmq0aKeiDgRqLF
NaxDJ0pVvVj29IGpW1yqFzp01vC4yek+kLz6nPoIzTz5cYOvex80O4R5v0AL
LM2l+n3qA1YL75Qq9Ln8I+qi5/ohWtWazPUZ69DdXoMJ9wYgmXXnnfdo2TLK
ckTxEO53FudndNNU28PYr0NwL+xIVjP6+WLkdv+fQ2DGfqp3CL31V4zFxsPD
wMHpJc9Yjfms/e+urIJh8ObpWjBAU39Xy95OHwHL7QEuZLTH9KkagU+j0GjJ
uWER7c/kL3C6ZRTkExLiVtF7PPgZ3fpHgWtHcRNHDdbX312zQ36PQvPOUQkF
9KhQTbeAzBgoiipP+qIPbuRkC8Z6iHfvrNWOWqyzpV6EzjmNw+NEpVoJNJlO
LfmaxziscfvvO4SOdUgaHfIdB9La9r9a6LoACd7QxHH40K3zwg09dVih8sDX
cbD2ed1Zg663Ka6NVJqA9O9WWs51GH8GxwqlViZAUC8z9yb6OrtnQRPTJIRX
/+R5gLZrdX9pwTUJXrmPJ56iDS+/u2e4dxJ0fUt9KtD2Nu2/4k0mYVaG5yNH
PZ7X+pItqXmToBDw5cB79B4JzmKK8RRoQ/pUFfpoT/2kivUUWCz7xDej05+V
ez50nIJ7zvKbhtFrl2rnqbenoFo/eZixAeNJ/WmgVuIU6G/zDDVE86Q+KGCb
mgKHTFEKDe0+4CCn6TINXrarr5bQVcJUb7Mb0xAs2GtC34j179ljSXZYj+eE
hFbzoNOCayMsn0zDgttyrAo6g6Xnylj2NHgrtWkHo41ve0VrkabhefPtdLEm
ArataVOqrGYgr5RH+gA6jfgbZG4/A/Xp+YVKaPaG+HmSywwsPZoq10frnf9w
jnpnBsxUzn71QguKJ9UGxMyAQI4kXSt62oh7mqdrBhJCv5vfasb4VEjxJB0n
wdu77iMP0A6qGfHXNUnQcpn10mO08OHltYVTJFjVPOGWhGaok88bNiOB9Vpe
QBNaE+R/W7iTQMQ1oHjHF+x/eg/F/EglQaqBHGs9+kGRxL4uetwHyTrbDnRF
ZXm51Sbs09aNS/rRpYwxjGMs2Pfm3bwwh2ZlEerr2YZ5k+VtIX8LAQsaL328
9mMd0HjIxAWtnXZgNc6UACY12SSOVsyPQdd/PsW+LJi/6qcg+lKvBGGPfQPL
jzPa4ugmbZVwWayruZJc55XQsX6Tm0sxj+5czTtxER3SO+cRhE+Fsv2kd/h0
EzFXl1sgwOngvoOWbZifPjSXURXIEHRat9seLd20612vChkyHS97XkOrs96u
rwIykF5mVDxEy8vaH/c/SQanLWK6meixg3abR/FGdJoQuvgLvedUkMDYTfQz
tmfh7QQk1+eEyubh/AX7FWPRyg4+opmFOP+X0wMpaB55fUuhdzg//ZNdJejK
KJamvx9x/LVNeYNoP5vTGyOa0CfpGvZ2ELCo1e4mPEmGy3/ml2vQZ8Jv+FD5
KBCh0+nShpbcb6KoLkiBktiC4V50yyaFx9E7KMCo7FpLQ1f/M2U9IEaBpDvU
8G2deJ9GXmc+epAC31am97ig798wDizTpYDa2oAxVxcBjo0KHdZ3KSCwob7A
5isBGyc1Snd1U2Dw+RF3Z7RfkYhxRA8FXkmlHr6JDoi9UvevlwKShj4lgejj
1/cdah+igHyycnkeOk7qqpfFDAWMIb/hH/rMjeI2lr8UCL8bMxzTTUAjm1zF
jx1U2LjozNL5Dfd3djpW2oYKR663JfSj3WaT5fntqGA3e3D/JLqbJREY7KlQ
RVrWW0ILh2x82elIhTtDAeE7ejCf32wvPu9Khdn6FC5ntNWDu+XS3lT4HtvP
v+E73pc2fPsK46iQBbricr3YX6u+JtLaqTA8j0UUOu/w33jzTirwpEVO6aAv
u4SNsHylgvfmvtfWaPqOIhHXHioYdzruCULrG0mXiA5RYc3OX2IA7Wdk+vAk
mQqGAVV7H/ZhfxTW2ha5gQYrLfIyrf14f2lJct46RIO2amKwB33u5PzVz4dp
8Ko04ckomr669xuLHA000hiIn+g3joXNrxRoEHK3LVVwgIBd+px2FUdpsFPK
QcAJvdPFnqNZiwbqgc8YNwxiPUGavatgQYPHaov9ikMYDxuH58O9aXDxiqP5
CbRqktdi+QMaHH3R/10PXXqwiZvwocEstarb7n9ncOQc96WBYUxoWwja6HyC
5UggDQTm9lSPogd+mXksRdAgM8E8K2iYwDwrfjEohQYNS588e0ewfqNY6JjV
0GALi0TdONo0/5yCfi0N9EXCuWjoG6mnbp+oo0GP9oVc+lGMH+bUlX0NNJiO
XR+XQmvIyGz91UwDxqOq+vfRVtuJQccuXJ/PZzHRMQJc13Nsu0dpUL65ttNl
HO+LYyfiZlZoQKOLa++aJKDtpKlil+QstCrfr7g6g/F3r9op3nAWCMuDZwYJ
zF/cmZVaN2eh4rtw4nEqAbPPHsTtjpwFeLZ9qHsW6+GWecnonFlYUyJVHp/H
vLMuPC5UMwsuItVRgz8xX90OqnvfOwu8s1eY9X/j/idltyeTZ8GDz/BY8TLm
vf3GuTZ/ZyHAR8P29Are/zQfm2LmOejq3LS3bBXXJ/ZDKIpvDlrte0fN6cgg
dxlK9+6eAx/DiXOzDGQgz3coGsvMgatE5TWTjWSw+KpW2qYwByzHMz0XNpFB
wzKO94DaHEyr2InZbSGDrUDG4gGdOfCMNgmrYyFDgpmcppPBHLyXMSNZsZPh
zUsDhZemc3C4QGq6gRPfLx+qbT8/B6N3+Yq60B/A8jwZHXKSwXsIfW30Mo3R
Gucf7uP9if7crLughI5hDdbcyfV/3goPT0X/c55Ju4lW3f9++60Lc1AvnnZx
FzcZinsrnnPazoH7fPgBaTRvbATPPrRwxd0VefRv0eZgDbSXsdHT02g25ocW
nuh9vgw1nujLo5efDaIjRm1E2/6f77X3zdd2c3A05/RsL9rCNNj5E5rwVPww
gZ7NVzD7jlZn5zD8g45WDxNkvjgHv45VPhTjwf8591jlCjqF+Y3eAbQ1WXDO
D63/7bmAMtpd5krcS3TmlWuFZ9COx2x729DGihb3LdDMZiwuM2h6Ri2dS2iq
ZeCvdXRe+0FeN3Qd5Zsnv/0cWMTvGLuD1s5cmZdF/wefov3V
          "]]}, Annotation[#, "Charting`Private`Tag$47643#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwV13c81V8YB3CJREIl2aJkr4yM6okWCiW7IRmJCmWlkktkhIhQMiI/ZGVv
MrP3yOpmXXcq7ZR+T399X+/Xvff7Peee5/s5zxG/5GbqyMzExJS0jonp39Us
rzkpKYkMnYF8+n79DDh0MwUy0Dte6o0zoeW1by3koU3UI8Qe9DGA9a2iSiO6
6lH0YGwvA8rnkt4uorm2yLVkdTNAQMj9u+pTMowGymQ0vmXATJiweS96TqCg
qLqRAZcve/GsTybDwT1worqQATIOaj5pKWSorhgLWwpmgJR+C2FLOhl0hNOI
QZYMkPCY4xVCp8xUxtRZMED4KXP2brTFDt/qb+YM2Eo71LsPHXuAzeOyGQPW
ousEL6AH5AQc9U4zYHisvCQXzVdJ/D1tyIDAyzkLh1+QIe50G3v2AQZMh0QZ
eGeQwUjSWtRVHMc7fy0vAM3Z6RTtspMBRD0j7gh0kPfJfVfEGDC/tmkkFe39
y1vaQYQBFO+wix3oO4e+3DolwIBvTvd9hDPJMMNbtot5CwN4jvu9bELn1WkW
NP+lgx6b0zruLDJcTPtIezhBB2L2cDE/Op1FUc75HR3uGR52kEB7BpJC9Mbp
UBu5s10d7dBq/PjLCB00eCcfnkMXdKmSjAboICt+ij8XfXxqQ/FwOx226mgr
Hf0Px6OTYSJfSoe561znb2eT4cXEhYKuMDqEHj0wE4w+ecv2jX4oHRSFr9o+
Qn9far7bEkIH344Ou5doFpVCWkUQHTbvDnbqQ6dMnveNukuHfe9W3Xbl4HjF
aik/3OkQcZgc2IU+ZCZOqrCgg7IgP8somsEhuZXNnA6jH48FE9Gf1aWKzc7Q
YWdK5oOv6IMcTIZUEzqU/bB9KJZLBlPr9UOsBnR4nz8afxPdwHWDi6FNB1X+
lmyhV1gf6iHed0XocGSc9EMS/eLNbGiaEB3MEjcZKKMtV9Nn3wjQwZP/DPkI
Giq0HP5up0Mp/6zMdbQ8a6eTIxcd1ASYXjWi/wujJEyu0UBDcH++Yx4Ztpsr
BNrN0ODYhO0fN7REa8olgykaWDwNMvJDs3w0O6I0QQNvwS56FPpL2Pd1X0do
UCFoo1iJ9o5UknDuoYGmkG8hRz4ZEq0Guig1NNAWLn1diN7L6vPaJIEGJLHL
p6rQgp+eRgjF0yBul+ByE1qIq/niQiwNGLIB8qNoQ/rQyo0oGrzQOvnfb7Q/
n7qnVzANNlnOJxsUkMFGx3Zo+00aTMXwhs6hGT5Vj4pP0iAsvn0PHf1Ifttm
LUOcX5Jf6zf0vtNNqnXHafAojcjMUUiGGzpiXvV6NDhSmHdXGe0R/OVWpiYN
8ruP3LyLFvW6xfN7Fw382bwu7CgigxWvbnPLDyrsPbTULY5WLm94XP+VCou+
Z3Xk0R8by9TKVqhgRNHl10WrqJ4fS6RRQbiHa9AFbaAeJaNFpEJ1bPbRevS4
otj+iTYqfBeZknd8TYY3z4Rj/WOokGth8swNvfWb4xx7FBUuRDex+6HbeiVv
xoRToY0pZzEKPVdA14oPosKTOa+0SrTJiOrodS8qqOVw83IW4/9zu6nW0YoK
7mqHV4vRpPMNqTpCVHhTdLSyFn1C+crPBzuosFVB36sNnSLVerN/GxVKJI2W
36E7CGPl5pxU+MZnOcdUQobLNdUU5T8UuPPTpcsYzSE/ECc5Q4EH9bHPKOhT
S5e7ZpMpMK4db/UFnVBXuCsnkQLSFQnb19DPC3s+usRRoLMwOXpLKRmWVzYO
EiMowJmeFaSJlmoS5Ij3o0BsULVrCDphYhezoCUFUvRndSTKyHDkvw/jVzgp
YFPwrl0Ofa5DQv0VGwW28w6cUUezDO90IzFT4OH7Bld9dBpt/aVTP8lw2/v5
s+voFZYTYXMLuI6ZVqvVaJmaiuWN9WTYwtRXfaYc6zXnv05RFzJ0O7YdO4/2
UpbwKnAgQ2hX3aATevW9h4CmLRmYEvIot9A+9gnKWmZYdwrhgmno1Pd/6z4d
wH3k7FE/Grqu7PU5dR4y3K+o0QquwLxmfdPfXbgEx0xvxkej+8RZotfnLMFG
uuynJPSBIs9fKi+WIFLiaXYBemhXTa5X3BI8ifTdMY62jyuTTfBdghx79a+y
lWRQStt0XBOWoJe7sKgf/cdxaj65lQSPcp04J9GQpjj5uo4EZ46KOi+gozhL
P9WWkWDcL1LsF7rWbtmg7CUJPiy4Ru2qIgP3pLqiQjAJvtRIX/VGT5lzDijo
kUDA+YWUcDW6s1WEp3QRfI+RByTRPzNeKVx7tQjju5XvKKGJ8FSo8cUiPPlQ
16+HdjTbZnc8ZhF4z767dQU9cPGn2MS1ReAy5ukuR8uJdkSwSi4Cs5q/++ka
zC+FE5vEIhbAbmur4Fk0Sb+zRYywAI0fN7U6oGekXnfz+izAvfwkAV90eE9v
3OSlBfi9p6wpBa00MZY+obUA3wRovDR0YaBJ5OOFeaD8ta4KqcV6PemsnKg6
D6e22anGoLv9/TS3SM1D+R7n/Gdoiuhyjp/gPAQaeacXoTepJkSIrpsHwWex
YRNoSf4Dadk9c2Co0WWtWEeGC8x1HFX2c5B7df+vEbS4Gm+2c9As8AQc9iSi
zxlWsQx5zoL3Y0MGBd1f7MUn7zQLetVWs3/R7g6PFHL1Z2GCzatTBuswaEcG
6wjnLHBk5D+9i+ZyK2afjvkALu9EdSQbyLCmWysfFEUEnVHB+0pohhmDY70/
ETiH+Hq00Fev6fl6XCNCQTeXrTFau2j0r8BJInxqWAv0QUuHR44nbSSCb9ZM
Zwc6K6VmLv/3DITcTLG53kiG5AoHY0rVFKRvFvWreIP5r/GnZnB4DLbLMM6J
tJBhZKODGn97F4SnaLVIoXe+XHmX6N4Fa9uC5failyqkVXUEu2BpTejXMXRA
Mcmdfq0TqocNEtzRn8RzLY/s6IALAS8HmtEvivJiC262QdbYuWMurWTg4WZl
XrV/A4JG2fme6FPG+2/v4nsD0U2fee+hjdK9+qveNoJvfvjcY7QQX4OHtlIj
GAZVBtShPz9PUslZXw8MRd4anjZc7z9pOW73quBSpq2EEDpYPqBi+XMljAm8
CpNE6ztQjVOvVEIji56VNlrZ+PCfdKsKiJ1w+2qPfniI1Nt2tAz2hXQpVaC5
hNgVOOxegz5kLTSiXX9cGKxfKQKbHwHPOtF9Bs72TcFFcMdFg23mn1lJjAjb
QmgyTp9haSfDvS0RfebSeTDMdieOC221h64VYvcKFhotDPnR3/SHb8c8z4WN
qpzlcujKid+p5qI5YLzDJ9IU/djX3f7s4Sy42H/68Dm0ob/RZtm4l+ARJv/T
Ed0gTLizaSkT4lY/ONxCU4L/G9uZlAET70/uT0OXhAQTj4mnAy1RaiUHzfqV
u/l8RBr8Oc2cXYKWuj/+1eNTKuxsqdjWjm7TC9+eVf0cnLIlqHS0m6GVtc3z
JPC1+5P2/d/vlzT417ISIUxw3GLdWzI4y8UH+FckQN7DyCZetGjFZwttejzU
H3X2FUWrNGQkPdgaD31reorSaJ3WiwojB+Ngxf1Hkg46eEh8PCYvFlhkh0yO
ovurn/nzMGJg+1w+qwn6Oq/X4wKNGNA0t/e4hGZxWxvqqI4GQ66DUlfRF57U
VPL6RMHZdv5pL7Twiob2kG4k+Gv16oeh2fNA9B1zBDxayV6LRX9Nlvqp/jMM
0l8FlSajc/qNbFXWQqHY4YJLFppr3Ve/4S2h0CKitbMILblxakhK7QGMjm4b
rUIPGtgaqzqGACmaEdGMFvfPl13LDIYf+h26PWimok0s0Z/vAwdz5vdRtAuH
Yj/11H0QrvHPJ6KdNqbPCNQFgYKntT0FfaXtyLiIZhAcVFAT+PJvvtcm61ff
BMKpRa6+P2ix5hxauU0gXEol32frwP3NQobXlDkQblq1aG9B/0jqhb5KAtzf
kvpREM2qShxQ8ifAk85bWbvRbLft7nuaEqCgkldeCX2PP/gXUZUAbVmFr7U6
/vU/7Tlv9xBgJs5w3xG0Be+OWRk5AnwPXKg1RntfXM/JrEsAHo8APet/9zug
kGPkTABpW6G39mg5mWGzjekEOGRUbnQd7dVFaJGnEsBK5/SQL1r72uDb0mOB
4C5DswpCH5+3MU4qCYTQHQ9mIv89/9qrC4MqQZDGKuGQiE70cBO3fBMElZ9r
yS/QhEs50yKX7kP/B0u3fPQ6h02rQrzBsNS38qUCvezlsv7YWDAI5Ekz9aBj
d6UVUR89gL1Pm4PH0PNxjhInH4SCYeiFTbPoq3yvhF9EhYGfQxzfd7Sw2Bz3
cl8ExJoqJa/rxM8TdRRb2CMh91CnOCc6qt1k9wmzKJgQZlIQR2/adWJDTOQj
WOF4ViyHfubf/CHzRAxw/FTX1EAT4q66k7fEgs6I6+ETaJnkNM3x8seQHDlm
7YV+f3z6HZNdApTevvH+HhoSGI6nbROh+8pmx3A0sXzXZXfHJPhz9LB76r/7
dY+JzoY+gwtrBSEd6J3vpkcI29PAm2bAOYxmnHG6J1KSBlET8zEzaH1SAtHB
LB0aygWff0YvlPySGU1/ATvdQkpEushgfX6/lOXll6B5XlxLGi3lWzfhKJ4F
p07U1u9FUzkLaidnsoAgtdJxHN1Wnx0zbp8Ns+/PEz3QIfb9oVviX0HGKfXN
beik4ve+bMdewx7pVrt+9Hi/ee5c1WvI/WtWPoFO5L9dxq9UDEUFnrbL6Nu2
aiO3REqglrP0NX831kuDbmIUexkMv91r4YrWFGdnyhWsgg26yqk8PXg+GUn5
M7HWCM4qcipne/F9YCl9zzvdCVd+fvrR3I/9iXptwivGKDwyGHDtRYcbyHpK
8I1BeVLRzDi6WUeuNeDAGLBou7XQ0fYJpTdWIsYg1Y8WvWMA83yQqJIuNQ4j
q4t7XNHrsoiRNOt3oLs2abZ1EM+rZQIfU7Inwdm4pl0YPWy0TSK4exKiUp5q
S6E3rzNuP/FxEqYOWu/cj76RceL7rX1T4HNvlOqI9hzaw2HZMgX5TAOBVWhe
sRTmdePTILC+rejiEL4fYjcSSxffw9QTtRsuaCHvoQ/qzERIk81Q9URbpp7h
Xb+FCNKmAeUP0PaT5y1uKBJBI127tgCtHH8vPNOZCGZQ2P4b/aS4w9VmggjR
txNnEofJ4HvpSb9CyQcw5WZLe4F+zx9ccKTxA/BleNnloT0fB3Qb9XyAlE7T
+QY066gCWYP0AfIENlMW0QWFbx45Cs5CZwXhq9oIGbIbtW32+88C6xcXzgG0
bhffkW3750DNozd5Am36VjHD8PgcXGKoKMyjKXoa37xM56Bx6YfRd7R+vVt6
tvMc+E2HRIuMkoFc56p8L24OGG0vtrqgb7FsvP6LPAdjSRP868fIoFjJWe75
cB427DiYw4k+ubxXFZ7Mg1pcuhYf+qn5jd9rqfMQG+VsI4OWH9maeqFkHk4G
fXtmgr4TGm+Z+m4eGq9uFUtGCzfxSSnvXoAcMJRUHydDxplOmHy9ADOfrgUD
2ifz5imRmgXgzYxZMEAP0pMumrUsgP/Gdy8voB/5bCpLH10As4HLe0LRkctn
M6t/LcDapWCpSbQxu4jCp0OLYBrSKEN4h/n2Rdqyq3URHmjOh0WglVSW09p6
FqGWwkaJR4c7RdyvHFkEKROT3Fx0pEiGQcDCIvzeMSM7jP4dpC6UzkKCrJxV
OakJPG8eadi7V5cEq90aij3oL0k/rWdLSNDbRJ4aRQufcKo8XU2CtMrkCCJ6
xpVnV3UjCY5kMpM/o9MvmoN3Dwke3u7NEJzE9fTcQkheJIGorJOAM7op7J5X
9o4l0HsQz7J+CvvTYrXIb55LwHtXv4QTPWQlYprgtwSLN1bt+NAW+bMSewOW
IOKCXYMM+vpkMKtFxBIMqyv4nULvy21+Zpm+BE7zLcvP0RoEwzP63UsQrvtl
QnMa89lF0ppHFOv66mXrw2j5nds/XtlFhv0JE2NGaMau9+F10nilNQ5fQhe/
3EQzVcU6S4zsfYhutHmivU+fDALLe5qIaO+XZYM0d5xXsnVO6Az2zxPhmw9h
X01o75Z6jKaSh0aXmvCcvAJZz9Ed0u3RD7Gv4dTfk1GMlk64RW3BnHD/vJI8
hT7kG7P+1yzmkuHDR8rvcVymqfa3N1Cg/Xu9zzi6xFrQdYMhBTg4pVpn0RJJ
hZ4bjClgvDN6Kx2t++KhDbMpBUb1bfPXETHPjh/tp1tTYDHp76wsutpQ9Nvj
KxRg2X/I+C56UTs5SzyUAnoBb3ZLfMC8dzr/x6GJArUbWwZccRyC2YLVofJU
eH6x5poX2lVBJt1NiQr+lcXs99D+Pi8Xz+ylAjin68ai4wepibyaVGhq939d
iT5R+onufZgKb0O0YljncD179pHeWFNhmKXwVCpa7jpv1v37VKAzPe0bnMd8
E648YDKEn0ee1plGh61vthgZoUKtIPt/JPT9BmcB63EqRKj5+v9Gc48+yrKe
poKMs4XCHjx3t6wOyAOJCo59WyNuoUm6VYdSflFh+nnEsZ2LWI+vRYPrxWjQ
o3237hoJn688cJ3TgQamm1p8fNC903GqDEcajE5y7CWgLY8/8ei9TIOZO4lZ
cejRp6W24a40+FhfEl2DlpFMU/54gwa8hyl27EuYj96DTF4EGpw9YbnhJZpW
mzB87TkNyGdVTKbIZGhtumniMkCD8e3XxhfQxhsiNjAGafC2L9tuGX0kbeSp
+zANsg7v9GSmkGFbt4ftjTEaOMhxJ0mje3R8fZyncTy/aLOe6Pzn4sNiZBoM
JWV7b6bi+cTDOLzpLw3qxsRSDtJwf1HJDeeSpUNpm9B3fTTpePy3q3J0yC3b
ceoMuuplm1mnPB2ePOZmdkbnXdakEZTocN3kr2MM2sCgLHNejQ6i7TMK8+ix
F+MSt4AO/uXP68LomKcbawwWztAB4oWmhxlkeOOhobJ2iw6D7Vn3Z9BLcbbm
m2/TweGXivwSOmBP9xuhO3QIt9W/vYom8P3x0vCnw6iMl4DEMn5/q/d5+0B8
fn2vuRuap1W/9Fk4HVJIhF72j9gfV36pDn9KhzWtpYaDn3A+AWMMQiUdXHc2
xU59xv1dTUJ34BMdtjOusht/w/dvtzDDSYwB3nymB0p+kOHldckCtmMMCAk4
YndyFeupGowtXBgwOMAmU/WHDI7QWjT5gAE9DuNEayYK5P5QSpzNYECA6Zw5
g5kCRceYN2+sZYCbVMN1C1YKfD/48gRzPwM4D2b7rLBRYMPKvodGcwxY1Lm0
+xIHBbKnaiwuf2aAT5xFVCsnBVZdwk0z1i1DhaLV0jluCvSnpjjFci+DapHs
YvsWCuRfOVBvLrQMxNt8xYNoKyX2jgfoh8eZ/afRDLfV+ir04sy77Z/R7QuE
qyLCy5C4Oeyo6FYKcHvb9M2hf7uQMj3RVrYH66+KLkObZKa9+DYKZOaYR7uJ
L8ONT9FK8ug1i1neVLRY3e1VDXRP/K+QXrSv2ZnHJ9GWV38oK0gsg1wQc7MP
esrB9DkZ/Yh4UaIXfWO1gHhh9zLszzvJGEf3sy6oRqLJPprVc+jNDCPPGrQe
N4/pTzRx74faHZLL8PVAA2E3LwUC1sle70O/YH9lpIS+krZN/g/aeOSJgDaa
R5QwJrtnGbKvXn9tgm4u4f4ejDbTtLlrgy6vOuJagl7HcszAEZ3kJ9lDRBf0
qWx3RztN1QhzSS2DzTORD37oxPotNjro/wH4xmDk
          "]]}, Annotation[#, "Charting`Private`Tag$47643#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$47643#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
H8sV0OF4ltj3q+grLpYL0g/p8D+4aEkc
          "]]}, Annotation[#, "Charting`Private`Tag$47643#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$47643#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.8000000003061225, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8000000003061225, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8000000003061225, 0.8149999996938775}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.892317485983698*^9},
 CellLabel->
  "Out[1815]=",ExpressionUUID->"ef31528a-2176-4a07-9168-4663c0592ef3"],

Cell[BoxData["5.967024941765411`"], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.892317487161835*^9},
 CellLabel->
  "Out[1824]=",ExpressionUUID->"37646ca5-4949-4fc5-bb2d-20a1d9145e85"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.70193194876279}, {0.25, 0.703392079594457}, {0.5,
        0.704873265848605}, {0.75, 0.70637552010368}, {1., 
       0.7078990096853853}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0X1QzHkcB/BttyhNkTizZTW58uyoI5w777tyekaloVFpugohEpcuqWXL
6sF2pLba9CjSsOjpKJfLTo6LJFm52rKtr9227adTdsrV3vf++MxnXv+85zPv
j334Yf9INovF8qXz//aKVHc80ARuuhuU3GzxM4Gxm82RPu4a5CSxc62ovy4W
S2q4m3G4NPXgXGrvp/I7RdwdcNBkcHnUOyP09y9wIyA6IY5bQd276qxbFvcY
ovJuL/amLpm7LS2dK4B114BISM03rVl8jpuDmO0eYZx4gl1BpdIPIxVo83W9
bnGCwNzAD3ZfIIX1tHtbpyUQOPoNqx9m1EL+/tLsCer4ZxsgHr2LLc/LktmJ
BPNqrRRGRs2QxK10H6euV7q1tX/bAglP02CcRNASXWQbNCSDzYiph/kpgrFF
3828cegRUpIrnVnJBOzx6lm2jk+QPed4q1kKgYshrD7gZhuEEX/UGvEJ2gRr
nrUua8dkb2zLKLVdtna8avg5eKEBCf+eJtDq+xRdq1/AIf9O+j9nCCoGG59Y
nu/EqzeuP04KCCx5VxmV6iVMtqyz46QRZO6viypxeIX5B6sC9NSfvq9W7UuW
o1fs48QSEhxzltV+8fA10lIO7ddT992UZXTYv0F3TLMXJ53gc/TLwqW//I2q
tOPeMzIIlv8wfSqqsQfhQVWVBmr3Mvu9t+cpIHO2rDbLon3x9ix8G9yHmY8+
mLHPE6wYCjSX+/ZDLlgnHKO2nvnBVDbRD09PqXRSRP/fXCj9UvIW5X9WOI1m
ExxY09ht5q3E1a1/BRt+Jaj2DC/5/ZMSS6cCr5pcpH1qbWaR3AFc2BfqM0Fd
F+DOydmsQmV3XgHnEkGyR2pxLVGh1GSb22dq+16v1+Wp72C7O9p8OJfgm3WC
HK4zwaaG+pNjeQTBC9rHjToJPJ+leGjFNP9JlvII/z2mtIn3x/IJxMahx/wd
1CiUjWYOF9D7FXVlbJka9a0dicpCApMk/o4NsRoktvdZayUErKpQqXL2IBZf
PDBNWURwtECaNbtlEKdClpTpLhPcXy40tYrRwt/PM2S0mMDK6+iK05ZDsGSp
j2pKCHpWPu9MaBrC8boGp4+lBLcuw0EVqsNDRxNvbRlBiNTFijelg6i5/oyi
nCAltZTfc30YJmH5kaSC4IaaV2jpwyC8cby05wqBsCg1TLGVwfbH8bp+6gh/
neNNPwab5GPr31HPb2q65buTge3HkXYddbpod2tmOIPOZYOTU9T7XPJHZiQw
2FzwJsi+kmChYI7H9EoGixIaraKop9aftJBfYzDn7IaQaOpu3cCLymoG7EsN
12Kos3fWhGy5zUBxqwbx1IZl/nGpTQzy1NWHhNQ9HaLLnE4Gprskj69T/5am
/6mzi8GnSJu5UuqcjXuWlr9moIoTh9VQe1/5qtZVweCBKEffSH3vxNPHfA2D
hEeZjk+pc1euFfkNMdjbNSO2gzpWKdlhzzAIHBA2dVEv8TnY92CUgZNBEKCg
NjZ6WZGtZ2BnwSlWUvfXbYwOm2BgYcsfJNRN0eWrVk8y+LzEsFZLnWdnPmYw
MNC4JPEZ6v8A8VaIxw==
        "]]},
      Annotation[#, "Charting`Private`Tag$47773#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7016004453782017},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.005967024941765411`", " ", "\[Delta]"}], "+", 
             "0.7019108523281008`"}], "\"mirror symmetry\""}}, RowSpacings -> 
         1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.7016004453782017, 0.7078990096853853}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.8923174872952013`*^9},
 CellLabel->
  "Out[1825]=",ExpressionUUID->"abd77953-e35e-4f4e-b208-94e242eff5bf"],

Cell[BoxData["8.19730540047169`"], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.8923174885545874`*^9},
 CellLabel->
  "Out[1834]=",ExpressionUUID->"4ab7a832-0af4-4fbe-bfe3-e7bc49f81fc3"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.8037728729188662}, {0.25, 0.8058148942812867}, {
       0.5, 0.8078621809098352}, {0.75, 0.8099142211306062}, {1., 
       0.8119698412447961}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0Xs01GkYB3Ckg5QaamtY2Skql5Ytq9qsb5YjQg5p1eZ2NLUlbYpW2i5r
I10MNk43d8nWykxyKRnL0aQNuTSEMBhjmteYfooadLHv/vGc53z+ec7zfB9O
2CG/PVoaGhretP7vW/Yo2mrJdqeY9ac+xDwg0HYxjuxn28Mu2dH5JPXanKuZ
pWxXjAxNn/2D2vNZ570stj8CU2IMedQBXHX1JTYXzvJIy3zqPttEFx47GnPT
dwc0Uecu8jl7gR2PPMa99KtKgjjd0pXn2eloLDQ68JR6x848wdibAlTWPnFc
V0WgPxMXuHmpACrN461JQgIL39eKRxfL0Knsv9tTTRDTvAFXJyoRGMcdd6sh
WFzGkmhq1mCl0yv1tVqCCqlLU4tjHZIKzwXr1RHUhWeZ7BwV4db9PtaRRwTv
Vnw/v/jgE+iN2SXWiQi0pooWmFg0YHZ7frBtPYHDTGjFNn4T3PoNJ888IWiK
t2+ut2qBU5qDpO1fArNU5dTt161ofXtshWMDgVLdL+mwe45bsZV2yY0EBSNV
DQbJYpjcWZL1sYnAwPQvRiZrh2ui9Y/cZoKk/eV7c81f4N55x7bSFoL3m4pk
+053Qrgugm/WRhC9RlT2xaMuzJl33TvqOUE/X3SxjfMS4zz51iExwYfw9gzL
4z1Iuy/P9OogsHbW+by3qhfHdIfvZL0g2JzP+blksQST2lpm+l00L9OQZYOB
/aheZbottJvAZnS7fqf3ADa8U4r5LwmM5o/piqYH4HOwu4LdS/9fkyFYnjmI
ormPd0X0ERywr+rW85QiL6AlrEdCUOQRlvvPeyl8PHkVLgM0T6XxAvnlITjv
9WhKGyQo37Z5VrqrDM025q4aQwSn3RNyyuQy5Bl/OukvI+D0bem6kTAMq5Lz
2vnDBN+ti09nr5Fj67i9Sv8VQeDSlilNsRz3AyVXghR0fgNPGhn3ClWHCwsa
CcFV7eBoP3MFtPkRURwl3V9Snq8lUmBWmjw5cpRg9sk4/w2HCbKXn57bqyLQ
uB0skBqO4FTPIi9bhuDIdQHPsG4Ek06Nquwxgmrrc7qsX5Sw9LTv1XlLwNpy
xOYPg1HknspI2jFO0Lu6VRwrHEVJECfn8QTB3WyYy4JV0OHejDJ+TxAkcGCZ
flZhoVFf+j41we8JeXG9f7+G8ODaJeJJgmKFaYaBF4PbTGKQxTTBuayEUMlW
Bh+Dp12sqbl+Kgu+LwOf5girb6i/FArvegcwmLjjq3akvpCyqz4pjAHCTf70
p97ncO3NnFgG7TK+6Az1sviF7jqFDGa6O6yl1J/Xn5jXeYuBr4e7oYK6WzX0
vLCIQcGDh5Mq6tSA0iC3EgYeV3IeT1HPWPlFJQgZpPvvD2F9oPe2pWTPEjOw
bPl4aRP1g7Pq3eIOBiecDsW6UadvDLG80cWgpXgwxIva8+bXZT9IGEQn1dvs
oH547NnTOMKgxiO1/hD15dXfpviOMmBVahUfpT4szfTnMAy4q46m/Ua9yiui
v3aCgZ7OT6GJ1Nqa7QWpagaBvza58agHyjeGh04zEAw7rU6jFobfsLX7xEBz
e4nRNeorZvrvZmYY+IuWT2dT/wdYwpkm
        "]]},
      Annotation[#, "Charting`Private`Tag$47871#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8033174857896482},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.008197305400471689`", " ", "\[Delta]"}], "+", 
             "0.8037681493968422`"}], "\"mirror symmetry\""}}, RowSpacings -> 
         1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.8033174857896482, 0.8119698412447961}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923172991724105`*^9, 3.892317344610509*^9, 
  3.892317382201681*^9, 3.8923174275167465`*^9, 3.8923174886930404`*^9},
 CellLabel->
  "Out[1835]=",ExpressionUUID->"b74dd7e5-7a6c-42fd-a7d1-cb4e7c735b00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\:0417\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:0430\:044f", " ", 
      "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:044f", " ", "b"}], 
     ")"}], 
    RowBox[{"(", "MS", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1", "=", "0.100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", "0.114"}], ";"}], 
   RowBox[{"(*", "\[Mu]m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Np", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0423", " ", "\:043a\:0440\:0435\:043c\:043d\:0438\:044f", " ", 
     "\:043f\:0440\:0435\:043b\:043e\:043c\:043b\:0435\:043d\:0438\:0435", 
     " ", "\:0431\:043e\:043b\:044c\:0448\:0435", " ", "\:0447\:0435\:043c", 
     " ", "\:0443", " ", "\:043e\:043a\:0441\:0438\:0434\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
      "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\
\:0441\:043a\:0438\:0439"}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:043e\:043a\:0441\:0438\:0434", " ", 
       "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
      RowBox[{
      "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
       "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
       "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
      "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rsi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Isi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"980", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nRsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"n1", "=", 
     RowBox[{"nRsi", "+", 
      RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rsio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"398", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrsio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nisio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2", "=", 
     RowBox[{"nrsio2", "+", 
      RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rh2o", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih2o", " ", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"104", "+", 
        RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"nRh2o", "+", 
      RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ret", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRet", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0435\:0442\:043e\:0434", " ", 
     "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
     "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nddEMA", "=", 
     RowBox[{"nd", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "Vet", "*", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
         RowBox[{"2", "nd"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "nd"}], "+", "net", "-", 
         RowBox[{"Vet", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bdd", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
      "nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"n1", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", 
     RowBox[{"n2", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdd", "=", 
     RowBox[{"nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p1", "*", 
          RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
    RowBox[{"L2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p2", "*", 
          RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ldd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "bdd", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
          RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "pdd", "*", 
          RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
         RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
    RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\:0441\:0442\:0438\:043b\:0438", " ", 
     "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
     "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelR", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"label", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"style", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       "12", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"color", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"color", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
         "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
       RowBox[{"LegendFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"var", " ", "b"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RightWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L2", ".", "L1"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LeftWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mwms", "=", 
     RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
    RowBox[{"M11WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M12WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
    RowBox[{"M21WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M22WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "Q0"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Twms", " ", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rwms", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl", "=", "0.7"}], ";", 
    RowBox[{"ll", "=", "0.717"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl1", "=", "0.825"}], ";", 
    RowBox[{"ll1", "=", "0.842"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"G1WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Rwms", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dd", "\[Rule]", "ddf"}], ",", 
         RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"G2WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"G4WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]2WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]3WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]4WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]5WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f1", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f1", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]11WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]22WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]33WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]44WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]55WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl1", ",", "ll1"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS1", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]11WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]22WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]33WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]44WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]55WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS1", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS1", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f3", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS1", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f4", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f3", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS1", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f3", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f3", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8903705616977453`*^9, 3.8903705656790104`*^9}, {
   3.890370668653944*^9, 3.890370681849821*^9}, {3.8903709322458625`*^9, 
   3.890370959610507*^9}, {3.8903709992269373`*^9, 3.8903710330439215`*^9}, {
   3.8903710860401316`*^9, 3.890371377150007*^9}, {3.8903714190399904`*^9, 
   3.890371548357089*^9}, {3.8903721320559397`*^9, 3.8903721765714035`*^9}, {
   3.890372212292*^9, 3.8903722707737045`*^9}, {3.8903725895595884`*^9, 
   3.890372599165314*^9}, {3.890373378072173*^9, 3.8903733804405766`*^9}, {
   3.890453569590742*^9, 3.8904536520038767`*^9}, {3.891575273949088*^9, 
   3.8915752745390368`*^9}, {3.89159291539484*^9, 3.891592915863064*^9}, {
   3.8923160814249325`*^9, 3.8923160854292793`*^9}, {3.8923168233716607`*^9, 
   3.8923168945177245`*^9}, {3.892316964302247*^9, 3.892317078440935*^9}, {
   3.8923171228867435`*^9, 3.892317124068551*^9}, {3.892317156580319*^9, 
   3.8923171586196284`*^9}, {3.8923171953836346`*^9, 3.892317199357391*^9}, 
   3.8923174985008993`*^9},
 CellLabel->
  "In[1836]:=",ExpressionUUID->"58d6ccc7-467a-4389-90d9-4954fe1847b0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUl3c8lt8bx4UolaYUKpUiSiiJxkcoGiRRSCUkSkVDRkQkJEqKZO+VFVq2
irJ3fKVn45lUSiV+5/fX83o/577Pfc51fa612u6y2VlhISGhBnEhof///kt2
khASoqB6vMWhx7oGKwOCF9kLU3CperHo6GAldB2yZD6IUjByMEXaaclbnNnb
sGaDOAUJIxdPCNu9xO31w8phsymYEvaS7+98gVTxWVsEcyj4bO+UMHi9EO+G
FXeYSVLweJ37IV5GDpgfDfVLF1BgZXvIZzc/DWK55w4uW0zBIONT3dKsRCiG
3T3qLUVBR9TpakrLExhdzDwxKE2B1IXUtJ0t4XA2qbffI0PBup2y23ImbyN0
89CFNDkK7i2qWvTe7hpyF4hfE19Fwa0jhTqewWfQNLb+5vnVFDyQLT9Zr2wI
Xse+wOa1FOhsc5hf7agPyRLHMLX1FDz/bp41+9EJbH4cFPVIiQLHpD8Jy29d
hql7RtxPZQpefEyI6z55E27HP6RZbaJAOetysKlEECK3s/LKN1OglH7znO/y
CLxYLla6SoOCjLun+tv8o9D1Z13F7a0UhHczqYxXT7G04myzkTYFrjFvE4oU
UqCVcKc7dwcFhwNnv1ielwbLW+lfJHdTEOX7J+yCRCY8bd8z3XQpGKuc//KB
ejZi9zB5XXoUXDEMV7wklYu3a2b+1NpLQV+y5HlGbh4GRNZNxRpScMChXreZ
+xz/GAZiU/spkNVxezzeno+VHxwkzxyiYPSIqvji4wVAZuDSdyYUPFm8c+9b
zwLYBqetVDxC7NPQWX5SuwD+zu/Whx6lIH9rpY9udD5SDjBUeRYUzMjViPV7
8hx1KqJappYUCIyXnJfamQfGXAW8sKbghFhQcE94Dmby9Q2XnqRg56yd9wKi
s7C+1f6w52kKZkrpbvpgmwHDwoDjA2coKHqlp7b1VyqcHqaehgMF1kFa/Qec
k5FzlH55pjMFKqlZFwr3xaBxq4iH0wUKMu1WXEhe/QhcqbV+jReJHujNT2dE
hkHyl16wqivxfxWnfXtbADZ/tnvw8AoFZ35KWS7K84Dp69sxP65RcCpm70IF
rjOuxKYkHb9B7NU7+iX9mTkeeddmvfGkYG/WPvnL5btQYkMrXHGTAiS4BbaJ
GaN7l/BrP18SL5tXVHJ6z+LnyjU1dD8Kbsotm3aV9oC0kN7HfQEU1H7YErei
4A62U8+0Z9+hIN7daq7OtoewqvXvmxtMgcvJ4+6Kq57CKzWZejmUgoML10TZ
6SfjWWDNSEcYBQxnmnRIXgbKz1LHNCMoWLmwT2dPRR6+7JvxJ+YhBa+kNdsM
ioswpbhaePIRBaKvpzTOGZZCl227qDaGgkMvBy+/kKhA2cg8P8tnFMSKni+J
q6jGxpE3PH48BT6D0wfsZtRBenjJR9lUCgKdvK5tfVCPsKGabcXpFOiZ7Fj1
teUjhIcupRllEf/9K3zoJNQEPrPh1vXnFEwqZabMkmqDA/M6b04hBV7erM6L
89rRz1hzIqWYgnJr/mLOr3aYMlobtpdSYNp1lHehswMf6De3tb6koBEi25Ym
dmInfUPa2TcUSBrw18O6C8W0noWT5RQofL0vfUG0G0q0gFuRVcR+CvzZ+vHd
iKeq8ZRqKRDSVBl6oNCDRdQv1lXvKGhy2XZtS2wPgimhDRb1FMivulAsM9WD
qa9a27gfSX7hPajeY9qLa18ZqbebKCgpkXiY96AX7MGHC5e3UrDs1BtNh6pe
2A7uvlXQTsGFsuPO1wZ60fOFw93bRcF3vmbTyFAvDn2JsR7ooeBdzprBNmov
agf2NlzpoyDded2A5qdebB/4pjl7gAIZ0QrPtcm9yP8vMTVxkOS75mntdMde
rP3v0MJtVAq4v4T2Ncj0Iqb/t28TnQK54eyL8RU9kOzP4NqxKPgnfOf3jsM9
COw7av17mIKgKYO8d63d+PNZqCGCQ4Gxgv+qs+iG6+fnmuv5FOifOPHKJqEL
rF7r1PJR8vxj85wZvE7Y9IovPPqdArvYzQaNKp1o7ynxHRkn+az6eN/REx3Y
13OGe2uCAtrjbSfsb7ajvFvSeulfClg/yk5yItqQ1eWkqS9EReoFq8dp65ux
sksqtU+Yissb/inGzG1EVGftAteZVGxtHwyapDfAr0OOGydBhZzzOYsiz3f4
2f7Rass8Kr6sS5hM06uFS7t7/cf5VLA5su1ai6pxvK0t5ecSKlSaygZfVbxE
U6vPgvvSVOzScZOV63gBvVZl37UyVNxitagFKhbiVUsv57UcFZtFZE3+PsqG
akuglekq8vzoiHVmcCrSmtXrWaup6BFfpPLMNw4yzYNbfRTI9yI/yCwOe4QH
TfdSFitSsSj08QKXp8EQa9q+IGcDFQaOXm8/rvPGzUamj+5GKkx+NfNp4k74
9imS06NKxXVebOyuP4fg9AlWF9Wp8BhZHd27SwdfPnI/iGylgqK3VMTM9RjM
Pj7dGruNij9izUmV3ItoaNiXoqZNODVqX/AcH+xu+D6/fgcV8XEXX/pE3kVJ
fZLPyd1UqE8NH+uQf4isHueZDbpU9ElVa1YWPEEcU+O+hj55n1c+lpUah0CR
93HiRlTQtmlKf4hMg8eicIUrB6jYvf3mP8WXmXBZfTxv4BAV7ju/Rih8zIEF
Rt4WHaHCPvRgfh8KccCkWF/OnIqcQ7V5N4OKsPukd2PQMSpYdmrMxLxiaLgY
HB2zpCLZe8/JQ/kvsN573n8nTlBRNRHydndwCWRCe+w+nKTiVGaYy6BWKSSf
JrLVbKno7j7tofG2FMJZTlee2VEhn7nH9L8FZfhZpv5n5llif4P8oxLby8B+
/8ff9RwVh5JkfvmrlWGwq272f85UXNIU/f7wTyk66GEP97pQYeS6/eui6FLU
f7NYXniJirmaf3vtxUtRPmNVsowbFVNOsaIXjUtQuGBY6c5VKp6t2rkn6cIL
pK0qKhRcp2L/g5It4meLEaPqtd3agwpxt4X9O3YVIWyXfvU7LyoOXFWPoY8W
wO/QXKPNPsQfGnYpPduew+l8wnHR21QsWPj8gv7JTNh4nvt6KZAKqUvpEveO
pcE0WO1cXxAVP7TOn2g1TYZ2Rq17/j0qjpY2HK+cFQ3V0ntTy8KpWGNu8i7m
zUOseWceFPCACtPq4ci+3hAs7VwhyY8k9p3oY23w8ocEjfXY8jEV3Jv/Ms9r
XsfUaMGKumgqhHPmpbp2nMW3aY/0TbFU8I7Q7faOHgFLUm9TTBwVCvNHN11y
1kP/ijmlwolUzFdWfOyYb4aWjV07LyYT//Rr3niYcQ61O+Lf9aZSYa5zNpDC
voGyA46H9DKoyHb3n3XNPxC5Vpu78rKoiAn6q+cRGoEkp4kT0rlE/z9+ZHz3
e4KoGzV0/+dEL3KOp6XOJSA4KPQCt4AKN0a5W19xKm4+Pvr9WDGV5HWHKc0X
WXBNk/OuKaHi2NP4xCjFfDi8YApvfEmFnmbkg1yhYhxqv7FoRjkV+fgi6DZ7
hRXz4tRz31Mhw9j89sCfWiySO/taqoGKpqYjb9SK30FMRXWP3ycqJhfcdwlx
+AC+UbWpRSsVLQOXzcryPoJ2PORzVTsVSf/99D2zqxE9jma2yl1U/Jt64b2+
sgmVgYzL05+J/3OLxHuCW+Hx72n3yf+IfkbWOTQ7tEHD/fCO8i9UuMgqjJT8
aQOXL5osQ6FC6Er+hvw77cg490bMk0YFJ0W+ynpmB2wpl116GcR/9besLnp2
QMZqXYfmEBVWR2jimdQOdLX3a0WNkPMWlRl07+pE+IEH8d84xB9TF6Xa7nfC
qG6vyBE+FSULHjFutHdCeOdfp4JRKvh24bEls7pQXlLYMu87FXlR82dd3dIF
902OW13GiZ6dJCZSj3RBLUM29tMvKgLlfZt32HeBvbJ9WukPFWUn+o3VnbqQ
Fh109u4k0VvBem0f2y6cWrCzkTlFxe3lDWtlDnVhWciYmsEMGg4t+JIjqtKF
jhmZT1JEaFivV/pjx79OhHnZTAqJ0SAk2ixbW9uJfd8X2p2eRYNS6lmveO9O
CLnU11dI0OCTqF/Rp9iJN4ybm+Tm0dD8oeRBSH0Hrp3UeOQ1nwZPtwn9eusO
qPYMTXxeSIPh8i0HX1HbMWwSf0prCQ23jea3h9u0I6Xe7N3jpTQMmnN+3Gts
w9LXFRFmsuQ8vs/3fJBsRZv61fHCFTRYGoouP57TjNAcpRPz5WlISX+xfUq9
Cf+ePVrfpECD7eb58aNzPqJsyf4wZUUaaqKHXm+0q4fr/amx4A00vP9++5lj
3nswfJ0r9qrScNXUQd5RqRYJv1auTVOj4dQdjtOgbTUsXbuChbfQYH84quaK
ZgWazsC8SouGWLtyD3/DMgT1/3i9QoeGRCfl1eYTxdA9mrPq5k4a/jtsIKSZ
XIA/jafv9O+mIVR7taxzSTZKDKQ42/fQYOWaK/lhVxouVXwyjdanIYHVXaye
lAClbX5l43tpWB03eo7y+zFo+Zpy5kY0xHCsX5uZ3kecIse/+AAN01I9Z3eF
+eNYUtLQAmManKT1uPrpbliw/Jjx5cM03OnfsCt7oTU+PZzzovkIDdv7nyae
9duFQImaZRvNaagXN72koG6M3QHuvqHHaBi++WynVdE5TPxVYQxb0iBsvPaj
5W4vFF+j7jc8QQNtJrV6eu9duPCeFKSfpMGj57QhTzoS6x0PSYna0iAxcV33
R9tTUAZneNvZ0aB/o2yv/7FkxB5/Sal2IPf/pLZK3iAD5m0u+1ado6E/zvX7
/YRcSO5fk+fjTM43tljlcHYhGmp6Fw5coEHl7Yo5IRkvsPOF3pcYVxpm2u7/
cp75GgcP3MlSvkrDRMXF6xzrClhT66+WX6chY62So4JTNW7MN5ageNHg/zo0
O7OxDkEZEd1uPjTcsJ//Y9DlPaJ2dSSJ+NGw+Xd+acPUBxRfOK6leIeGSGkP
pg/7I2qEY4Vf36VhY1Xlf0q6jWh7OtB8IJQG+C/Yv823CYNqq54OhNGgLCjX
ckttBq/+jMOlCBrK7P8souW3YPJU2mahSBr+1AsKPiW2QuIn68/DKBrSvjVs
adRpw/L7Gz6sjabh1cu78bzoNigpuDwsfUpDcX+kjNJQG7Te5tsYxtFw4nvX
UwelduwzG1PsS6BhXvNmg+gT7TAf2fL9fDINWVsV0yv82mHv5145mUrDmg1z
Ogei23FF+nVIeAYN2ewOM6Hkdvjl/zWXz6bB7WKMj3ZcOyL27pYvziX2Layd
lRjSjoQBP45+Pg0/7jU0HXJux/OrdWXdhTR80Pq512EH6f8kxG6fe0HDMZOr
DvOE2vEp2cj4dykNbQuvG3i+bEPf9nvL7r2iwZfyWZR2pg3Drc10ubc0HBbi
lMhMt+Kn44KC/ArCAxOvnq5uxcwpMy/dahp+aWuwRDa2YMnjx3s7akk8csiQ
vKoZazd+XuDwntjzU1ToyclGaNTJDIzX0/DEMzX/2btPODyWeGV5Mzmv469P
t+QacCqYtiu3lYZaT8XdlQUf4LJq3exdHTQsUN3aba75HqHGOYm2vSQfOAQc
ebm6Fk8Z3PPf+mjYPWq77Hh4NbK8N28LHKDB7JyYZ99YBd5nlzRlUmlYtlIt
MCzvJbp0f0VrM2iQEvGwcEouAa1X276RRUPws8zXDYVFEBKr+s3n0GBxxpQ5
zy8L8+NnvPfj0zB16bv668RUrNxq8GDRGA05nwqvryT1cmNj0Im070T/jcUb
3j18gh12H9dv+0mDzr47ulL5ETjwe863+gkaDOLXhKVHBcLygUmF1V8a3LXu
Ps0evoFzig+DOf9ocBzrbnfxOQf3ys6jPkJ0ZGxvmhAfMkOgxdJV80XoCOxw
qhKL2IdHXEt20kw6XMrVu53SjiMl4Fmpxiw66E3FFrExF1AoM+j3ToKOM69O
PP++1QtVRfKHjs2j483fX0XVZ++gxcheeng+HVMPho+OR0Vg4Gs6zXMRHZKP
wwQvXj4Gx334+RwpOvLP1PktsYmDxwrDR27SdOQq1fdtDEuG2Lt0j97ldCh/
P7pTe1U65Bfa66eupOPYtqafcwvz8PxljdLs1WT/yCPJOw4UQueUvOTltXRc
iWCfermrGOa5Xz7rKNGhGuA+ZbioDNQjOyuTlOnwdgvV3TbyEpcmYlPFNtHx
TM1/Ys3z1/ib8DvYZTMdl59ZNAqs3iJ4r+WlDnU6lr65IjrEKYcUt+zo9q10
8PbfTSo5XYmUSCnthG3k/NXBKWeLq7BZ+9pKUW06qrc1KBe7VqP8a4fI+R10
3L772nDbeDX2B6mPtO4i+61Jknt/tgY9Gx+0aOrSYTXXePhuTQ3sO/kvnumR
8zxntzWK12LU0/jpjL10RFZEPJvWqoWPfJ7vOUM6sjdPZBcdqYVEvYRD8346
PqZd/xFhXouYi877txyiozDpv11OurVYt6RB9akJHTsCnXOVpGpR/Gb9kmlT
OtT1lnRROmqge+bOb4ejdDjc0V1T51mDZnHG4CcLOoq/nc5TlKiBdb7eOzVL
OqzVK7wfBFZjyDw5+4k1HfuWjz880VmFa3+nwydtyP2Ovllec60SM1JOXbM7
TQfF9rFsuKAc4UYVVg1n6HCcrTnj5r63kBXIQtWBDv5SJcvWm6+R9dhLIcqR
DteDK8adn7xELU1LcPoCHSnn/O+pBb3A4ZAnXe8v0jGdZGgUfK4IA5vHX6u4
0pFQRPm5+k4+ft4sDvx1jTy/ZN205uwMBKxdeP7kDTo07o628X4nY8Gny4fr
POkYaz2X6rkvDvGuLVs33KTDaVVVhOOWx1CW3iQT4UtH6WFr/Q+f7uNlxb3p
H350SNuOPlNeEAADBzbDOoAORkjks1Vy19Ehsf9T9R06hr1nKTk42OF0UWbB
+mA6cq43y76dbwTucbHHYaF0RM+pZ/kPGsFrysHrWxgdfl4Xt6pP2EM8ve60
ZQQdI+uOT2wU80DUwTV7Kx/SoaXpenNudRBWf/NTVoiiI2vd5Nin1Ejkx3yd
H/qEjsWiJ+bdan6GHdg9LoihY+GZ3x8dz6eigRnXb/GMnHdte+i2rmxYhP2t
ehtP/NtvJVV2rxA0Dev01UnEXuFnjKsflmDylrQrL43of7eiOT2lAiHr3S2O
ZpL4nbE2LfxgDZY2d+m8zqZDIler4QK1DmoykTPv5NMRVMd7m2v4EYu++piu
LKLj4buhwizDJvxIdX728gUdcpE/5PsOtuLlpj3q7Fd0qEyNPx9N7UDMt403
A97SkRocMhEk0wWvl8vq5SrpoPndORAZ3I3de0ZtDtcR/0fmjrkYfIa82EDm
8Hs60mjtH2si+iDcWP/Nv4GOs2uyFO429+ODeWJwSTMdK0SFu71XfkHW8nud
xm101PJsjLTVBxE66L5yqIOcz8rK4JLmVxg7mZQs/0xH0ohp7rkQClQ36UwX
9xNuWROOnxQs+LbuwKEvhAdcP5vZUPGtbOFj5lc6qYfG17veUtHl/e+rL43o
I+vr5j+kzyzTHVFexqTj6vOlB3+TPiRmZvf1oiE6SpYb3ppF6ppNRN4cBpcO
j/1KP1V307HbPOaYj4AOVD7dVuhFh/zywOSl3+g42G9/bFExHcKDl7kFP+iY
4/FmyW0GyaspJ7T2/6Jjv2mTu/IiBt6dM7xN+00HM7/nhsYOBjI2bmn2nqTj
X6BKdOVpBoLHVi6Tmib+zwq7IbjFwPkyCfv8GQxIHloqSnvGwCHvn88NRRnw
mPqmUPCCAVVd2gRFjIFQndNrXeoZWDCzRd9rNgPtDd1vlHsZ+PbxdfjiuQzU
6l+Q+E1joCs8vS9PkkHywqsAKpuBsqMPFfYtZACZd4bYfAZilvlc/rqY/J++
79AyAQOeX5zeeCxlIElk/S5nDgPWKeYzFy1nQDoipqyPzsDOc7qmubIMLFmz
3NDuMwMrN258ZrCSgQ4rNv9nAwNCY9KsL/IMxBZVywSXMkArFVG/sZYBs8gD
/jMSiD28BN4L1jPQuGFnpvFtYg/89yFbiYHL8/5ZmtkRe4jWL9RXYaBlQqnj
2y5ij4/FNgObGCiRkP49V4rYIzwh87oa2SeX4u9N/KZ6NPSb5BYG4n5b10iV
0jF/mfuuLE0G/ovbWV7gQ8fowJngPdsZmBzLPiOzh46OZOPOfh1yb+2z6mun
SV+hss55ni4DY46PH+A86WtHF5Rk6DEgwjM2GiFziHXp5BT2MmBwUyf4ZAUV
O72G9/cZMnDQOGjh2ZNUrERX1JUDxB/zA483Ej0KiVZ/nWPMIP3c6/DTRK+0
hlzl9MPEb/SaoN9LKEg3C6juNWcgx8/INXzTIA75nxhxOM7APGO/KQqJhx8F
WxZ9s2LgYp570THhARjMY9jPJTpZvrTxVF5SH2j1BuJ7nBmoz7e/m2vShdCf
cmotFxh4WxSjFEjvgMa6ccsTlxiQWevVzLvSDv/b6TnXrzJQwHT+92ZpM5SK
fDqF3Rl4feaijcLWT2j7ajEZ4UH2v/tXQutkPeR3iZnk+BD7faerbObVoOHC
oLuWH7lPHLvWqK4Sl2PLEt8Rv6Wf//h1YOI1ln4MbzhyhwE9l6c7/gsqReUv
x7HBu0QXl7bPsrtRBMf1kHEJZWDZsUVz1qSTft9CWv93GANf9xg/t9yZjrIA
wYWgCAaKVBYyw68n4mRxfdTiSAZObdhdXq/3BKLUxIqkKLJfr8kIO/8+8uZ7
sDZFM5Dwm2vRoXsb5rtN5799yoDO5lkW5aLXMOmitN0ojoHUNyek7ubaIe2Z
0Jluoru20lMvlI+Y4OCnzyF2yQwYy3Kk5yvuxbeJwmJBKgOtJac1ll43R6xi
yH83M8j3pKrk9jc6QO/YGVGJbAamHbe33C9yw0ig9qboXAYUxqJ2rNjhhQcv
Fh5TyGdgk/WVfXWp/thOG/EtKmTA6tkhvQCpIFAW1GbuJnG7chH3wMS6UAQj
tq2RxMXaVu+B/Mj7ULt05bflKwaakiI3H1/0AL1xB9aw3jDw8HtxddvnB/Bt
XHPwagUDsmecLG9JPsT6P3+uClUz8Htr9KGUvAdoUeqMu1/LgFRh3ZitcwTc
j+e+l3nPwNGPD7Is7cKwMiiAn0nyRJP8Vdc1F4PxvuSEtOYnBrY4BqxObgiA
C32Lbm0TyReDU9mp0T5Ysmiu8+FWBhxHim/ZtF5FuS7j4UA7A0FZZyPV0hxh
f7n8jXMXA1rLYy1ffrCAREIU/WcPyTtd0U+dXxijuMllbmAfAxFevpOh9qdh
/ddAc+EAsd8NyY6GsqsQVl5xKmGQxEvSsqiQpEDkWI4HqVAZeLnyvnl0TCSO
3G0ueEXyzMzKI2sztBIwUZr+eS+LnGfnd7n29xlIYvjM6BxmwKg/4EayZiGM
Fh9TtiV5qvRLYeW1eWUY3aN6lMcj+qzLyJw1VI4YV7GbXqMMhBguSOqyqgUS
B9PEv5P9hhbL1+V9QPhk+M/VE+T+R9dI6yq2oUQnQDvgDwNbL3t+o97rQL/H
jZuMSQaO/9W/b/m3C+vHTwtnzmBifurU0Z89fTi0xXzvLFEmBhOK+r23DOCK
m1GwsxgTfEWP80tuDqKSpya5cQ4TO9pG98rZUsFQWXfk/jwmJg6BoUDmaonz
y6P485kQyRmNfrKPDrWseb2HFzGxUH11yME1DBxjzZApWsLEl0nHU9dIvr6p
8NNmkTQToWXH2QG5TKTYsROvLmfCjaG8X86aBf5gx7ptK5k4tn4Ne3bEEJas
qHeKlmci42Z/1BLpYeiceJs7sYaJ/I2F8UJRw7B9WsC3WsdEdm2LUbbYCIJ6
U9XfKjLx/rZpP/XyCPKkYq7JKTPh/FJy/9W2EXQcDXvps5GJBf/6NstsYGNl
27VduupMVFzTGz75ng0DSWe/5C1MOHyP6tgiwcH5QyfrhLcxod787NvD/Rw8
CD0i5rCdiTPWScHjARyUNezd/16HidoDl7zbXnMwIKYTtn4XE2tc+AqhHA6E
96q23gUTw22ern7LuTCpWWpxwICJxee0LS9f4OLatERM7j4m/qpW6v6N4CJ2
13T/3P1MjOQ1GHOKuKj2/r7i0kEmktHZ69HOBev1kG2rMRPzYvZ09/K5mDvx
X6qaKRP/RQ8baUnwoLGtjfXQjEn6y1tdNWt58C1+5WJ+nIngbst7/CM8pI3m
FZRaMfGmdbFrpyMPn1STvy21YWLb+8xrzl48jLo81vQ4xcQiSenuT2E8LM0N
8eizZcLV5t/1+Qk87Bzxeatjz8SDbh1X43we7BSvTD07S/z7mLMjpoKH/FTr
wFPnmfh6b2dLbB8PXVST+ioXJsKUtu24wuLhzyp9idWXmTgfqCbx5BsP++JU
HtCvMhE7LpT6YxYfLv2rOg3cmdhwvi1772I+IpctWZrhwUT6Hv2u+Sv4GIya
fObkQ/T1MbdZYzMfop2jgx9vMdFi2J7zTIsP5YXM1Sq3mSh89+h9PPhwv9+c
yQtiIjdww7a7JnzENdawTUKYCAnxXOxlwUft7LJNhfeYOLXH7vAKGz7mBSW8
uPKAifh1Ft/uOvERTFtlI/6IiZ1ahU87LvEhjGTRuMdMXDfyPdh1jY+JX6kW
72OZmLGwf7ukHx9XzddNWcUzIWgrsjO5wwe/MCODn8hE1t9b9y1C+aA7Z/+S
Tif23MQWvH/Ex6kPykl5mUw8nc2boxnDx+c1eUZ7cpiwFBqZcSOOj5b/8p+e
L2DCaPaPVT5pfLw2LtlR8ZqJfVxrn+ZiPrbmaDKOlBN92qxrml/GR77YyzBW
JRNmK4Witr7mI63q9Zf575h4t9VxlUoVH6vkdgSlfWCCmnDdbbqGj1iPclXt
j0x4qKdYv33HR4R61S27FuKP4r0b+R/5kAjXVfrVxkQB/YrhuSY+Atk1bfc6
mUiL/Trd2MKHV+q71aWfmRAOLdU90cnHWalPdeJ0JhKa6+vT/uOD4nbQJY5J
4s/f8kz4Fz6sW5qWqA+T+GYyXjl95cP0butZax4TGn5yLmM0PhrpppICARNx
Aeuikxh87NPtKAv4xsTKIS95PRYfO353iT//Re6TahNxcoSPMotjhXv+MNHW
pTnVy+ZDrbjXsmeSiTH7W1/3cvlYf6E/e3oGC/vagwom+Xws/PL1oNlcFkxs
609//s5HmPaZHyxJFpxSF68a+8GH2BNanPdCFspYov/9G+dj0oTJS1vKwgZ7
Rte3X3zcyHV8or2c5Km5n9/2T/DxTXx4d4ssCzVj0YLS33wMVbMjfsmzsNxG
/pfBXz7sVrhsD1vLQtR/+6d+ER7w5FHk15P9juSXxk3ycbznUkipEguXF9y4
o/GPjw6NUfUDKizoX3xY+YqwcYRb/+AmFvKd/0arTvHRwPl2+6oaC1tVrqs8
IqxndE1l1hYWIjd3uzIJV6SNd8ZpsrA3zklHYZrYZ8GjJzO3s9BrorP4EOHC
m2pWl3RYOBvjfMeWcPZws2zvThYWuN5f/39OMb8wCLBwlzVqtZ/ws+pZyVl7
yPvTBkdkCEdtzLBfaMBCUgn9Vxv53v0Y/fVe+1hICzD4dp5wkCh1mGbEQl1v
bwSTnP+Wq2/uwYMsSPZMlO8i7DEge6nEmIVt93Z+u0zu72b0Wm2FKfFHz7K1
HsQ+50uOfb9jxsIxh6i4I3/4sJf/Uco3Z2HAb63gJ7G3TdhDj+PHWXj8J73h
DPGHxYTqjmorFsI6kupDib9MHJr+Kdmw8OOuQN+Z+Newzbn64SkWLkj6z/o+
yofuTvGAP7YsxC299FuW6EE7K22vvT0LNwMdKrqJfjSW6M1qOsuCegNPbv4Q
Hyp+Xz9tdWLhJ7XJ9gXRpwL35v3488TfRV3G2UTPKy1lTMUusjB1TF6so5cP
6XcvF12+zELpcRVP8XY+FqhZdPe6sdBTMXBA5v/xFPctWvcaCypu6mKtJB5F
Zj2wznZnQdyzSqW/hOjt6qYVizxZ8BWbnuzP5GP866evXt4sKN24VXGU5Af+
QacUug8LR6VHCuJJfhl6OfPsIT8WivVkbftJfqKsTVUsvc1Cg7jk/X4zPvoi
dNkr7rCwf55yzwTJlx1/v+QF3WXhgXOKyVcREm/nvC8LQlgYCnxtptTIw7vO
ZRqWYSyMWY8W1/jxUIGyH9XhLNySon3ul+OhLPfoyw0PWWB3KGT8i+SiUHrM
M/IRC235eS53WjjIDgjf+fcxC6sOONhRctlIEahM28eQ8zSZlMdyhhF34mNN
UywLOilb/5wncfO43jFQM56F9nWfsqm+VIRvETVMSGTBwHxHTM5AF+4mJs8W
T2FhMtlZIqriJfzmoOlyGguHbOpHDL8Xw/PGQPjnDBa6HdneGfUduEL3PLIn
mwV3zqdlr/MouHBYeklOLrHfZ/ZwfRip629LehblsyCm+FYlK3QYJxXNnnoX
kvf13B41nWPj2CPBCUYxC97Rdqk74zk4PB220riUBYS2bU24xIXRBWVq6UsW
CsSbT/w3g4c9vfWpK9+w0JyauYrjwoOO/lnHu+UsyGmLhYiTerilQHjDaCUL
2U98pm784WGjbBLHsobocaYJ5akyH+vu7sqvqWPBS0TbQuQI0dP3flflDyz8
e2oUpeJK9HTaY8ujBhYCMj63tYQQPTVK/fz7idyHm9u9MZHoSevFK4dmcj7/
D/TNRURPqabeza0sbCnbJHG3mtQ3j35Z5Q4WNpY4a3k28+Fn4lAe1MWCyMMO
3Tef+YAC34beQ943S3/xmOh76veNf+gj9p/jecSQQ/JJ64yEuP9Y2DM3hDv1
jY+b6fd2//7CQtdRcSE6yXc7vKW+WlBYYDz9MLpISIA/pom3imksXI2m+2bN
FOD1+g3y85ksUvdEhF9LCOAxWVx9YYiFzfu89I7NF0CrY+eZhhEWDqhYKEQs
FuBn5ocZ67gk3vInDFylBSj1MU3x57Mwu0k2TVRWgGtH+/UGR4nerMS/mK8U
4NsULyB6nOTDRUua9ykIUNR1Q+HHLxayTi4SGl8vgGvOjPemf1g4aG9n7LFB
AL6FlJjENAv3L39YP19VgOcqiRmOM4Zg41/53wY1AVxmbDCsExmC18hnRSUN
AenDdgbfnDWElow1WX2aAmTd/qDUJzGE6s8W2g+1BHC0NP2oOW8IQglXVDW1
BWCIOEgIFg7hiuZIjtFOASjW98LOyA6h0GymfO0eARLVpDZVrhhCx8eBa8L6
ApwSS2yWkR9CQ7yyz3YDAQaKiiW7FIaIvfK9gvcJ0Dur/8E+1SHI2MXmfTgg
wJNBe/VUtSGsXPx54fuDApiX8NqnNYYwN67At+KQAB2nZyx+rTWEW4aXBuNN
BGgpU3qssmcIancTt64zE+B+WLFmsP4QnGJWPZskfMhuZw9j7xA2L7tg1HZU
gE/zTKUTDgwh1vuF7kULAT443Hi6wHwIu83eut62FKBi0Yf4ccchFM+QN9Y+
JUCb2JfUO87kft0RgT8JM/58z5ZyGYJwQUhZ0WkB5tJXl2m6DUGlb8J6zRkB
rF/4tFz3JvbxiK/g2wswcVRzepz0+TGR4hW6zgJoPE6z/flqCGdGHy0Xv0rs
LR2w9pfEMGI3KD0KDhRAR7ZM/8S8YfB138aK3BGgaeWIfdX8YWz9nqDlS3h0
3eG0u0uGoR8oqXUlSIDtW2XXLVs5jAO5PlNHgwVoMH2xXlt9GNr3M++JhAkw
HELf4H18GGEiBRS5RwJsmNRXm04dBvO1tNXhJAEWrBQte5IxDIVnD86+JfwT
73aoZg9Ds2LffMVkAd4FGBiezB+Go72I3j/CtnP2nnr7ahiGfGvF9FTiL5l9
YTeah1Fk6WVEzxBAWNtoWPBzGEu20EJXPSf6sp516e5vkhe/JMz1I9x2s+H7
ykny/svBdRTC8dVG08YzRmBRtVAuMZ/cx2j/0rw5I0i8lseVLhTg0vEDBk7y
I/jjZrHzW7EA/dcPJVH2j2CT+JUIk1cCBM34LeJyaARpbSe+JBDecj/93C+T
EShWPSrmEw5Lm1KVNB/BjHD9XfdfC4DOwoodp0awzHKV7Ps3AqSpSf335MoI
HBYHN8hUCGBaXrN7zfURBAfXd9sR/md4KeX5jRHUff6im0P42Ol653c3R1Ai
SJbXqhRgVrjnxFjQCL6MCRKMqgS4yPkiZfyMPC/MTdtbI4DMjVDPz/Ej0G2a
BX/CH4S1vtgnjcDdu2boLWF5mQdpXukjKDvBO6BaS/RtpLclq2AER1smLojV
CeDbxX+ypXgEqrnX4rUJq9g++1NZMoLLxl9iLhAOvPGjpvv1CPbcf1nVSHhb
RoapyLsRVLaYnPd+JwBN/WhJ+IcRCMlahKYSjqiYlpb5OALf38ZinwgPd1l+
VWsZQdsuuY8L3wvw2HamfjmZI/19PYc1COtxizIMO0fwjju2xIzwM5E5l059
HoGO1ezjoYSNIl62j/SP4NvhzZtSCf+QcdC8/mUE96Zm5r4mnJyx4KkQhdh7
pKG4mbCJRsXkPdoIlPzyFL4S/lPhbCvNHAEniDbII5y5f+m7lKERKJsPlf8m
bN5dq6jKJnOvclC08AcBhM5cvveaO4K5/k8MZhFWmdSavVwwArkEXqgE4WPR
Qnc9xkZQ0P6qajZhf42Pop+/j+CmsunrmYTzmh/e1vo5gqnbLQemyP69TtZC
0RMjaHXYsPc7YWHRtb4//4wgRbr4OoPwpkTOX4t/RE/zAjLaCVvqlHiWTo/g
vKd+/BvCAd03fy0RZsOrRlI2kXC+697r10TZSOcWDPgS7psj+b1TjI3Ddwxi
rQiLZva4bpnNxql4vuhmwpv1EvmRc9h4+12vYYr4w/rLOZdv89iwKO2620A4
0EONfWQBG7cvBtDuES5Y/Ptc0SI2MpXeXzYi3J9fw1wgxUZHXGHlP+J/0QOh
9q7SbGzQiLDIJbyZaUZtXc4GXS4oz5SwtZ/s6c1ybKR6DqvziN7uyDIGwley
8ataa58f4cKyPGu+PBuT6Y93zyYsxtt17Pk68r2DGyi/qwVQDxbrmqvERmDV
vsHThG3Wth5xUWZjxVyXi6+I/u9WRrc2bmSj1jjsrjDhYitbY5XNbIiN3lm2
i8TLlx9KjaHq5LxOIn2OJJ5mPRgzYm9hQ+qT/jnfclIvPtw2yN7OxsCxvlhX
Ep8hZw7WztrBhmr1t2ZDEr8lk4t1nXax8dFjRvtMEt9fowcq6sGGodZz/6wy
ASS2pO9Q1GPDNPLH0U2lAmi2XHwdZMCGppl/wMMXJH85b9Ni7WOjYOD2eHuR
AGWJ9RrpB9lo33PJr4/kI6rOg0JRE7LfLBvvmFyS33ssVR1M2Zi7W+vI2mxS
z91W59WZsQELkdhrJN/ZzWVvWGvBxqwf5ZpBJB/ezyzOvH2cjTWhWbpHSD59
pee9jmZFnteidzXHkXj8op+6x4aNzjm+3G8xAszznLs6+RQbUXfqdMqiSP5b
0p0gdIYNR/mWoTkPyP4F8XK29mxkPC+7zQol+x9wjK06ywbz8PCNbaQevGKq
LlvlRNb/3e8Z8RWA7vfrse95NqwObIzi3BBAUq568aALG7/NW+TWugqg/TL4
4a7LbORKTz29ek4AB7Mj8+Pd2DAT95r79iTJD7zl9yevsnFLM9q/ndTPN8E0
CRt3NvZsjTG7S+o1c21u8FsP4l8v4fjU7aR+VF0Vk/VmI1H2RzFVSYAd1jsD
vXyIPsIZ1/lLSf8wLircf4sNmcmxOgdhAR4+aL6lfZuN3R/WnW0g80i5ypN/
MYFsxGbNWXurlY+dTA5F5S6x9726jsE8sp6w511lCBs7qqaOtgaQdcvozCNh
bLTcGxipJP3/24W8UEY4G9OpzIR4aT50GvUu3XjIxg8ft8ziVh7eBMYckYgi
9v33a9rkBulfd/O3xj9hI/RelNrl2WT9l/4ytadszGlKFFe4xYVO0dO/tc/Y
cAqy6npP+v3X5wWDFglsbNdQcn7DJr8Ke2uHk9jgNmeHvK0awasvseneqWxk
n2o0fqIxjO3Ro8GSGWwc+CFygreChVem+1ySs0j8fpCIvG9Gx3aJuMNbydwQ
HPj2uqH+V7ysG9Oof85G/K6j+41n9mCbj+FS60I2lvz+6nQrqx5l2+J/c4vZ
aJKSsw/NysG20W8Dt0rZsI1yGNk4aIeybKPqRa/YUDn18TW18zm22Sekpr9h
w/jur1iJlHqUyv0I2l7BRoOaqnS9SDe29uw/31jFxuxEoy/Re76gJCLR+FQt
G3Km5zotxqnYun9cbewdsefnfe9vhzJQInxwSWA9G9bZCnbxZM7aWp70a+kn
NlqNr/l0zxnGi+s/+7ObiD1/TSxbvmMEGpsPVe5sZWNwf5FS3QY2ioeTk1vb
2dg79p//0mE2NFJ+Bdp1sTGj7mxQrz8HxSeMncZ7iD3id4o8muZAQyr1YHAf
icdXZUkPznFR3DKhKjvAxgWtgRDPSi40gk0W5Q+yMX9BbXGrOA9Fe9LGdals
nNM07Ny5jwe1v78/d9LZkJgp8Gj25qGw5HC5I4s8zzh3bHkOWb+UnvibnMPA
MELmTAdZV/x7O4zDBmvvi6jUcbJONXVcxSfxW+dRm7eEj4LYjP3Fo+Q8pz+W
rFbjQ9V8cuPe72zY24oLhxjxkT/PbMHncTZW09vtjpwi6/WZ389PsHFDfqt3
jxtZ9/vX8+8PG86iOx85EP2q6hx98+AfG49ND2bueMTH8+9Z8WuFOGj2Syl5
mMzHxudTfmXCHJzg23lG5fOR52jusH8mBzomd/jn35B1+RzDAXEOfuUIOW97
T9b7ppUvS3DQ988nfjGJn42PLCSF53HQaTx1QpbMP7mHcsei5nOQ4VKlYE/h
I6fq2Ks3SzjIZcd5/OXzoeyZ98xYmoOC09cbz4+TdQ3hW5TlHIxVpByz/EvW
ucftrspx8HDD472tZP7JTn++V2wVB9dVE9z7yPyjdFpkw9PVHEzeVM+4Reaf
rGVWczcqcKDQ9yPioyThe6KdRzZw0H82Ycie5IMMc/e2VyocXOk1GgheTvqv
FcPNq1Q5kC5QbHKTEyCFZdUYpMaBmLrmiTWrBEgqaGzgaXAQK6bTF79agASP
XR/MNTmQqbU+MLRWgLg9BXVvtTiYWGZgO4PMQ7ESq2vW6HDA/V14n68oQExn
ZGXITg5eGE+KFpH56EmcaPnobg4i8os/HVARIOqs++vjezhIM9GurNgoQKTq
cFmlPgcMbdfwOWR+evDLqmTdPg6ehPQ3aW4WILy6sSjMiAP3OvWGXWSeCgvZ
VfD9AAdh72peKagLEGpWkGdtTPz190Qxh3Cw7OqcmsMcRPvHlj4i81YQIzJT
yYyDOJeMnBVbSH1/LpoeYc7B+Wpbm1DCt93dU34e40D1R5lPP2E/DCeetCLn
U5F6I7mV9IOzrOPfneBAk+OYqkj4ZntjrMopDt5vVW9YR9grdldMpC0HS7gH
A2YT9rAvePzbjgO5wrcKnWQ/942rH9me5cBkixPrNuFr45EP6s9x0FW8dnIZ
4SuVouGq5zmw+/Yv8TE5r+td93uPXTjYalTSM0Huc8l0OHjyEgd//LcN6BF2
WW4dZO/Ggaj/npSrxB7naY0Bn65yUKSxV/oesZdz7i5/dXcODu7TkAwh9nS6
VuAb48GBr+2048VNpD7sWn1z2ouDOWW8aS1ifwexR56OPhxYzU7KHFYm9a9V
9EbzLeK/fq7SLeI/2xj3a1tvcyD0irrkL/HvqTPDbs8COWBtUxOxIf63/t7o
4hzCwVqd0bFPa0i/Vr7rfNs9DiKLxH73ypP+8E7BOa1wDrxW+wrqyXxtJv3I
buYj4u8KPSUTGdL/U0RtXR5zMBhbJ0sn87lJtvvJzmgOfDqXX7SUEuDADmvL
5DgOQkKoBylkvjcSbbKYlUjO0/e9Z3SuAPuadx29nMxBTND2mi+zSf98erXJ
rgwOxg9dyDQSEUBX6dHBtCwODlXpe7yb5mP3mOj+ObkcBAyXzV02SepXwLB+
X8H/z9tRqvuDj+2HrPfoFnNg7qVatWiUj21STbszSzjoXZrsXcbhQyOzQPv6
aw4W18gwLtBIvDa6b15Yx8Ejr2udVs18+BRfj8x9z4G3zRYf0Xo+2p5eG9/b
wMHAT8Vyh2o+rjtdeevVTPxtaBW+vZiPhsNuK6XaODg1pb0qPYcPGS1X/4IO
Dhxb2PxXKXxUz7xkyOjloNJxaPG7h3ws5rnk+PZzcDywtq4omA/Hrgvzln/h
IMci7vaWW3zMTXXuNKZxsOln0MDAeT5OhzptG2ZwkG7U/2LiNB/Fbuee3h7i
IDlvfPKBOR/Hdc+efsnlYGjIu192J8lHig61RwQcqMi0vp1S5WNS0n4dd4yD
nxNbV2E1HylfbDnyvzg4s2ileJkIH+PvTpu8/c1BQ77w377vPBjlnSqymOTg
mcOSZE06D3wvmxuhM7h41+EgcbaKhz12J/oVRLmIsructSqPh6j91ruqxLhQ
Odve/DWaB+1lliI/5nCRMuOjh6YLD2HTxxzDJbkQOz2en2vOwyDL4qPSQi4C
qSeih3fwEFh6NOLkUi7K5T8schHjoTfO7NuvZVxMSmQIgke4UA48YhEpy0Va
kX7e8kYuWs0Oy9bLk+/3zBFoh3CxRsfE98xaLrQ2qjtEn+Xi2mpj6t91XJi7
LwgQ1uVCZvRAppoKF2b6G+WD+Bxc7N0v0biJi9vnOh7a1HJQXWl08awaF7WT
GxrLia7P3t+3JVaTi/EHUdv9SZ59dW3vk63buag/UOjx+BepkzYGv1t0uIjd
eerYI9InFCrrVYmQ77T8SqY8JH21yKI9axL0yHmNTX6p/h3Bsd+4s30vuV/s
N8NRMpf+rd918OIBLpKH9B5ILB2BScHOfHFjLrzdgix/VA8j6cmOhSmHuSgo
qnmoeG4Y+85q9/aYc8H8e/FaeNoQnh7aruN2nAv7RcU+ZjuGwN2iFT/HmgtZ
uk/E7SYWIoU17XVPcxFZTGs7/oUJ5siWD/1nuOApVguybZjY3q6x4boDF+ed
M8yruxn4kqgmyHbm4vSKjcs7S+j4OSqrtt2Fi0qlE7Mfr6BDUk/c7cMlLkYy
pxdu8qNBl/HlG+0qF3WmwjWWW6hIUbr3U9aXi3yjywFriwfwxtNdK8ePC4f1
KgPbNv+Hzk9nPLYHcNGtdzhwZUYfRC9u/2MezIXlwJ8SyeAeOBYx/92P5CJ3
Sa/RlaNt8BVu3y33mAsffb+4BdnNiD5afisnmouB+ubej1Wf0DAeOaM+jovs
V4ZZC3e9B3Wfr55FIrnvufc9P3Nr8SfaOYCezMXgjC/WA6iGio7uTKFMLuYa
vjH98O4lDO6p7AvP5sJGaVlqOfsFbAaW3pXLI+9PByYucCnE9U3CDTn5XDxn
FjfUPcpBuC9vlnYRF+1bEjsUZ6cjo/Xz/voXXBxJt0/aui0JVfLvQi3KuJjJ
urA5dlMMPrsVNNJfceFW//WKjdFDjNbGzr3ylouX2/s07lnexawlQcZCpC9b
baC7oGOZD1afdQsPryZ6dhXK0JrpCp0ym1a5Oi4Ydcnj+q42ZM4wWpD7nous
us+fpKnABcstR7QbuJh3/vRLkYOLEJi9MrL+ExfCMTkN7OfaiPszu9OimQvp
o91xq4yOofTg+GJGKxfsdlgrJp1DSxzF/EoHF6Eyy8o7fl8Fi9f4WKibi7Al
6ZZXXvlgevfLnvBeLuQmHeVXnAzEsgcp0iv6uYhbwi3bbRVK+r37lrkDXBwe
+M/w0bEH2K/h+VT7KxeKe+s8JeMewavrsOwxBhcvLJcn/kIsItftsGGwuHh/
UFd56Z145Lqvj79C4lpE+uT4daskvKtfOCjE5cJOVpn962syBpb9WxnBJ3F8
3dWYdiQV487Dp1eMcWHYXqL7LDcNkm87k3K/c6FNszOXY6dj/dwqqvZPLu4/
GRlol8gETuasaZgg+vs6tfrZnCxY5j+2P/aXC918S/MEdhZcp/3SGP9IvhiS
Pe+ekY0QUxfmFSEenPVSKxfszkFK8vH1M0R4uJZ8KL6zMAdvvumdi5jJQ53t
oaQzUzno1FfNWjGLB/Z356iM9bngRi0fyZXgYbnBh6/1G3IhyhJV1pnHg6Ut
a/6WWbl4tm/unbj5PHw75RZ5piGH1J/FlKmFZI6yz3/32zkHH8Vld5xZwkMe
r81mhJcNW6c1T+qW8jCkG/1nv0U2fjVsGFu3nIc17zsOnU7OQvgG9UPBsjzM
V09eE9eZiXWh2zPZK3jYYX/EL56XgXI2hI3leWhrjzi7YSwdRw8anixYw0P8
zOPzNSlpYOeavFq4joePDHoorTwVyy6evNSzgQdjF52UUKNkXBV49Z/ewsM8
vtIaq6FoSJje1qzV5GEgTjqmUeMxkgpDHihsJ+fB2uQ7dyOhtfAhJ0iHhwCD
xbon+yLQ4hazb2QnD9ubYzcodYbibEdi8kHwoOu7e+rZnCBMamROPt/Dw73R
YxpKkf549Cj/+AIDHrKrX82eyfeC8o/S4itkLpn36a1gJOoqaswr5nUb8VDb
V9FefPU8LEvfOWkd5KFPc3nDwZ+nIZBqqntqzEMy57oxhE0R5N65cvIwD3cQ
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
3xYoDC9Jy8vPQK4/eei5eAv+B3GboWc=
       "]]},
     Annotation[#, "Charting`Private`Tag$48703#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.8923175039697866`*^9},
 CellLabel->
  "Out[1881]=",ExpressionUUID->"17e714b2-e855-4a13-a330-3686e2af7f8b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV13c8Vv0bB3CPCCGj7IzqQSgPouxLqIQo2dpWlE0iWZFEREhGyZ4hIyVa
kllW9sg61n3u28gT6aff9fx1v96vc59zvud7vuf6fq7dl91M7Onp6Oie/kVH
99+vCk+Sg4MDAeU2ctct2klYVH1v5oH+lM+fdrGNhNyLFN0AdL9F84srrSRw
F2vvjUdfMgks9mkmgaJNG6tD3/txMzf0EwkZ7npWPI4EDF9hMXesI4G57ZdB
A9pd6wPfqWIS6pfE1b6iQxkuH1YsIsGH77T0IPpJiCw3XyEJE5fzmBfRGV+b
l/rzSHizfuaT0BU8XvZ878ksEtwlSzS90IzXm1NXH5PQH3pBfo8TAfG/uRyV
75AwyLfJKov20+oz6QkjYaQ4jVBBG3dnerjexuv3DqSeRgsLq6mnB5OwIG26
NQT9P9lHpVP+JGx26Q2NoQ+YSRnwu5Hw916F8HRnAs6Fjnf+MiNBoqbjQgH6
xP9eN5mbkiB10k21Cs3+lCe8zIQEWd9iWhv63ckczXPGJBxulbD+jQ7xrT6a
qkeCvpfQPzZXCTBNN2LNVcXn+cgwwH+NAGuvota+XSRc+RU5vxf9UO+IHaMQ
CZfkOX7Lov2z9sTKCZBg8lRA9Cg6pYcjKoiHBMWbsvYeaB+vp9l/2ElYU7Bc
akavRCpFhm1SIDiziOWmCwEHZRK9g0cocGNATugOWmZbbbTFEAU8OKv3x6EL
vQWfygxQ4HLgO+M89JaQ12ktPRTQtf6W2I2+NmlycbKVAszcf3bvdyWAu5eb
6eYrCsSFmKiOoGXdFpj44ymw/ER75yxarNN2JjaWAiZvFKjL6NwHJaIM9ymw
8yd3JrMbAakzOUHjERRIutbNoogWbXZTd7tFgRQL04F76B/HLdw7HCmQdcD8
hrI7AWnShg+8VSjAYHDMRAcdedBWw+kQBeyuHNpvhG5YFjewOkgBiSze77bo
noBuO5kDFMjn7zsei1Zl1olLEqNA8RZLPgLtUR8UFbyVAlUDVtUPPQh4wySp
evbLAlx2qLv5FF3BPRxs1bIA21fEjhShW+UZO40bF8CBbbb1A/qGoOUpyfoF
4Ifr40vo8L11O4NLFiAgO57tlCcBdywO+bfcWwBdt9bLbF4EDAZ6NByHBVjc
kN3Hjx46PWpyVHUB0u/Gk3vR6yJcRSpKC/DvM6sbaui2XVW2W2UWIL9n5r4z
ur+MkniAdwFYVRleNaEjC9zUns7PQxeDBke4N67fEAcPu6h58D4YwfoA7RBc
L+0fPg98lzuZUtHy1a/Ew4Pm4exbe7pytLCPaLC/1zzM+MUsDaMvH57n+W49
D7+pY92KPgQcK5V2D5achyfC0h2A1n8c4DUqNg9HDL3b9NFx/6sSkBOchzsF
zJ8uohf4mEdL2OaB006+OhotUJMvxrk0B+IDoclT6KZvPu5mL+egiak9gYae
u9zeOVY6B86H+OJ+odtP7luyyZ+DsodFkZzXCfhwhovY93gOVI16/NXR8jta
Nrj858Doo/i5BPTkzSUrepU5uFHStFvXl4DP6oEuZoWz4GBwh+UUWvzIshtD
xiyYzeks2aDNyA6u9MRZUBB/+84LvStl+NS94FmgpFVdyEKzXTt3xchsFi5G
Z6bT3yCgJm88VO/XDBhJXwzfjmblaqvxoc6ARpOwiyBa9ePdd3cnZkCQ4bG6
AlpEp03jQssM9NyMHbqEPnS9sLgxeQb0rgYIvEc/3FqZqi03A4dYVP9qRy8P
8w0X75kB8byfs/1ovkSnqLWdM0A/6VmziFbmrWY5uI7r0trJQsyPAPUPAVL7
3xEgp2+eGITmDdxlPH8cz5OS49L0x/WaPrPNQn0aXEss359AL/e8ZMmXnoYG
+RAPM/TNlfb0Tv5p8FTt6ryGzsj1PFzyYwraDLzjU9EtNnLMtwqnINi1Zsc6
OlkgeUVp+xT0Ln//yHCTAMf0AKG59Uk44MvizYmWI+Jy3KYnYTDIukcSTXX1
S1utnQTFuN8J5uiZoD9Www6TMFuhxVuJLgtweN5ZMQGayk6Nb9F6gzMBSWkT
kPgm7norWuLhjV9S4ROg/WmidwL9/W+fzVqzCUjrDXvEFUDAyP5o5/Af43Bq
vYnfDT0UHO0SuG8cXmmeFpK+hfVJQlFduWsUttpfpFdCsxfM32tPGQWTKLc5
QNe0ZVCZbEeB0nf/pRnajUlpj8vyCIh4tJwJQT8RVQvbwj4CYVk60f3oxYp+
yx75ITBiPvS/O4E4z//+tpbU6oNU2aNTcejjq0atjZu9MGtq2pqGHqSrnpap
64WQZ56PX6AjuxVUjVV6oVK1VGkU3eDKcPvwP99AwGWfq1IQAUclvlS+2dEN
U52CY5Poq60tPbGF7RDgmF5OQ98Xqr3Yw98OPP8TDdtAT16X+hIR0QbH9olL
7Qgm4MhI0eWrDq2QH/iPlzb6YDA3fahMM7jI6DI9Q989ervfZ7QBtr5vHChG
/z389UmlVQM8MT9RXIOetWtOUu79CB0hRqc70E8KYrv0uz+AQr9l6h80v0Xb
q8Nj7+DfMJd/zofgfpB99lJc0muIEVz8yxndpiFFl/PxFUiWefb4oL82BfQL
r9aA5ZCv3320/yx9Xbn9S1h0/2XwGF1qV6rGmFMNkVtvieSg7ftfN8rOVcFr
+dCPb9D/Nsffcw+uBJPPDElNaL47KUN13RWwcDbiSg/6d+hxC4P9FbDrbjQ7
BV29Uc0dRZZDlTDH95/ojgA9qot5ORhVxL3YEop2DxVcbiiDoNEkCyF004cb
Zu4OpcDvLSAtiWZIy5XWd3gOZSxpvxXQmduGU7g9S+DEU5GvmugY9fNFi5HF
MKH47Jk++kRUeBHL8yLwb9nrbY6WOMcvETJaCDsu5h67jB7OUOu+IVQIulFF
C37ofbWJyg61+TAsJlsfjnY+qPglUSQffKrLHsShj958qfIqJg+2Gx60TUfX
vdpiPcuaB7njVUoF6KURuVXlpFzQ9FVmrkI/tIgsrT+QC31stYPv0MShS1ui
unLAPVOjpA1tzdquUhKWA8zK74L60Q0p6nYKujnwyE0qchI9G1Q4L7IzByTy
4uOpaH0Hy9RGWjZUjm6krqN9xpQaZfuyQYfXPofhNgFVmuN/rFuyoevkl+cc
6DgVS7GTzdlwMfxwjSDalc1Qm7EnG2hvMt6LozusBD+GzGdD4A+WVjn04lln
nbdsOcC236tHDT3N5Zpfo5oDqbbDI8fQMb2Nwo7eOSCdenTmNNrwHCv/h1c5
UNP1fPEs2kiJavF2Wy4c38b/yxGttJueauKYC71HQrZ4oZ3SBMDtay7Y+c2z
BaJz+IGFUScPVsrO8Eaie8S0nbZ8yIPQ2TeiCWi2jG/fLQzzgVNMQuop2u6e
2jnqeD48tYhVKERvqvhplocWgGzsmloVWrqE40KkbCG8abx09B2ay1dh1/np
QjDYbDFqRTuM3jjPk1cEV1zSL42jPQ8yMb7RL4Gf2VuvUtDXTvQdd9//HO4M
u3n/RPNkyY8/4C+FLAPtCPYwAvJti82aI8pgVGqmWAV9pcF5w+b1C3C5dKpa
Fy1cx/J6w6QCfie/emuM3r0mW6C5WAECzNFd9ujlgRcHbJSrwJSQW4tDe0gd
N0j4/RImhFP+SkcvVmWc+fdlDXiYbWHNR7sPxR8y9H0FMQ3fhOvRagVlKtf/
qoXmTH+debTTPjZemSP1YDk4abiKVrxl/iJR4C0QXCfN6cKxnhxWUVBafQsM
IaJOvOgHiiov+wffgeaFhhhtdOaB99L+xR+gUmj7YAp6PY7H5m1kIxSpTBTl
oAXUS7icmD5DpkX1rTL0rbPlvdPhnyH24fndjWjl5ScSsuFN4MxaemUJzby8
+rovqgXENox/Hr+Dx/mk3ciyLxA9GLdzFV3JVm1wP6Ybbq/ZE3/Q1aXFBdmd
3eDPq1qzLYKAAeVrm0939oCjyYSNGJr5F83kcEoPaLcoZBmguf/+Kp+R9Q3W
XnXLZ6JPvGGaOlrSB3aPeYyN7+J+v3N8XSx2CHIlzrHZoIMiBatefx2CuYrs
Zgd04Pa6uGWOYXD9clA3EB05+/OPcuww+G0xUSlB808NWW2LHIEYl5i9rJG4
f8b+TlFzGoOOX9++86K1OjOvOWaNwY67wk/2oG33Bm6XGhmD5MxiflX0qcjg
gmrJ75DV18LuhD6R7O8R8Og71BxhWmtE0+pcfvC5jMOvL0ZVXWgTjr6O0Tvj
oHE2yXMUzagumuiRMQ4frouTq//9v+nhvY2ucWgv0pn4+x4BBdU6+blKEzDB
E9wWih4q2PssemkC2OfXMjSjMN+cefki+OgUHBOQTDyB3nXmvCXVYgoC9cwi
TdE1oK1xyHkKFnPLPZzR5GjwN7OYKeixddZOQo+aRr0Z6pmClJGhSfI/t1b7
aNpMQzfbtv419NP2RRn3q9PApq7ctiUa678Fh1PwzWm4lZJQKYAO5TKI0Eid
hosWJ8OPov0COSvlB6ZBorNeIh0tP/Jnm7oxARfoSMF8NPf2m7d9zmFu+UeI
owL9oJovOw77LJYY359NaJ7tSUOe+J4p+nJNP9BKgit03+sIeNHwzMnwPgGv
Z5n7UsRnQLMmrHgDXfblrY8M5ruP5hLRTDHYP45mGgtg/tNb/Xx1B1rzY6UE
uT4DpxVYZWTQRje6249zzYJdcVyBNVq6vmbuq+YsRGY8yX2FjtH1aryI+XM7
aN35hO5npXdrfToL8SPj9p1oRgWfflHMr2mC4uJzaAbxgNY79bPwPKEoiz+W
gOgwyT1niFnouVuT4YveeK9vsENhDiwlrYNvo5tG+voU1OZg5NPGhVj0iGLw
edCdA4IeRPPQ3j+beMXM52A94FN6L1pLhe0Io98c5p+uFKUHeD+rZ3bhtXPg
ZEVJWEFLTtTtuKU4D+aja+p/0PRN6w0uavOgbcs4vS0O67+O7Z9T2vOwy0VE
aQ866PKDWJrxPHwJPvXtFHoXe03kA+d5UMyv5HmOrvumoRmQPg90PwOSrsTj
+G8/7qn7NQ/kzUhNb7R4n3bzYboFzFFJRBC6f+xPRR7jAlRsKz30CF207vnZ
iRP7L5Hx3k9oSvN5Gz/xBWg7epRv70MCgmN49w6cXIBHCezJIw//6y/0giWT
F8C/ls53Fr0mmKWqkbYAZydWzFbQTQxG5wwzFmCP3OAOlgQCnp+z4rLIX4Dn
rbmxiugN7bIc0ZoFaKDXiohC/3srKOdu7wIsu3teV0kkgMNLXZudgwLfHtmb
6aLbs2NGHLkpUFNvqWiMPms7Y1HHQ4FANli2Q/+sLeWy2kUBlnxW1wfoUKni
YlMpCoiNZdvPoHXqR7/aaVPA6GSfaWIS5sG7spsSHhS4Nakh+gwdYa9mKeON
/atf9lwxOrfn14q0L14v1yOwAX1BcYp3F/bPDZus+SvoW0/TuT7fpYBqmdbG
6UdYTzrKW48/xf54R+Gz7cnYn3b05v3TTAGzAs5rguhtFi0HS7C/DwPfQxJo
/2EZNskvFBi/qtuqgZaLfl7P0U2BtIbRH9fQJ5rMqFXDFOC+vkOvFZ14yvSS
DY0Cm/0B1IjHuF7aDbsPcZOwl6uFFo/20hDTlNxJgt4JvqV0NO9c2S4eXhLi
X5WvVKCjHvkcmxMgQTyFWBtDk9MRDV67STC0ObVFOYWAv3R3b+eRI7Ge7OWf
RT9nNtPONiDhLY+HwAraNvvYqv5JEqZO1gtuopVKHz+iGZEgW28pvDMV+9n2
yZcKJiS8f3J/jxba/C1nQ4YlCbMXfu5P/s/NX0ZE7Ek4NNFyRC8N8xDHyrWa
ABLyIqNkTdGOUiw2RwJJ4Jc3FLqIXqV7c7IpiIT1oPYfvmiTRXujjlAS3gh3
5OWh48v1BZrvkqBt9Y2dKZ2A5oALWRcTSDDqGBv4hC6j7StRL8Tx+2Y0dqLn
tp1Qii4iQU70UsUIeuHHud2DxSRwuU5Er6I5D3X841FKQg/rNIg/wf3QK90l
upIE6+PzOWHoNYa6FL96Ehzrf3joPCVAhalHATpJ0DIUkzRGm8e9LbTuwvEP
Ggxbo5/o7Rjx7iahZTXzmOd/x5VLbuR8w/k6cFroGbrRb+3dzwESfqSWNGyi
a16GS1+eICHUz4HvdQYB9QbHvlovk2DDFN/2Cb31cSXn6RUSFBPrQjrRV2+z
6x77QcJ02U7KLPrBu6w7B/7F9z/74R3fM5yvkqYc2joJHBaizj5o/iKXJJ2/
qJCm2P9GLhP7Q5N1DkUOKly1m89XQ0dYV1B+o1UTficcQ1NNBxk+cVKhf0XM
5SxabY/7ggk3FXZWOAnfRQslXymx56FClPzGrTF0k3H/sKMQFfxlRSAmC8eX
XHBuWoIKVvvs3i9kE/BLQ471hxoVvD/PJf9E09Nb7MhQp0KMg5v7lhz8vhzp
vQw0qNCQ7S8qhD6QbKOeoUkFud1xt/TRllzr27WPUGGrYL1KAbrosY+r4zEq
VLLyv3DIxXz0fDpX8xQVOGitmeN5BLy1cE09fpkKYnLK5RS0gUFyRCNaziP7
7U/0an4uy1FbKpisBAyz5xPwuOrSVy07KiT9PMCrin6WxHjtoAMVROgeRMaj
318QOc3oTAVZLlN3nQLMey9DJs57UMHo4LBGTiF+X1O7Nv4EUuGzdcXOMvSf
fV2B9kFU0Aq9t/D6v+NLYZUtaIVO5ccd6G/V+w4nBFOB1y3xxwba8oVK5t5Q
KowWGhWZFBHwubLSVDGcCm573vPTFRNQG35KSzSKCg+4clesSwjQoLcrkU6i
gln+YpUDelicxn8HLQhqNzzRhaf1NMbR2dc6fkeiGdcelic9okLN51+Mr9Bn
JT6d2kymwtgtY36+5wSISawUvEvF55tfU+9Gy8/pv9zxjAqtHwzuGJRh/b3Q
nPJXERXubAQEmaOHZo8c10NrKz6/cQn9O2P4Ywy6Jofzqi+a8JSRFSrG+9/9
ZpyFvi7A1CZfQoUAowsCG+hRz24T81IqHBj0LC4sJ+Cyd1zFrQoqxC497mKp
wOvpS8ydrKWC4crHDfpq/P48XD/qtlCBPTYPqDVYTw1sPJt6qWCef1Ajrxbr
tWfrtsnvVEhOSOVLrcf+9+xHQ895KthuFhWdfY/5+xy1Tm+ZCvL01605GzBf
Lgr/LbJOhbV+IWKzEfvFfXLmtX+ooHfAWaa2Gd9/itKYDiMN4kwTTr5ow/01
clG1eBsNbNcdpHy/Yn7fc5IJFxsoK6+IynbhehQXP2q5gwZb9W1WRL/h+ROM
D535aHBu4GrwWB/W78n42VlBGpSoWc4PDBIgIjvo4ihCAzrlTdfGEQJiU2Iu
PNxNg+Fyw5Lg7zjer+kppn/ToHzzepPPJOZFW+4pEUkabG8+ka5MEPAySSs9
VooGbgd6o8lZAj6G2X/qkKFBs52m1cgC1vPosxGisjQoFjAeS6Fi/Rikvygl
RwP1N++E8tC1nFs1FNBt5xUsK9Crd+n51dBkFk9nK7ryy/xnQ7Ss7PCH3+iZ
u3Ec7uhSbafc8zTcr6Z/a1ajX1y97bJnEeefz+bvI/I00N6+WiCLTrY5/OEE
uqvMgVBF5/vtO2+CXlk9ceEM2umR4QNbtGIw5+kw9P6IipFwdFVCuiKBNpSs
FG5BHzvM4bGMDhvTSu9C9w4El2yib96jCQ6h/xWxk+BbIkCXVsVJQR8qkObX
Q09a/m+aXYEGjQZppqZoSY4yc160OZU97iK6USDqkwja9+ASix863rQu/R80
c+/lY+HoCT5eJmV08o2e0Dj0rFmKqxZ6n9Cxt+looT79Hj10Td3LjQJ0mu0+
5dPo/wPs/0O6
          "]]}, Annotation[#, "Charting`Private`Tag$48757#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
z1ubRdH/Aa9c5pA=
          "]]}, Annotation[#, "Charting`Private`Tag$48757#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$48757#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJwd2Qc41f/3AHArs42IIikNI0pWOFa+ooFQVEJIw0xR2UkpWSlkZG+FkL2V
ELLJyPoY996PjKKM/uf3v899nvu8nnsv78/nvM95n/NcIQt7fSsGOnww/P+T
Tp77tbW1NQGXF2/KejDMwk+FakNHtMvN2kEXdIoZVcMN7b7njacjenuWmnAo
Wt+zqMASTVWbHS5HW3E4U7TRcQ5axtzXCTiYXvRgB5q1+a9OHfqCU+aODPpZ
6PW5KrX3BgHX1JPe19DNQj/POocEen5Z2KMEPZgVTcijd4y+0MxDj3b3Remh
TYy21cejKYcNmL3RHPq2rl7o9Xat78Po2iXhAkX0PuGjj2NuEuA7duJWzj8S
HGqZ+nhvE/BYghh/tE5CiLe+wqAdATJSf/OZVkko6DMufOlIQKK932ehPyS0
MylteexMwIaeGN3bv0hwzW4Q0nAh4PpeoQy9ORKsdfzYdNHhwSGGymjDafW5
S2htFc6Fw+ij+yur7qCljgkyMaGp0QVXE9FdlQfdC36SYBaQEMPgSoDcknE1
N1rrltvOavTr7bNWTSQJPIcktyk/IGC/wvbdrFQS7LIvVp9C3y8INJujkFAn
5e1oiI6dzHzZj3ZSaP92Gy3252VDFrpZxzk0Cl2fmnZLF+1lV8T5B+32WeR5
2AwJUx9UduQ/JGA84UPLlmkSipX1+A+7E/BJq1qqdYIEZiszhuPonKrVmgK0
/nP7aUAf/VKmFo2m9rz4aIjm9Hy56QZawLHxvDda9xBPKz3aN1E9oBfNdufA
ryPjJJxllVnz8yBA7SudjccoCePf+IbHPDE+C39DfwyR4HY9JncWXV+RUV2J
5l4T9F1Bi+kf74lFax7cf4jTiwAbc6/Cy+g0jyN31NBL9+3VewZJsBXVYIlH
20tc9/k8QMJvX9sjpt4YH6Vp6st+Eljlqjx7fQiIFPLr6e4iIdz+kP8YmlMg
OS4XLZIaGkqi10fEzgag1XdYJTM9IoCWyGWkivZYZGuSRJ8+F7wjo5OEhZzz
O/zRWvyyGvc6SBg6NJkl70tA3qpR9HIbCfn8m/vfPCZAR3VZ9G0TCZnyo5nJ
6F5fZYE76IQLhe456FZ3uVlNdNBLU6FP6M6qZjGykYSbHO9t5tAqwpycJ9B7
Vs4t/eeH8Rt77NDSQEJAfwjXL/RyVsez/noSLCO5z517SoDIcqG/VyUJKSJX
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

          "]]}, Annotation[#, "Charting`Private`Tag$48757#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
Q/8PJ9wnhg==
          "]]}, Annotation[#, "Charting`Private`Tag$48757#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.7000000003469388, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.7000000003469388, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.7000000003469388, 0.7169999996530612}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.892317508399516*^9},
 CellLabel->
  "Out[1882]=",ExpressionUUID->"b955fb8c-3248-48d2-8ca3-ed1d3e65ff0a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$48851#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$48851#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
rDxB/7G1jXiM/h+5YkTi
          "]]}, Annotation[#, "Charting`Private`Tag$48851#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
GWkJk4/Q540nfOJMSmBANUioFG3757Zx+ZM3YOJrHs/aiO/jHnq6ZPMSbuTu
suFGl6pWijOm5sO99m7ZfehdjS8av/fkQfS+s52yaDXv/Ywj+rnQ8e7EVgv0
a1KhiIdNNpxh4AysQAdtf/aDQSsN62Wr4Xu0Yl+F4DRHKtgaPBJsRVMulMgL
jybDo4y1uhH0kPGc1pv4RGhSIxbZPxBwe+xvr4FBLHTZvmjmRT8W2i7cqxcD
o5EWccLoKrPD5MUL0bBhpPeYPPoBo1SivEsUqPp/cLBCb9ybd3V5/Qmcy/dR
cUAzBaT/Sbz5GK58V2C/j/6nQtamDoaAl9Cb/HB0wY750yOzQfBY545HIjqm
qSUyMfohJDmLnc5Gz3f96ZNVD4Sq9ynj1WiP1zusVT75QfP0xdImNOwzsvVS
8oVezh0B7ehCV0H58E0PYEKhzeAnWoNwMPtA9YS566H7JtCDQ3+aDs54ANNj
TRodPco1qtrO4Q5cJf9ql9GKnE3XGnRdQZrRzYyjiQAVoel/xbtcICwxm3s3
Ostio9BAmBOQpLraxNE2Xo7WbBoOoPF5Q+gx9JWWoInbr+9A2jUpDUA3KmtS
J81vwdJf87UzaI0BNd0Qw5tgFP600gT9jkvHy/jRDXi9v9bZEh2rZplsyGAN
bHWEhAPaUUTOzbvWEm4Y7Zq8j45ZJ3w6a65DA/l0RhBaYsWiS3fdAgQC3cyi
0KSZQZWRQAtw43/BnYr20dp3IkDXAr4Xd7XlofeOdJP2XrIASR3G0DL0ovlD
qec5FvBoWEqjAd2m1Zm1cOI6jLpfW2tBT7Ifi9jAbgkq28Mrf6CH49aZngtb
QUJOrfMYWjSe3PnWyxpmVcgSdLTH3HSsKK8N6PXsmlxGC1ZZllXN3YR8O+2M
TR/xvBn12upy3wZmZnczLvTub/2fil3twCL5BfdetIXkvfeVfI5QI9PddhAt
p0Lmi113gp1fGUOPo8FVjm4b5QIu16U11NF9H8XU32reg2+L19Z00XeXvW7f
5nODA5HhlZfQl8QUdEzZPSBQvM7ZGs1/pU/9hqAnDNWTJZzQ3VaFGneMvCGG
qp3xCM2yfWiR9NQP6A/dzaLR57eKF7n88Iczu3O409FNDloShVKBwHCWKbQC
HXhhOr+fMxguj0prNKLvMLXEZSY+gor7Fmvf0LdLisTfS4WCfV6d8wS6VcL7
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
XMlH828JFDnPT4X/AQuGtX0=
          "]]}, Annotation[#, "Charting`Private`Tag$48851#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
id/XvVx7iqZ38Zsa2hDwH60nXuI=
          "]]}, Annotation[#, "Charting`Private`Tag$48851#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.8250000003469388, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8250000003469388, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8250000003469388, 0.8419999996530612}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.8923175133518105`*^9},
 CellLabel->
  "Out[1883]=",ExpressionUUID->"70eb5424-5562-476b-afcc-7489f569bcca"],

Cell[BoxData["7.989188698479189`"], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.892317515181802*^9},
 CellLabel->
  "Out[1892]=",ExpressionUUID->"4ed0c741-3afa-4953-a1cf-06a91b262428"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.7034965289098455}, {0.25, 0.7054453542012947}, {
       0.5, 0.7074438152912236}, {0.75, 0.7094514456580847}, {1., 
       0.7114799690545496}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0Xs01HkYBnAjbVpF2m6jJjsalVRkpejyFA6l1BJLG+pMKqltVdK2W9mJ
KZdEmsYl5JYubqmhi8GE7a4IkTSjMX3TMH5SsdjYb3+85z2ff97znOfl8n93
36GtpaXlSufbdtnRUSf74LnS/tRRg7oTBDoORkEKtjWMXPqsXlL/dDEx5Sbb
Eb3jgn55Tb2upulGKtsDGfHbU99Re/n3l8Wz/cFKczEfpH5jccohhh0MmWSa
86wwgvTJG09GscOxUik5fohaoHtzTiRbBLsVGg07nMB7c0Zhz8ds7NJohxwX
EuiNCHycZxYidFOO75OTBKZu3R1V0RIkv44sM4wgOPzMFomf70DtO/HBwUiC
qRJDOYtVAVPxXMvyKIISpcPT58srcf5huz3vNEFlYOr0zV3V0OUoasJiCL7M
XmGQ/9sD7JwTcPvJGQLtgdwJ000f419z8XqLOAKbkW0lmwqeIoS4rfrrLMHT
cOtn9+c9R3+la54snsA4rnPganct8pK673FFBJ39Cnmj5Qu4zuYs2XOeIFtd
+lj/TD1M8ns8a8UE+pzLjErVgCFPHc3CRILTu4t3pvNeokJyqf1QEkHfqlxV
QGgTbo3vCmtOJgi2qpZMqWpG8gxZ2KwUAkVBdXQdtwU3TG0XRKUSDAU2XDD7
8zWe/dy7QZ1GYL56zPDO0lY0LLKttUoncM7k7iqaKofBeNMhcQbti7PV5K2P
AovT0oTtmQTzuzz1mlzb4OfmHWGWTfCDQY9u9WAbpMMl1tGX6P8rLhTOSnmL
0fysVY05BHusS1+NXadEWIV1n90Vgty1/PTyPiV08B0v+Srts9NoAhG3Iyh4
R9HbawTFm5xHiRxVMMze3eGYRxC6RnhRQlRIiRw6HpdPwH3j0pwlfAfzszUx
jQUEdkvCRWwrAibe0cnmOoHPzOcDrHqCVJe1fqFF9P7jGGWQ4D0E//Uaq24Q
JOr4BbvzOrDRf97qRRKaX16cqV3dgR+7M1oOFxOMPibwsN3/AXMOlHNaSgi0
rvoVKieqMS0vQMa7TXAguTBmYqUaK9tujYu+Q1BmHqFruK8TATbOdeq7BIYu
B+af0O/CUXv/L1ZSgtYFtfVHpF34Z83sKnEZwfU08FR+GgzohPQoywl8C20M
OcMaWLaPFs+VEfwtzBC0XutGSqndu8h7BPkdnAv66xl8Wvv1XH0lQUSqcJt8
A4O2a1M8XlH7u2tMC9wY1OhZTlJQz5BKr7t6MbhcwxepqaNit9w/zWewxe2h
iFVFaM6kj98fYVDlfe68BbVJ+KQ1Y3IYxO8yS4imHl56dHzTFQahD+29zlK/
0rS/yMllsNfMZ2oCdZzXTV+nIgZOnWcSMqlH5rkfFEoZDO77nHCHurUuNm1U
PQN+SEXie+rbJ/u31zcy2NjU7K2hFi3bapbVzGD50t5pn6jXXVoosZczmDzI
SxqmvvtHzSPBBwaPjkUlTa4mEC9YHOvWxaBEnrV5OvV+ZYoHl2GQhTI2l3ru
+r0K2WcGx1g9SfOpdVgN2XH9DAL5Y3+1om4rXha4bZCBV5WJ0VJqaWCWheVX
Bo685S0rqBOM9b6MjDBYJPRMdqD+H+WAh1A=
        "]]},
      Annotation[#, "Charting`Private`Tag$48981#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7030530044573622},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.007989188698479189`", " ", "\[Delta]"}], "+", 
             "0.70346882827376`"}], "\"mirror symmetry\""}}, RowSpacings -> 1,
          ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.7030530044573622, 0.7114799690545496}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.892317515305828*^9},
 CellLabel->
  "Out[1893]=",ExpressionUUID->"1ca917cd-a420-4cf6-a7ac-8afee05ebc50"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.830833991157978}, {0.25, 0.8327529292569855}, {
       0.5, 0.8346426933526083}, {0.75, 0.836502509014538}, {1., 
       0.8383318187808515}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0ns01GkYB3AmreSsolRTq3aKbrpYdKP6bmjlVmtodVOSaMeWSMfq6Ngp
hCK7KyZDiUlJZsigMtIyq7TjMo1MUyJjEq/Lr9rKUsu++8dznvP55znP+T4P
JzCMe5Clp6fnRev/7n6wV3m/b/tGs/rc1LAMAgPn2Uc72fYYVW7YH0ltd1mQ
XcZ2gfbFM7toao9G9a0cti/KPkzXnKL2Cxqu/o0dBB+rpAUZ1C9WnnFOYUfi
Qlz4bRl1rvm2hGR2HNjOTlqjTAL+pLJFSex0cO53rxJR79h5RfLmrQgTNTGq
dwIC43H+Hte5EvAaw1ysswisvId6685KMcMoON1fSBDVtA6C93cgOHDrWWE2
wUypaYe+fg2yLu5435lDUKF1VjSvr0X4kK+BzWWCWl7OnJ0DcqQl+/4dnUvw
YeGGKcWHH8CGJS4vvkLAGimaOsfqEUQC/yOf8ghWjwdU+IgVyJocMmorIlDE
2TfVL22Guu7YwaCrBPPS+kcKh1rQJ2yrlxQQ9A93djyxeYyYbb9/0l0jEJGq
RyapKug4BQvtCwlMLK4xOl0r0h1lNidvEJz7sTw417INcptlJiVFBB+/LdId
ilWjweVd1+ebBJG2cumMuqf43t4syU5M0CmWn1VynqHIKXFhnITgE69VuOTE
c3gJ9PObSgisNxmOBVe1I7yh9R3rFoFrHiekdGYHeOyxtd5lNC+LffO79nSi
24XPTZISLBvYbqz2eomrlYYeVeUE06a8mSQffQlHN906w0p6/xqhZEF2F7gV
sz+vv00Qal+lMfLQYoPTNem5OwRFboG59z5qEW6+xrPtLs2zf/bUnoxuWMm/
rjSSEZT7uE5Id9FB/GvALL9qgtgt8ZelPTrccRj1TL1HwHnh/jQ//hWMrTMD
amoIHNbEpbNte2DrkMyb/AfBnrnNI/qqHmgs1a6opfMfpWiP8l/jhxUn5qTW
EQgM9kZyLXvhMy2qtl5O9+8oz2PJe3ERUVtG/iSYeJLvuy68D2XJjfLNDwj0
CvdKtGYEW0tPTo95SBCRJUkxo3OrP57epWig3TpxkumRfhw/nRI74y8CU/eI
ZadMBlDc/ybKXUHQvrxFFS0bwN2IG8GCRoKSS7DU7R2E25PqxS1NBP6S1aYW
Y4OYF9vaoN9C8Ev8FX77jSE0uG7a76UkKO61EJp4MjQnQ8WpxwSJOfEBHVsZ
hPblf5NIHcQdtBJ7M9D2IDOF+iuZrMTLj0FzV1SggDr5/O76c4EMrqtf/1NM
fWj1xbeToxnsrntgpaGeHzd9i2EBg9qsM7ErVQRja2O+VF9nsFaw4JU9tWaw
+3FBEQPxhRp3B+o0vzL/70oZCNOGzTdTjy/lHouXMTieEHJzF3W78vylCSoG
iyNcNfHUtxOGD6ieMLgU1r3xLHW6474l+U8ZmB+OFaVRe1xdIXXqYMA6VBkm
pL77c2MDv4/Bc/9FX5RSZyxfdd57gAF3d11oBXW4NtuXwzB4uGOfsop6sedP
nfffM/RvMrPrqQ30W0Vpwwysve1YCuqX5Y68gFEGeVubQ5TUMl7+Spt/Gczy
DG1so86cZ/xhfJxBqpuhXTv1f24/kCc=
        "]]},
      Annotation[#, "Charting`Private`Tag$49143#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8304174451789298},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.007498094001319849`", " ", "\[Delta]"}], "+", 
             "0.8308637413119321`"}], "\"mirror symmetry\""}}, RowSpacings -> 
         1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.8304174451789298, 0.8383318187808515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.892316828902811*^9, 3.892316901645406*^9}, 
   3.8923170914828615`*^9, 3.892317128485854*^9, 3.8923171630153294`*^9, 
   3.8923172032954617`*^9, 3.892317517726055*^9},
 CellLabel->
  "Out[1903]=",ExpressionUUID->"c17168ba-c219-4633-b06c-5eea2e92e7d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\:0417\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:0430\:044f", " ", 
      "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:044f", " ", "c"}], 
     ")"}], 
    RowBox[{"(", "MS", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", 
     RowBox[{"0.114", "/", "2"}]}], ";"}], 
   RowBox[{"(*", "\[Mu]m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Np", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0423", " ", "\:043a\:0440\:0435\:043c\:043d\:0438\:044f", " ", 
     "\:043f\:0440\:0435\:043b\:043e\:043c\:043b\:0435\:043d\:0438\:0435", 
     " ", "\:0431\:043e\:043b\:044c\:0448\:0435", " ", "\:0447\:0435\:043c", 
     " ", "\:0443", " ", "\:043e\:043a\:0441\:0438\:0434\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
      "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\
\:0441\:043a\:0438\:0439"}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:043e\:043a\:0441\:0438\:0434", " ", 
       "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
      RowBox[{
      "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
       "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
       "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
      "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rsi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Isi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"980", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nRsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"n1", "=", 
     RowBox[{"nRsi", "+", 
      RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rsio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"398", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrsio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nisio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2", "=", 
     RowBox[{"nrsio2", "+", 
      RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rh2o", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih2o", " ", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"104", "+", 
        RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"nRh2o", "+", 
      RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ret", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRet", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0435\:0442\:043e\:0434", " ", 
     "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
     "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nddEMA", "=", 
     RowBox[{"nd", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "Vet", "*", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
         RowBox[{"2", "nd"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "nd"}], "+", "net", "-", 
         RowBox[{"Vet", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bdd", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
      "nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"n1", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", 
     RowBox[{"n2", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdd", "=", 
     RowBox[{"nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p1", "*", 
          RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
    RowBox[{"L2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p2", "*", 
          RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ldd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "bdd", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
          RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "pdd", "*", 
          RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
         RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
    RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\:0441\:0442\:0438\:043b\:0438", " ", 
     "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
     "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelR", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"label", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"style", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       "12", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"color", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"color", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
         "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
       RowBox[{"LegendFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"var", " ", "c"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RightWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L2", ".", "L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LeftWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L2", ".", "L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mwms", "=", 
     RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
    RowBox[{"M11WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M12WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
    RowBox[{"M21WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M22WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "Q0"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Twms", " ", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rwms", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl", "=", "0.75"}], ";", 
    RowBox[{"ll", "=", "0.765"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"G1WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Rwms", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dd", "\[Rule]", "ddf"}], ",", 
         RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"G2WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]2WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]3WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]4WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]5WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0.76", ",", "0.762"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f1", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f1", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8903728058997574`*^9, {3.890372855753929*^9, 3.890372856797288*^9}, {
   3.8903730677806845`*^9, 3.8903730784521594`*^9}, {3.8903731088754387`*^9, 
   3.8903731148381376`*^9}, {3.890373149722473*^9, 3.890373231558741*^9}, {
   3.890373272798806*^9, 3.8903732744822145`*^9}, {3.89037332708786*^9, 
   3.890373367754177*^9}, {3.8915752845550394`*^9, 3.8915752849630527`*^9}, {
   3.89159294392273*^9, 3.8915929444344916`*^9}, {3.8923161010066686`*^9, 
   3.8923161069551163`*^9}, 3.8923166183102293`*^9, {3.892316687158092*^9, 
   3.892316725867738*^9}, {3.892316778689759*^9, 3.892316793898033*^9}},
 CellLabel->
  "In[905]:=",ExpressionUUID->"02d66e64-2505-4341-92e4-763d15d9f2c4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
RBjYFLq2cvP0RojPbNntPYeBnzrXX09FNWDsQ2nwwnkMPPFbwFywtgGdwWmf
ssUY8O1/GBmU9QElFqFrDCQYsKUbrUtU/ACvgXOvPaUZeH38wrxzovWwTrac
KbmUASOXLaxMlzpondU1y5Jl4LneqFtMcy2mfV3MGpBjYP/1ntBpV2sQKFwn
sXsDA23WyJl3swrnPxTY9m9iYNqufNH7Je+wP/hJxlUVBuacY7sPc95iwRJ3
7WeqDMwb2U/Ti61E5AYFx/m6DPDeaBx2lnkFzy/iRem7GJjMvGS43q8E1sVT
f6HPgPmSWDHDL0VYgc7Hl/cysHhDwxohVj6mCb8dmmvCQI9ic0W2ax5o9VlK
aQeIvX4blJ8syEGa+e23PZYMSE8Mmxx49wz7b9mM2B9h4PxlOSlvy3R8z90m
OWbFwF2Ldd8OzE5F/ODcnTdtGaA/dc9UHUzCnvmM0/NOMODy2H9DTE4ieDvL
g2JOMlAqMU+lhB1H3o/HxWvtGbgwU/hh6oVoaMY4DRY6MOBRrC17S430n3V7
Zuk5MtDL/mpXti8M98eXqbRcYODEYGLENtNH2Krw46iNMwPlarnPHj66jz6L
5ltsVwZyyr9I5h0OwC2/tOdXrzDwsUlo8fMEPyjm3+gQcmfA786sJQplPmgb
OjT1yJOBFSGnHM2We8FTTFlh+TUGIm65bZhz0A1y2iKmz28wsGUi49ntPa6o
vzDoruZL/LvOwf1lgyNcYksSq/0YsFmS+OWtnj2kPwTXH7zDwD4Dkf380BOo
/OnwdfAuA/1qrhd3eh6Fw1rION1nIDq5U87lqznEDi3ePRHEwE2ZqdNT3iYo
uS24EPCIgYeyWoYR+oY4VlD3eGEYWS/R0SY1tAvC1MSKp48ZyO4TNAXxgOwF
nqxNUQxUTTOJpiVowVLHbEFZDAMi3vOtowN3YspJUd0onoE67hNTr0gtpMZN
O9n1hOy3Uf9bMxvY19B771QSA2VdVT8H+bsw9iuvQJDCgNur+/sa/A0Ru+7e
5+vpDPyWMey+vtYUuw6fFBbNJPqzNoSV51lgxF9jU1QWA2b7FYJ7x6wQUihx
eE0OsXd1X6m0/Emo00Z88vMYCLrG6WE8cABFvCpDp5CBig1iJzR9LiIQsW2N
xQwoCZ/+8F3+ClScL08cfUXuX3FYPzPKEz3xe1exXjNg2ZEro7X/JnwaV+27
UsFAnJJR30TJbaydnLwy7S0DqbM+LjkSGYgWxY74h1UMyG3Y+yLANhjuR7Jq
ZGoY2OG4WZ8TEoYVAbdHM+qI3mpBeT/JPFRTZLNYtYGBrbIfXzfMiIMTfZtu
VRPZP0ZL/IfUU0hJznM80MrAJ5to4ytkXi7XZYT2f2TgcEM30xDpOO1S/tqx
k4HLe2V3BQ9kQvTJY/p4NwNZiqXiFn0vUNDkNM//EwMn459stJXNh/XvPaoS
/Qw0vu4RtyX9jJDS8uNPBhl4OXpvU7BICQ7ebc59RWegvfaPb8+zMvwqTuvV
ZzHgk3Kbcru0Ek8ZN6Z3sBnY5nT30MFfb/FFT9mCz2dg5sNjPXUnqxE8FTwu
/4uBWQyt65/fNKJI87bG7UkGZntwc3XuNKPP0+M6Y4r4O/zwnQv7WrH2xwmh
jOlMyHmHHJzp+BH7t1nqzxZmIv3quJuhYTsuXzIKdBRhwq9d1X7Wqg5U8lXE
Ns5lYonQ6JxHHzrB2KBw8OF8JkZ7W6rfP+6C6Pmlj0cXMNHu6JJoYtWNw6zp
MvlSTJTurWmvauzB9TXjtpKLyXrdQPkbnr1IPsVJvLKUiYuakrsUl33C6GC7
wo4VTHzvHS22M+iD1PK6c1FyTHQpT43NaOqDpk1Z1q9VTNygbv1QafAZdjG5
o1YKTDxs0O+SK/mMgJ6ULWXryPlHnSxfLe1H9qJot2VKTOToFUH8Uj/aLYJe
3tjIhE/fzpoXZf34Feo7OajMxEfd1vfzJ/qxos1NW3cLE3nvxiSSFQewR8zR
N2kbE0dvf2prMh7A+f3H3gvtYOJN4g/VIZsBhNw/KGKvzoTkVJKe9PEBlNTr
G9doEv9psxSjDgygX0QzaK02E0Np2nJOmwcgpK/cehdM3Eqbrn1rqh+Kt1dJ
jugx8SJcTzipuB+m76QP7d3DxGFpCcVLVv1w+ycanWXAhPm63lcurM+I1f7X
N8+YiRDX11lfrT/j7bVvy533MZGdIOywqrgPrNJhu1YTJmLGD88T+fYJ8359
TlExY6I6/oGxr+QnbN3Rxgo1Z2LZrMMZdhK9OOpWvf6bJRMFRmHw5nfDp+CV
k+URJv7p24XXpHYh9Ut2brEVE5RhlmaUaicalJPGpG2ZuPD2zu4vT9rxxSlC
1fM40W9anM5XShuks+55frJjospULPXrZDO0Rm6UaZ5mIumHnMnXrx9wat3l
v3FnyPdZ6Xe/lNQgJ8Xa//h5JnhjGm3PNF+jk2pa98aJCV/j9nXjygWYXLlb
VN6FiV3WfgZH9qdD7riaid8lJuZm5Xgl0SNhEL8hhH6F6Pfs2GNZI3849a3s
2OPOhHhSe/GHY7cQtkRKOt2TnDfe2HFT/TFeHZ5tNesaE58W927/UZyOwcdT
ceduMJEs62qzk1sE4Y4vgx9uMnHzftS9PylvoSTBlN/gx8SdE0rHjg7VwezA
J/sgfxK/L6y+H33bCveHzRn8AOKftjbx0S8diG98xzG9x8Tfh6vOZI/3oGpO
yaa8B2T/Ve3DT9o+g2343FUimAmqEuertOMQ5gc8KbwcwoTZ9ufL5lhTEUhb
aTsrnIln1K4PTd9pEEKScHwEE06aM+5J2zFwI27VC5Vo4q9u6zV1T5j49TPl
UE0sE63JykrcIhauWCr8tUpgwt13e9NU+jBG89LTRxOZYP5Y7XLZi41z8xUP
3E4mejQEDHqqjJC5P/Pn4jQmLNjfVbtaR3C8VulpdgYTdifGkz5Zc9C7KttI
7zkTfcq74hw7ObC4uelrVzYTRqHff04DFy2fc2LO5zLRMDTp/jaeC2N1lV3/
8pmYXP9mp4eAi+rH+ZzwIiZS/mkM56jzoPN1a7jiS6JfqPLGYi8eSk2KdlaU
MlHkdisurZCH7c9VGQfLmTAQqTS+NMxDjsjLIFYlyZdVIl7MRXysP62ueu0d
EzNmndXNBx+pb0oHFlST+IhkHjt/ho+Vy3YGpNYycXx+jVDoXT5iPcuVNT4Q
f2mn6Yen8yHVpd3T3MhE9Irsb61VfDza8ubmqRYmvP69mR7Tz4dosK7izzZi
35eMTtXvfPhz3rU96GAi4LsZkz5nFP8MdnvJdTPhGTi3vHf5KLxTquWLe0m8
ruOJ71YZxY9/+g3Gn5m41HGvdZ/eKFxt6y4PDjDxm5vcL31wFGcWNbyfRWfi
cceaM84XR0G5tM8pnsnEQnsfs83eo7BuaZLawmaCfzdx97KAUXQpmVbUcJik
Du18aBQ6CrO7rWes+Uwsdw8/WBM3ika6mZhAwMSpAI+vSWmjMNBtL7k9xkRn
nIESL2cUOyc6Z734yYS6c8q+iTejKDl0OE9vksQn31X6Y90oVAp6jnZPMfHa
tSREt3UUay/0Zf6bzsKipDs/Zg6MIqnOxvyxMAuJC3aUOtJHsWzNwKTiLBZm
1VhN+Y6MQmJgaJ/5PBa26C/fPfh9FEEaJ7+zxFiw0w+0UJ4chUgkLf6aBAu3
1tz5uuffKKZMmfxUaRYGfuy43zlbAI8sh0iNpSwYGfJXWc4XYGwWW6dFloUZ
wdsiMyQEGH7LefRTjoX534LCO5cKcGq5k3rQahZEDlQNFiwXoN+LT5Fby0JT
evhjZ3kB2rd+2bJ3AwuiH6913VEUoCL1R0e8KgtZ5dkGJ1UFKBEPj5ypzoJf
t++PdeoC5F1XsXLWZGHF7APTP2sKkGx5YRBgYVXcozdzdAUIEKayaUYsHFY/
H5VoLMBNV5+sfftYiJut7Ty0TwDPflnnIhMWGAOBLhKmApwvOvztjjkL52XM
F5uaC2Bq3/RH0ZYFoVO3OtWsBTBsc3wbepyFSyJH+NK2Auhqzbo9aceChM8B
BveYAFulds1uOsPCxpToWs+TAiyufinp4sKC/64JjXXnBKCsTllX7MdCz/ND
LYvcBPj0SJez/A4LYQ/3Zl69Suz/PZAdcJfcv5V+udVdgOqOJVuPBrGwY3rF
rUteAmTeDtb6HcHCxDZm0RUfYq9gw7/T0cSfb+2tMm4KEG/z4V1TLAsC6ReL
u30FCN4mbPgkkYXyQVVrhdsCXKZ7HdTLZEFZzXpp8F0BLhxYLPU8i+yvufB1
QqAA9mVF3ZI5LIza5R3MvCfA4XCBDaOABTXOp6CiBwJo7j7jcLechZaOON2E
RwLMSDG71txK/KNXe6clUoAqzz5ZpXYWXv371JQcJYCvqX15QCcLsWVzbdyi
Bfg74fEHn1goiiu4vyBWgEmzxJsFNBZU5dNz1yWQ+PnLvx31g/hD/8/USLIA
+Z0ea77/ZOG7yPWa6BQBXJ9PrzGbJPGgWH9fP1WA0UOLRET/kXiW7N0ckybA
SLZW4PXZw/B9eL5g/TPib+sHQSdlh/HLymj4R7YAiSqLNlUuH0ZL3Ma/d18I
cFwksVlGbhhu3tRbS3JIPOYXiHWuGSbzlTtre64APbP7QgyUh1E1FdNhnS9A
S4lixAa9YcyRH99/upjEp2Rtwg+HYZgquoTdLRegTWQg5Y7jMI6XyNtNEGZM
fstc5DSMq62WLMcKAebR5UtULw1jXkHLMsNKAawLb7RcvTZM6ivPfOyNAM4Z
jztn+gzjfuqs71ZvBfCLy+qL8B3G/t2/Td6+/V//T6ziO8OQa01Ye++dAL8s
VP/9eDSMl7Y/18x9T/Y32j8zIGwYBxTi9p4jvFLr9FzpiGFI9NxaUE3YYE3o
4h2xw3Cu/nDMo1qAiO+8ze6pwxjyl7nUWCPAM/aMHSIZw5hcnui6rFaA8n4Z
rcjMYeTdpNZcIMyoNjIqyRnGxy/rt82sI/EekWo3/moYWvFjX+Tqyf73yhwC
yobxbEzm5inC1jfanaQrh3Fduzo9ifCtM9O8drwn99nfK7/kgwCPrRbfrK0h
9h5buOQA4WcmyncO1xP97K5z/QiX6+k/YDUMg7071LaQcJuqbah78zAs3WRW
Uwgz1l+JEmkjer1q4M1uEODn8vsJke3DCO72stlEWFQyKWVt1zCsr16YYUJ4
hcirzJKeYUxs1HQ8S3jrZEuuQd8wztecE7pO2GCUWdzdP4z4mafs7xO2pk2V
OQwNI6T2RVgo4YvdC6vGqcPYdTM5J4Swb4NSfQBjGLeKThQHEH5cqdciPTyM
rCoZj8uEnxUc7UwfGcZGpZPB5oTL0136dvCGcUXE1UKBcFtsAKV2dBi9yeIt
bGIPPTiBdfjrMNri5VNiCY/7FfFY34bxXS7ktxphUY/GMffxYQyr+p+pIP5c
cYH2S2RiGDlmRllrCW89MfE38vcwvoZfTnQm+hhYiM9c95fEt6xiTzDRz8pw
3dyX09gYtVhkdJPo7bRTR8JwBhvqwZm1qiQefDcfWtwzkw0Dts7BtCpiz2qn
5Wdns3GMWixZQeLv2eLbq3+KsiE0IvXXgcSvpmzJbpv5bBRMq51dXiZA04qR
028WsBF4QJ7h8Yrk16pl/qsl2Wi5yDjoUiTAF4UDqXel2DCJ4C86S/LLb71f
NVea3Ie6RHFepgBSm4oZB5ayMVsnYf3wUwHSVdjCRbJsHC2yumZE6ov6dlmF
JSvYYK+b0FxD6lWDmqn+dTk2UqS9pDpIPbXdeesMZRUbT+Y6ucZYkfqgU3Rn
jwIbg05G3wu2EPt2Dac9W0fOG1fv3EneO0kDmdp5SmxEXzsZo/RoFKnGJizX
jWyc9Sype/mJjx0mviJdymxE+MZf+ejIQ71Z4VqNLWx8FB7cuHuCDWtLlkHC
NjbqbldnMMcGwTuy9Oz0HWzs6Djgo+xdBh+b/XfPqLOhvdY1k32JAvETNzM+
aLKxJXLRtYMLRsj8VFC3SZsN35zXWav1Sf/kwBwOBRtv3wrd/fOcj1rHJbPH
9djoDE5VGz05iqMX9yla72Gj7YvGPJnGUXBcfYwqDdhwK5uh+22eANfd8s+t
MmZjReJCGou8j2KejMCAfWxExl88X3pEgKfXFmdyTNgIdhmr3+5M4uXm3g+m
ZmyYv3aQWE3ej2q/GyMF5mzYT4pUagaR+h+QN2fxITaak4ckIoj/2ffo668d
YWO3ULMe/4kA3g+l9w5ZseHzVD70Pam/80KNz++2ZeOgt3XY5SwBnjy+fj/j
ONFr04PQnXkCqETnPp97ko2TgXXPTUk8VMXRGlxOs5HsYDTa+lIAy8RF3I4z
bMyYpPb3vRaAlWw0V/0c0cfxaYU/qZ+e6dc2xJ9n42nONdVBUi9Fn+fsm3aR
xO/PBPfvpB7Gv6BesHdhw+zGFdF2Uu+U86WC6i+x4Rn+0ev/eH9bZJi90Y2N
1j1iZTNIfpi/8m4KcSffD8Xfsyf5wyh7wfvuyUa+unJ6Osm32e8Xbqq4wUZ/
RJjwYKMAsbUGJvK+bMjx4y5+ahJgY4PXxTt+bPRlfnxW1SxAZXP2wxF/NpTk
dN7HtQhg9nHohcldNpldq30cWgWgdUq25N8j+RD89cSaNgHcevVHFwWR/Jpb
/bKbcPRQlvJgCBtio3Vay9sFUKIPmu4KZ+ONtsPeQsLlLAmX9Ag25qec9NTr
IO8b3yPXOZaN7LYqU+NO8r5/fd7aHs+G5bZby6sJC/8YEOxIZKPiZ4WfRpcA
66d2q/xLYWPttM/li7oFEF8hXBKZzsZYbm3rHcLjqN6pnMmGRerSvV8JV9/e
Y3gshw1V2bBPZT0CZKUJN3/PI+uHxO7L9goQVldtHlTIhsP+3D4PwnZz9Y+X
vSL6PwvXX/eJ9EubZjLMy9g43hVa701Y+UCNI6eCjW+0PRWNhH+H6V9d+p4N
96u68Q59AkTKGAR5NLPhtGsN9fZnAW5oiUguaGOj1KXuTS1h++O1UentbIh4
8yVm9wuwJdkgpauHjTznycAAwk3rDV9vo5H1D1/cuzIggJCGEVswzoak3o0b
S4dIf2A92/kuydv5l1RW7yXcdr3+24opNl5u/jLpRTjhrdE/k+kj+DtyyqaH
sLqRsXT23BEgcr//PQp5n4/s3XNObgTVi5/3t1AFOOQl2vBv1QjaTeSnvhPW
ims4EKUwArvPhjEyNAHmDO21qVUawUDWNCt7wqkO+y6vUR1BuJlAe4xw39X9
TynGI1A7mVE8QSf96vSJGU77R5D18KHFEoYA2x6mnf1pOoIun6VROwgHpf5V
FrMcwS26/vbLhNGRV7Hz+AioirGFTMKpKos+R14ewdPwtIMVTBJ/5e90Vl0d
gWKEKK2b8B9D5+QXHiPoZdgrfCF8+ESdY/V1Yt+KX7XyLBLvwV6/vgaMYGOi
3K1bhC9yBxaZxI2gqPt8w9ZhAWQ87nv1JoxgKKEu0ZBwrZDawOmnI+hTf7fJ
lrCcTEiqd9oIzHfPd/Mn3G60a9uz3BFEyBUWfCTs0zkaua1gBPp/jCwYhDfY
xU1WFpH1Kz+/GCfs7/H9XVfpCEruuofKsAXYkZ5uNqN6BF8+qS88QZi2xaIo
uHYEg/rRd1wIP6r4t1jmwwjGfk3l3yTM7jw6pNIyAl89a7VEwnEz5jof7x1B
t9byv32EjR69/DjSNwJ1KeFdI4S/y9irXh0YwWr9Ue2fhE23Vkw9oI1gv760
reSIANNOujwo5RH9/jSv1ie8YUptzlLBCEYeNZmYET4cNe2u59cRLHIxU7Uh
nN0c6qc2PoKZG/00XQn3nLOeFvVrBPc+iRzxJiwkvNpnfHIEqqIVyv6Ej2oW
eRX/G8GLDfbzowjf7rr+U0qIgw0OfZJPCee46l91E+bgbdzrtmeEhTO6XbfN
4WB85r3LpYQ370ocDZvLgVqhn+U7wtYDZ53G5nNQ9nM2t55w7sKJs/mSHBwr
P7K1h3Bfzjum+CIOdh47SR34f7+990+7LuZg3uZreoz/92OaU1uXctBZvfMg
5//9fGVPbF7GQZfMqQVfCN+RZfQHr+Cg6p2P9w/CeSXZ1qNyHGxNswqdJCzC
1z78QoEDt0P95TM4JD8DRTrnKXLQQvNtmUXYdnXrQSclDmTdPQPmEr5bGdXa
uJEDc74DXYxwgZWdyYbNHGRyCxgShAe+Kzbe38LB6+TWu1KEZ4d8NeJs48Du
YkyDNOFtG17XGu/gQIV9+vkSwsdr/fZkqnOAmXMVZAjfO7mvavZOsp/ZIw1Z
wkVTC3XPaRNeoMn6n4ei+ivqwMHN1weVlhEW3Za2c90uDnZwPYT+Z9WWi6UB
ezjwqFNw+n+9neMONZYBB1bS3vb/7/9A+F+RvjEH8eL97P/PL0ms25q2jwN1
45Hx/+9H1QzJEzblIGmM9eD/+8/rPqpsb8ZBzNvW1P/tU7skn/3enIOs0wvx
v/2n5nHWrz7EQd140xFRwg8zCjL8jnDQzjrMm0n41a5rCjQrDravNpqYRpg2
sDtFz5aDopAB79/E//O95sknHecgykrr4v/6qEt1PZl2koNF2RubRgmfyk1Y
Zneag9PCVx4PE3641yH2zRmi77dtVUOEXzGVl6w8x8HampGD/8cL3fdnhM95
Dm7fp+m0EBZb9nbhoBO5T6mqfzVhe/ODCxIucTByZ9mMXMKP+EsfTl3hID2r
Y2sK4deBNFFbdw6SN5SkRxIWf3NFRPYa+f3gG/1rhHdaa/l73+BA1a3E3omw
ww9hob6bHGhqBefZEi7fEPkn2p8D37o9hZqEtZhcyoa7xH8XJKrW/v/9iV51
5T1y3o/z+RKEyyT49xnBHCh3MSUZJJ81G3c5e4Ry4FDee6WR8Gv/6IOijzkw
6+0Lzv+ff+5eohLDgeKY9iuv/9fnx/yuiuNgj83+TBvCpecFg4eecJBjNSqv
RfjVQGzatRQOKuZvOf+L1Cv1qC+BYukcNB5/t6iT8CszA6ekZxx4Oi0WyiH8
8v3XrXUvODh0gmryf33cccNQ2jqPg2lpT++oEC7ZkTDBK+BAZPfTLKH/OdPo
reQrDi50nT33lNTfHaefpKS95uBaXWbrBcLFy74HqFdw4DL5uGo74aJHiSbH
q8j3a+8/VpJ6vt34h8rXag6Mu36+uEm4SGiflH8dB3eqVkVpEy68Ot6X2cTB
YivtGXnkvdi6eX+lViuJzxN6qvaEC9hJSa0fOeA9lu2U+p9tTM796Obgx8Pe
+PPkfdq6KGVf4CcOBkMXOywgXNDyS1m2n+R309reXPKe5eul/tClcrBsid0r
GnkPVX5P9HbQOYi0ehjuRjiv6EC5A4uD4lfa4tP/53W//YK4RM968dezyfuq
QjVzWDlK4q3LWu82eX9zY9ONC74Q/5VPW/lzkNTD+ebivT84mHtF7ugH8r4r
12V8O/+Lg9HvnL61hHN8/3T/mST5sW9i5nXSD7z49ixh9TQu5ohuNZxL+oeN
L/76lghxsUf/iuYe0m9kO1jaG8/k4uKl+pDLpB/J/vRPyUWUixOmcoXZpN/Z
GH5ITGg+F+Is+p8S0g9l7c/6+ngBF2c8pvIKST/1/M3hV6+luJjnNFjoS/ox
Ja/sOJPFXCQGHxU+QPq151uFblKWchGusLp07kfynXfk1JVlXDB3JjwtJv1g
ZtoLfZGVXAg+yZ7cR/pFxRMz1sfIc+F3ZrZfI+kvny2xmrdxDRe7KqrstpP+
89kD4Y6D67k4v5n7vJT0r+mW7m2vNnCxeG1QzjfS36YuZzevVOaiREvtlySZ
55JZVo0BKlw8n3E4YhGZ557mNtbzt3KhONp+aYL0z088tWstVbm4nHbKvJz0
1/F6ue/L1LgQ2ZZfakPmueiOsMp7WmT962/zFEpIfxYvXP5Fh4vVJy82GxWS
+fCMe+kRPS7qrns0aJH+PkyZXVK5m4uODQLtP9kChPy0KlIw4EIs/eqSADLf
Bb9tzA8y4kLZc6qgncwLQfe0c7/t5eKnvJjIYJIAgbLyz98d4IKqvWWhTAzp
hxhhGYrmXHRviFyk85j0By+E0x5ZchHweXzNrEdkfnR3Tx4/zEXz+JNFF++R
+Q7sxGNWXGSJxk853Cb9xmzrhGobLjRSInmc62Q++tgYu+E4F3bT988ZvUrm
idO5EROnuFgoYdOi4yCA+0b5cLszXIQdSjdyOUb68x9hIXVnudgc2KzGsCD9
daVwsPJ5LjJdswvuGwvgetf9QYQTF+lpx41NdEh/aMYOnHLmokL66TmprWS+
XmodcPoSF9dXHXxfvUaA87TG2w1XiD03pRogLYBjlvatLe7Enu7FBadEBDjn
lusT7cmFl87X2yI/RuGgLX/9nzcXL5ozdv2jjsJeJNzL4QYXeSPmDJnmUZxq
FfZovsnFjGXRT+VKRmEX7e623Y+LJztOx7XEj+L4SfalOH8uul53DH3yHYWt
krWL0F2i37s/8jwyT1p/a3RyvEf0v7usIxlkvizXPt/2gIsxoX8ng5aO4vCd
3LNqwVxsP5R9WUHAh6Wp/JknIVyw2sX2dL/hw3xx+KmZ4Vz4v9RtEdznw4wi
bOcUwUVf0lB5+gE+TDPdj3VEcXElLs9LfD4f+y+zrTVjuVg1OC9kSRUPe3da
H02K58K5mXrN5yIPRsJNh2YnEr3ehk40zufBoFnbwiWJi+inA/PMyP89kblm
3SlcjCY7RkqvJXlxQt5UO53kw1FzygCp47qK4ftSn3HRMGbtKkH6LJ2vwsZz
s4h+QXIeZbtHoPXa3eDyCy68f8hqPrzChuZt9u5PuVw8mh7+nXZnGOr7rfV0
C7iY9qUgnOrOwo5FTToZRVzkb7v4JnkXE9sHtbXEXnJB0fmueodJx9aMXI2r
pVx8HzswXmBLg4qrvFp/GReOFyqXctIpUNYI3767kou304fqJ+8PQKnRfbPE
e+Kfss8Mp21duFFwNSyrhovAVhdZW482tMW4/dCvJ/u/fyXv8LIOq25dOUpp
4KJJTrlFIb0SV89dLvNu5uL1uj3Xyl7mof7ApRWL2rjgtXDPKbyKhYya663c
di4Kxd5rC/5exsUVLgzjLi7kxZ/pZ948grcznQ0ZPcSPm/JWMVODsZDv9Nyn
jwvtly+qlzxJg0PnhflLB7jQSunSULUuQmnZedfCIS5cL1AmeLffYF6KY4cJ
jYukxOWGRhU1OHH/3A42g4tbobwUp+ZGFFw6G+M3TOrFjNU/DfrbcET3zImX
PC4+HEp10TTpxvN19lUHBSQ/j6/6Llfaiymx0wq8r1zcNX2/1ELQhwPjJwMD
vnNhe/ncxVVf+5E8YMeV+8nFs7p5PRbvBvGj+oRp2QQXPvNueuRvocAo+3j+
oSmSXwMLGx7xKYgLPyb15S8XOz6H0ZQiqRj1tvW4P50HRpSXpfkmGvRO2fSt
EebhUiR3dmERDY+NrbXfiPDgnvHuc8cmOlgqVk+t5vBA99PqXhRLh8aSozO+
z+XBZXPvi8JJOoL+HXYIFuNh6YOAHdVmDAyyDn1QlODB6lymsk4CA1taLDe+
X8hDh+gqq98UBvyLLR4dk+ZhauFznfJlTPTEm4/9XMLDXKW/TMWDTCj5HzwU
JstDgE6HYacPE9cvmL3auIKHi6b1X7TTmWg1PyBbJ8fDV4rMs646JlZpmvqc
XM1DxuqY2ik6E27yJtTfCjw81MgfmfWbibrZ+/dEKvJw7eFQK+azIPNlb4bK
Bh6KU25k02RYuNhjLNq4iYe457rJCmtYeFtpdPGMCg++Wg8fqq5nQTLdsO3f
Vh7WdLlGqSmxcOahwbZYVR765o76713Hwis3/cjt6jwcoX+TvivHgqjtnokW
TR7MGKq0adIsHNu929ZRm4ef06XCa2axkKe0680MXR7MuVYHBn4wMUNSb9WT
XTxEC2wK91GYODyBO+r6PBy/7mAsTux7RtFhtxvyIDZ9hca650z8rtPed3Ev
D/02mucD7zFhmquVM8uE3Ffq+zrFM0w8jdwpkXyAh8MqIyG/tJj4dkPTTcuc
hxBlaWe2OBMGZzR6ui15kGHdDWcQPWL2q2teOsKDRcTGax3ZDPC2qSXMtebh
20jNmlg3BiC7Y1q6LQ/NprGLl6ozECakelr3BA8StksObftJB3NkW23fSR4y
v0X51ufTof5x6/qr9jycfZOc+OosHQOJKoJMRx7G+kr/StbQMP5FVkXdiQdK
6Xhk30UaxHbNulTrzEOaWC8lUoIGXcbAGO0KD69/1SWcM6biqOqHbZfceVgh
sILuAAWXAorc/nnysHrte6vwCxQkKz4Yl/Xh4Yo7/XTp6CBee7mrPffloV1s
cM3NkQF0NJz0VL/Ng189y+5bbz+EL6pPWgby8GjigkpgZB8c8pl/HobxMG3n
560WUV3wEfqosyyCh105irkzdnUiyqL85vMoHq4uO1Kpw2pH/Y+w6XXxPOh5
V85Lk28D1cBn16FEHkQHwtzFvZoxGeV4m57Ew5yoE3lleQ3YoKk7c1oG2f/A
oZn3NWqw58EGg+BMHga/6no7RlTBtl/67rJsHg6J/ZMInv0WVzcJ1T/P4SFJ
6XdvzJYyBPvwZ2vk89D2wP5NV3QJ0lt7jesKeahtk6DXmxfgjVz1/UMlPIxT
ooW3d2ej91JuI/0VD8xGGU9KTxq+VMXOu1zGQ/mm44Y8r0TMlgowmVbJQ6n4
y62/10dA/syl4OC3PGxZ2u1FL7gHzRLb1mXvSf4tkAmLdvSG+Swj8awaHgo+
Vx1sKDqNC0e3HdSo52HRnWXJLZ074Z+5IqyugfjbZtleA2cgfnJOx6Fm8k5d
VrP1irNH8b4fCxmtpB74Wgg9cPJGSzzF8nI7D1+EmzTdxwLB4jdGTOsi8XVW
9j533mP803nZHdzDg8pZ57sXtiRgSUjy4uV9PMy2OtF5dCiF9MMPj2b1k3zn
i0RdrcmE8VavGI0hEh+u29uaZPLg3XlA9jCD1Kd9pzNXqrxEmMJOWwaLh5w+
f8q+idfIcl+bcHmEBxvLTr7/UCX6l/xZ8WiUh/lVN3ecdn0PHHu+qv4XyQ/j
VelKXo04mhNx+vBvcn+/qtBJp2a4/vNNZfzhIdsvU735cCuSk46snT6Dj0LK
E+H1tz9CmCWspEne9di3x59KDHYizmDenfgFfPieYh0Mf9xF3seFlL8SfNTN
+k6V2tMNu3OrIt9L83God/MCseAe/Kxf/1VhKR9dy+KKQhR7Ebx+y/5AWT72
rp1dqVDei3IOhEzk+KiO11/f0fIJFvsMj+Wu4oPJpcYsNe0DJ8v0lYQCH3//
anAba/twa97hhW7r+IjbKO02U+Mzllw85ty9no9b+r2Xaamfkdts/0F9Ix+n
/I9R/UX7YaDstCZOmQ/N/f1m887344rAu+/ENj56KgZ/Gi8egKiZn2qVKrmf
zmC2+pkBPM27F7JGnY/Zidu23XoxADWJUG6AJh9uJ9Z16nwZQMulaIMRLT4W
vs048GjTIM60JybtAx9PWyRLgs4MYmprxtQLPT5+pRrvNI8eRHh4zhHxPXwM
nuQajtUMQul7ccFlAz5c368P9yX5/c6yYn6XER996dOxQHIIR4urz6nt4+Ou
duGyPJUhCBY1vY8x4WOe4dejbnuHEODesWKK9F1PLpQ1nz8xhOU9fV7Hzflo
zZRa99RlCEVqtM63lnycXSllK39tCPuiRzavPsLHurDK3F+3hkD79eX+HSvS
50XwlTb7D8HL6hdz2IaPR4YTHxrId/HX/3T3Hufjw6DbojbvIWTIzIrPtuOD
qri+YhfZX+ea2E+x03zMqZHXVyDnd31eZH7pDB85r+qnPMn9nLSWv+g4y8fb
nVJntbcMYUbCmtk7zpP7eNo9ubRwCLF/NpyOdiJ9o8v+Csmvg9hyfFvlpDMf
2sZ3Dy5rGER9pebSY5f4YMed2R74ZBAnVu5ye3OFj9HTjY2mzoMYv2ncKu/O
h/TmcktHjUE8pJgp+XvysdLhcFLrvwGs0Tt6h+XNh3iiYJn3uwGYC53dmXWT
j3OXs9647BjAyCnnyPl+fCj8YNxLGemH7/urX138+TAZ9VjGj+pHjr9/xvZ7
fIyY5+pHMD9Dn/lAKOoB4fnFTwb9P6NfP/zYxEM+1CGwFV/5GaKzkhdWhvER
ZOHP+be7D0lnM53lIvhwePD4YiaJZ/X6vA9+UXykd/Q9l7L8BId7b24axvMx
7XbwlmUHevFu7gC3LY0PP8eXvZMzu5F9/1K2wzPij/e/4yStuhA9R+Ti1HM+
pO7cy9ZJ74TrrM2j6/L4UFrcF+26uQMrZtz64vOajwW63MzaGW0Q9VuUL1XB
x4ulsbUDNi0Yn/b80nPSx3tvxsJDmU1o/ts+1vVfRdYdT/X/hYtkpJKWyooG
IiEZpUdpUJJKKiIzhSghobKShIyo7MyIsvNV9h4JmVfJvJTcfS+V+H1+f56X
+3mf5zznOc/7fV7qZnDOeVAqf28zvP9sY8t/nkFQ/+pwU/UaXLv7X3FN5wxE
n8h0HfapgtHcKfeL3UT/KmVGuhLLsYvjPus/MIP3jIJm5S3vscFtRemmrzM4
FObrvWJZEbhYSR7vhmZw60kDSEL5INGbfpPGZpDAXqd41zQTDTfNym6SZ3C/
96INV1QKCqh0z+U/ZhB23lQy2zceiU6B++OnZ6AkcK/uzfdneDyzeV6JMoP5
qzE0zawQuDq++9hIm0HWgsxOWbIvLKZ17pkxZxCxKqV3leJt6Nv3azHZM/Ae
+rAxpN0c6j8cF4LmZlDw6q+rTqQ6tl1bWin+l5j/oK9nvqnJQWgy+kHRvxm8
MBcP2xBkjHlbOe0TSyh4wx9zun3JTUyOVywZ5qIg9gp9LnTyAbqsz1W78VCw
SSvN3+pVMCpGJ31X8FFQFbL86ZH5KGRbeh9+JUBBYZoZo44Wh5hhIW61lRTs
l5hemvw0BX5X0mvbVlPwsFL6x8YPmbgxpBFgJUxBUP2Ur+GtXBz5asUTtpGC
4xIvvdtli7HHdLZeejMFe4RqXHSKSiFKehL4nygFN4O5tHbd+AhmXxHvxFYK
cT8uc6uRqcGQsV6T5zYK3LKTxQPU69DS8y1IaCcFK4rlbjw614CUL8sFDshT
ULEmKsIsuQWGny8KRu2joO6O5Q/2604cMJhpk9GgYMPvM19ef+iCzCff0Ir9
FJT8O8N7pvULFluyV/3UpsDyJGnL3FAP3jbMCx06ScH7irwAtAxA5HzudPYp
Cp77NziJZ5LgN2bWsM6Qgsqx+PTw+4MwXlLpNWVEwX9h+vY/Rb+hKszZ+OwF
CqStCi9UjRH7k5ik0sdLFORLjBtypQ9hQcOX/NScgiHRTK2rK4ZxrUmp+rcF
BVuWu9YUWA+jy3g0ztqagpc/13Md/28YGbd1zqhdo+DvQ363m5dHcDqX5+PQ
LQocU3I/aweMomx/SYyuK7F37777ZE/TKLa1XL1V4E4Bj5Phjh7+McyRG3cE
elGQbvNnvUfgGKzcPJbS7lFwNogs96J6DG3csl8vEXs2q1BwJofYF5IlgyMU
HhL98x9TYlwdh8A7TcfnjyiQV2yiaceOw1Vr+tjSYAomex+LVLeOQ9dEf747
jPh+xR/bUNkJ0KJW2Xm/oCBNZ2twZ+cETKQqD5FjKfjDv8NTZm4CdXnOooYJ
FBxwS+TaLEbGi08dndIpFPyuM1/9x4oMrsu+OaFpFOw8dE9lwZ8Mx59Kj2Yz
KPCK2KjclEqGNm/UgdY3FFgYXVrR852M7GidjapvKVi/O0JNbp6MddtY9MQ8
on8ix+TtN05iSvt8pksxBb5DHa9bT0wi3HOj8OZKCtTsZ7jo6ZP4w9f0y7+a
Au1zHRIeZZOwee7ROFNLQZ7Vm+/b2on9umjAu7qJAn+9H/TlzEmkHA6+sKuV
qLfGJOD4sikIdmoqR3+i4MIs/5q6dVMYnombvNZFgaR7a16AyhROeOvXdHVT
IJpkurbr0BSKBP7FH+ijwG96WsLp9BSCdpqfFfpKQU+m64uUa1NgFK9S8Byi
4F5nePph1ylcPlLJOz5MzEf08xztB1NQspQsfz9BQfEeBsU6agoWl8rd1k9R
MF6wqcwqfgrhZ0x23/5JzANtPqEzbQpVerPkjl/E/PnaSBbmTIF26FnSbiqh
v/NeOfxFU5DUVLoYQqdg4dfq4L6yKRgqtwv9ZFJgaLCbKV49BR85h+bjHAqY
bhGkkYYp5Enx+aXPUWDgyLtZqo2od3O6JvdfQu/XBaxHOqYgtPYw0+If4Sfp
5ae29kxBe8X3NxWLRL6ggStj/VO4ye1tI8pFxVMj378yX6eQ/FdEzHMZFXTN
r7bMoSl0MIt7+pZT8bPGvllnZApLfp0NU+Wnoo5veu+WsSkojlOPRa2gotbs
Srjn+BTMv4Ys0lZSESNN+mg1MYWwbtlSAyEqVMV+hHcTcUVbw80cYSpkHLSb
O4iYUmctK7CeivV6l3ZfJGLx8iWjdhuJ87+acTsQ5xkUJ8TWb6IigvtmHD+R
736u5jlpUSq4XtzYspfA8za9b4WvOBXPZ20KfxJ4hxJc64Ykqbgw5R2oQNSz
KmbNvQPSVDR5LEbPE/UeDHurGrudijtF4W0XCD6cAk9SZndSYVx1Z/Fg5xQS
709lnJejQkXywUw+wWe7+8MrhfJUuDxyls5rnMKCk5TIGkUq9DPyz2jUTEHB
rrLDSYmKlZfPiZz6SOjjyuXHbSpUyD4oF5ounkLIhd+H5PZR0X8pJFb43RR+
HVcpnND8//89Pzb/SZqCqHaHg44WFYp3Mi7+93wK+uo3tr0CFUe+MZ7+C5tC
jkxm9OUjRP4/d1OFvafwVfKIQdkxKm4JRgiN3CL0vmlkuYgeFdMrawz32E3B
kX+Lx5dTVGhH0fROGk5h188wkxMXqPjr8GiPnugUTEZ3rX19iYq80GsXmSun
EExqauW5TEWzJalJaHESP1u4tKotqIgO8nSP/z6JzbVJbHFrKi76Svzg+TyJ
Ex8OvPW2pSLt4bU7/eWTyH7jLqFuT4VUptDevJeTIKWu7Y92pOLFjNZUfuAk
BOLzwplOVNwc3vBkw+1J2If8XPruNhUTEU+WcfQmIXvDfHz7PSrMvx/pzKaS
8dY/iOv9AyrsJwWHdXrIUI4tkNT1o6JHTbmOu4yMA43LzewfUZEofMpowocM
g63vet5GUCFZc3RHNjcZX9QGmHhGBTNLn80amcBFA27hzhgqrkrIlqFyApZe
FwyYcVRIf+ouqnafgGvPYoNaBhWsBdN2ev845qZlJ5peU3HwqGZX3ttx3OMy
4jZ5Q/Df23P0mP84AhVfwzuPivv596O+y4zj5WPD0qoyKhrbAl8dsB2DeLJn
75lyKsYbRQ23Ko0hpSSNNVpJxfHMKer7v6PIGZvbw1NPReqSjLTJkFFUaL3K
0vtMRe5bO5/2xBEcNmptJHVScfri6x+9V0bQaM+ecOgm9JXmVXRXYgQdz/Wk
wgao+LR+Ick3dhhjdHps1xgVkacdPa8vDoEv43CI6RwVSy7cNn26noSQj47Z
v/5QkZWadv7tjQGs+RLTdO8fFcd+nbhXW9uPlT5uXIZLaahRGPO6aN+HDbnN
B12W06DSafwgKr0bsrwu70uEaLCNUFu/jbsdcpujz/1YQ8OHsYVPliVtkFco
pW5ZS4PBVVLiSsdW7D63sNN3PQ1cKnTxqOEm7E0KfnFyMw1+X1869vytxb6C
3L33t9AQsu3HmenPNVCr7+jIE6VBN2JTh3Z2NTSnN/BvkKBBTaRCmkaugLZa
6t1haRqc8zVXRTeW4PCJhvVrt9Ow1/+4xoHpIuiY/cg/uoOGY1G6H15sLcQx
f8Wf2TI0CMcxBrUi3kE35mzgN1kaGtJ3Zji65kAvy01KaBcNPi1HPap8sqD/
+YOJmwIN0iJisjs3psFgdIiTuZuGkzK5NXwpr3CavTSKpEjD57ufFkzeJcKQ
b7viSiUaCug1Kno3Y3F2i24rlGmgm4RvKQ6MgdFuBzsXFSJ/WqmfCiMS5w+F
cafvpaG5aXmGgs1TGBvlJ/Wp0vB2cH/4aPBjXLTr3i+gRkNpyfENisYBMPGc
7TugTsN4+lRUWOADmIZudnXWoGG05vHicMIdXE7WEkrRJPhbnVghNH0T5oUW
Od37abh0+aa/UttVWDT46/Jq0eD6mREosOkyLAcyxjUO0rBJdWls0RoDWP1q
9nEEDS3Sr47vXKoBm8VfoknaNJjGJ0fFXt6Eq8JC/3UeomH5maHGqaoVsNuu
cn6ZDg2RPH9niywVcU3dmL7vCBGri37M2HYU9ifvhl4/SoNZ6G1Pi1dGcDSP
l40/RkO9XX9HF8sCN25V1rcfp0G7/e4tF7HrcAoYtVyqR4PdKZGWLZdu4eZz
ngWVEzRs2bey1f2TO1yyZWKvnqTh3QWP6bffvXG7/OS+l/o0iG48uWuo2hfu
YxFOCwY0nCsfzZqWeQwPTpGAkiENOyPMbXSVQ3GXvz/D+gwNhokxrFcl4fBW
FP/edI7AZ1G6nFcpGvcPH/L6a0SDvlqgyLOg53hw3mbjbmMadpk7fT1EeQk/
r+zTURcJPlM+7pMlJSKocV+VmRnBB6V6iYBnGoquS67ONqfhPpaqiAykY3iF
gDnnCg1B3jvEt+7LhLrht79hVjS8Gk9h509kwYbRcGLQmtCb+smonfveIPxZ
3sudtjRcWfhT5eKTg8l+f7UqO6LfvJYhvItvIex1I1DwOg3KPYI2AyJ5OCh2
oeeiPYG/u07cKzcPMZZyt+mONPy5Fr//VGM+arjX1Wg50bBxekx69GQBKOn/
hIKdCb2H32180lKAYz873kq50BC6Y4Z7R3EhXELK/jndpuEFr2BKpmQREnen
6X9wpSFQkDp+5WERWjpC43jdaajrziqQHisCx+XOz3N3aJDbxnrcplEMqfWW
GskexDy8/Ges/rgYBu9PBP26S8xv6usTep3F8Ly0t0/di+A/3u7exJoSpP8V
2/HQm9BfiyeTc6IEHQm8bp33aFCnfrVw9C7BPOi1Yg9osNnTGqaWUQKZUZKw
vQ8Nkjf+9ZxqKoFRQJ1liS8NTydO8rweLYHPjrd5XP40rMkwOnmYXYKcpueL
BgE0rCZFSooueY9+e1+DuIc0HLXzOKrO/R7LVjokTAYS+nu36nn8Qgn2vDP6
pRJEQ+vJ6vVnGSW4fObgfp/HNIgfnvhhM1SCIObO4LZgGrS4Fo3Ha0pQFL1m
QCSE6If8rvejSSUYVvu70zaUBtqL5w/c3EogSBp3zw+jYd/9TyjWKYG6d3v9
v6c07D7p8qZcoATW4qXrTkTQ0M41mJrbUoywqlfWMZE0bEtZvT7TvxhlVk8K
RqNocLDuU/6sWgzyMrelitGEHirVXA1GiiCcaW7oFUPgERF6ZRhYhIN6ukmN
z4nzDwqOLNteBPtpJcralzRM9XxsTSgvRI0iT0hOHOGfMZ+jL30j9NBJIc3F
01Btefom06YAm137ZY8m0vDoqbGQxWQ+bpW+afyWTNQvq1rV9C0PkofOcq/O
oOEXTTknWzkXD84med7Ko+F12Yv/TDVSESb7oPR9Pg1nt31Sovx5hfglVzj/
CmhwWbSZdK9IRtlbcZfgYhoinl880JIYj+aHC+86Sgi/Vj/LfKcVi/7LQzMb
SmmQd1+3pmTqOTgCiddTywg/PHFYetwhCjyj9zJ/fKDB6l/eOVfdCKz7z2xC
sZyG42sltJe7hkEqXEvavYLoX/+d4uKHwVCyE7P8WEno/fYKw+iWQGgf/JfI
VU2D/TqrDr3j/jBY/+2rbg3hF7R3vF5LfGD26+Pmp7WE/nU9ooPZd+FYG3+x
p46YT1Vfi1w3V3jFesdsaaBhrcrNUrX1zgi+dbnbspGGyUs+fuOeV4nvDgi/
biL4/fhEMv2yOTIlRA0pzTS8cV7areJ3FiWcv6F7Wwk/EchY93KNDuo+DbZ6
thF8riwf0AqTx5e0D/zVnwj8g2TPG294MeoVd5z3Mw1jW9bUuKYLg37W6+Gp
DgJfR6/w+34VLJEzrY3qpMGyPnGz311drFq6fympi7hPwixXaopcgFj/Zkh2
0xB/8oKuS4cV5N/98b7aQ8NdyrF7gRwHaAaSynJ6abDI4vupFnAbemZlc4w+
GqocAuMieT1xcW/sPo0BGs6YhwrF1/nAboWn6wMSwcf85R3qyx/CffRSQf0g
cf6hX4q05scI+E+DtuIb0X9llW21Qk8RFb5p99khGnyPPlDMvRGJFLvfDi++
E/z1/xFeFh2NvIMDWUPDRL6+RCPrhRdo//Viu8MYMZ/6+6v2nkzGt1oP6/xx
Gj4ZhLxbY5WCX7EXX81OEP6RZ6q78mUa+PVExAKmaBB5zuKE2WZBRHLOpOUH
DQ9zSF2c32+wY7bvhdA0wefBPA2dnLc4kv58XcIMDS9dvL8VqhTgnPeds2MU
Gp4F/6vXe18Iq3MXwmVpxHtEU1dPUrcYD5ZuFCxh0MCML2wIflqKMrMY7s+z
hP56Fo4w0iuxZ0M0YwkXHc1S11ZUFzVigeWnpcRNx+TNqkiunCa0fbkZZLmM
DnduzqGRtGZci9AXr1lOh2p23H/esa1IFlx2wn8FHVU3f3ukhn3Gau7br3jW
02Go7/p6ovgLvo5Y/FLdQId+fWOug1I3sqsM1K5upMN0qqdQPqcbx+7LfWrY
RMc9AylX0aQe3P89MvdInA7lgnxX4bt9oFANDQVk6LDxcuNcYJLwsf1gnKYs
HZeOut57fnkQwbnyZHs5Og7GlTU61g1ihwOfd6s8HYH9Y4PNT7/CnFyZGaJE
R1NNh9by9UOQr89lfFSmQ/KX+I1MlyH8SY3TmlGho+W0Qnh7+xBx/9z5cmof
HUo7BW688/uOT193L67aTwf/ZiqPveMwYj+InsABOrhmE/aZRQ/jWqxAtLMW
Ha8ZMVovyoex7CJZrgN0zIdu6v+5YgQHviQYRxyh49dG7p+yySPIaRZ8u9aA
jr/0+IMPX48iTa36jdlpOmrVNV/tax5FfLpbVqYhHd1krgrFH6MI9R1K23+O
jmNGaTncO8fgpJEXZ32RjpWiSnV3YsdwNdPmZe4lOlQuvanMLR7DlfWbns+a
0JGV+/cOOsZgSPeNfGJGR87RosgH3ONQyjr3uNCKjvev5ltLrMYht5Hv0T9r
Or6arZhZeXccUg8/Bhy3pWP3/GLtl7BxCFtu9xm0o+M2ufNGUek4WCKz7tw3
6PB5efD7suUT+BX4xvWUEx3DU+vCVopMYJx1xeW5Mx00K/bLaNkJ9HQ03djl
Qoe5XarfrpMTKAmKtTl3hw6JFVtoSUETeMsxsErwoKOkbfuy3pgJZNhwW0ze
pSPv7LJTL9Mm8Fzb0dTLm9CD26FbnyomEP5W8lL9PToadSxMDrVOIEi0x3j1
AzpG6grcdPsm4DGndTbVl+hHTm/lesoEbl5lnJ7xo+OBZGnk0NwErndnnFIL
oMNNMngExD5lkrdarzWQjvRtF352bCDjrHjdsfVBdLDGBCa4JMk4EeJx5Mpj
Qq+2G1mdMmTsvzYC5hOiP/kbvE5qkLG3N1pLK5SOZKrDzKw2GfJHTux/FEbH
jRtz9kd1yRCVLNy3JYKON4dNhRrPk7EuzG6vbSQdis3q7HlTMlbOb1F+F0WH
U9KjM32WZCz0BSjoxNCxlpFd5+1IBueoxq7Q53SMf/OW1btFBqVwRqbvBdFP
ZeHuj25kkLem7NgaS/y9SNqi/y4Z358ab3OII/TQnWgef4+M/n8CUsXxhP6i
T13i9yWjw6FSYjGBDhI/qVMigIymgdtiekl0bF7tfWg4kIyq4zJbopIJ/r1W
bDr5mAyP8p/bG1/RoRmOCTwhQ1Eld8/fFDp6qCL1P0OI/K+d9yum0cGj9WOp
fhgZieLKx6zT6fCezP9u/ZQM42csw+cZdNy32PhCOZyoV+C9aWsmHdImmRal
RFz34O7Vxdd04j3Seo1NxN7s/bdUsumYftw58IOI9zoseNm9oUPc+U9vNBFP
D1cFxuXQwW10/95v4vwUY/+Iz7l0yN95Ob6OiE3ajsZzv6PDgRUlNhVKhvBh
vky1PCIOalW5TeBtft+S75BPx/7BMvmSYDJ8FEI/JhXQ8cRsKV9+EBnqqacb
vxQS+km1r7Qm+KCJCHfxFtPRd5B9rN2fjMyw7q/7S+hYwkUKoRH7ufmy55PO
7+nQDYi820LwvcHzEiO1lI71g44MU08y2qlb/vX9R4e1ws6BNHcyHtoO8Qp+
oCNDIeBfmgsZLENrMddyOux4VQ+0XCcjp2G7zOsK4vc8b8gUGzKsD0wpf60k
9PZIiNp8hYyunTd0j9QQelvYQHplREZwguI5j1o6YosFGAkGZBxayzDLqSP4
DXKXPk3oL2/B/fa6RjoiUe73WZOMa64a93Wb6GCzr88kqJAh8fNvkHczHXUX
PnIk5MkI6/FJHG8l5sPfa5eWKBnHTupkiXwi9PKk1qtvLRn/qniK9NvpCH0Z
Wi+9ggzHnODmog46EvVan34m5mub1KnuqU46RredoihQJzD4fPV30S+Env1G
u/ZPTOCE/zNWQA8dScGqOdYdE5AxSZQ4T6JjIqVcpSNlAsOfLeQeD9Lx1MCX
+wXhB8+PSquWf6XD5OzXEf7gCSxXen1i+3c6Tn3Ur5lyJvyGt8CNPUb4fa99
3D21CcTfc/WRnaDjneCYkI/MBM4x9z0xI9MhfDCItX3TBGqGPiTXT9Eh+6Pr
4MXf40gqrm+NniH0zxHcsr94HJoW9+trKXTYPhLf/zJ1HN0CapV0Kh1h2UHD
MRHj4LN4XXCKQceHnw0Fjo7jcBF48pJnlpi39gtlV8XGIVisE6UyR8fqzm3r
0/nGkXllPsTyNx0dcmqfPZlj+Fp0w6f8Lx0GYv0bphrHcOyKoZ3bEgZ+5Wo8
fOMwhmF+fsvUpQx0tEuqBZ4bg1dRtUknFwMqfNWZVM0x5PGrGCjwMBB/flOU
Pd8YNhWtV53gZyBLWrh6LGEUv/gGuc6vZeBgY8IygYIRBBZGzfutY8BKxuLV
xcgRbDXX5+StZ+CPX9fv7S4jMC4s/yEowgB3yqEX+/eMoNIsuaNOlAHBb3Nr
DmUMI7LANnHvDga8jKW5SxjE/Wkm/sJqJwPrVM88aU4ZQiNvX0S4DAMrJZZ+
7DozhPnLug9/yTGwui7LqCXnG2x5dzmmKTJQob/M4JbxV6hfpmms02BAY8p1
W4rnAP5FO5NNNRlYXhUh2yM8gJrPlMjU/QxYHI+Z4Mnux0mdmWnlgwxcWFpp
69PTB3O5nwlndBgQYoyqtm3tRcDc2NKnpxi4XrRxZtnLLugpW7/tNSDwHXm8
u3V7F1Y5jpqIGzLAo+07crKgE8+/DxfmnmWgfcPQtZqWDmQ3fLNtu8DAC86J
EMHZT+h81tfMb8WA7tXdf/m/NiCm3dj9jDUDCdtMeuQX62HC1yv10oaB81rW
X0231WPcq9tLxo4BPtOPZglutZiz6lQ47shAX2m6ZrV6FcrjDUlhNxgYur1j
03+jFfDr/RzY60TwP63PGDcpx4oT7d9tbzHg/qH90k3LMogrtUYEuDNwhP+h
1K2OIozZnzjYdocBj5BIq+t+hXid1vxz7V0GZlNqz/VqFUBJpEkn1YsBLWXX
KKW0d+CcOU776c1A8dsE2R7jXJQ9aYhXvs/AKidr5+Pib3BksY5d7cMArdDh
2daZDPBrHEnh92NAtjhMT52dhnaXWoMz/gS/S1+Pea5NxQVydebwQwKv99OV
czuSiPvskJHMIwZKbiX7aU3HYfhS1ZKbQQzsfFi40uHbC9h/qri0GMwAS09z
s4Z+FCir9NcqhTDwCIv+WYxwuBgOtFmFEnhPGp6u8AsFJ+Jq4LMwBkI6l0yH
3HwMzy9MNDxlIOKcWPKdtw+xsM7392w4A4MyvzpED/jBz3hVoWwkA26FAf5C
yvex/EWco2kU0V+fD83HHnsgeEBmR+gzot6JM4Ke3rexakvJ94poBhTsioxk
1jkh8rLOS1oMUY92OO2lxVVsSOw4K/WCAXXe8Jy8oiuI/W4maPSS0ENREK/C
HyOIb52ufxjLwGYHHk+SkB5SrDwevI9jIPhe56OU8xrYkcaj8SOe4C/Yv/5w
kRSyJiIZmxMZuJYq5j62bgnkd0rm6CcReK0PJzzn4kfetVzb+8kM1PHEM34v
k8XebE2JvFcM3PpP+/AtjhZKpxv7R1IIPVQccSGnnsQBhfORa9MYOLfSIkJB
yBhVTqMnj6YzMPq4caPuegscyXPmuZNB6D27dO46/1U00ecrXmcyCJ+dl8c3
R+irBHuQXjNA9ljxt+iICzpcNyoLZjPwU1plXs3fHUYladNab4j8YmwDix1e
6J9VSnfOYSCueYvS7vU+uKxRaf4qlwERnaiYrHo/DHvqi3x5y4BrPXdMVspD
TP27+mRfPgM1vU+vPiQ9gSNYR64VMLDxfax5kNJT0Hx8F14WEn5kVrHvrXEE
5rjjb/0rZmBN4Vu9SZ5o8Al0XqgrI/ygPtj76cYEhJw0X8P5QOi9fCh0en8S
hEKnW3aWM7Cr1VQwuTgZIkLLDz6pZOA4VSM9i5kCmQ37t52tI/j0Kt1Rn5gJ
u92ry2/0MfA9IEY34GExNixayf7Xz8ClxU6Dw7IlqPtcEr2MxIBn+/5Gj9YS
SN4yd4r7ykBOFvlhjUApSIW5Es0jDDibKy3TuVWGoIClIevGCP/zXvJnL88H
7Dt/fu7KOAMxJJcdb2I+IIoz38EhM/C+sXBtbf5H6Gvo+237xYBRxLbvWg0V
+MOfTHGeYaDtiuX8mE4lskhMkw8UBsyVKL4OFZVY7h2ncpbOwPOUA8J0oyoU
6VOTEhiEf86sTjIJrYKVmI7gDyaRf8nybpG6KlRW/Bx/wCH61Zuz0Vu+Gk5P
D55pnWWAKz88ZoN5NUQtIss3/GbA8MYLI1poNTyWasbk/iXw1nVeMJyqxo6u
UK7f8wwohVt8bReuQU/KiNORBQZWuLxaem9/DZSPPD4+uIQJndwiwcuPajC8
7lvhDi4mxH0Wkx5l1yBsYo+kCzcT9N4/8v2tNThQEhBSvoyJH4dL6k5O12A6
sH+ObzkTlXren4b5ahF7Qd7WiJeJ/qAfbdHbaqEr49OZxMfEvqvnHl0/WAvO
3BetaX4mDNc93GpqXIu05p3Z+1YwsSKhvfm6Yy3Oxnpt8BNkwsik+O8zn1os
dfjs92klE0MlKve/RtYib780VWQ1E6/KZI5op9bCXPCOqY0QExe3vHtUlV9L
3GMtje/WMMH+HhVsVlGLslzxvX+FmWi+ndywsbkW1+67JB9bx8SqMcef1M5a
bDzdIBi5nsB/bV8Fub8WDRKb737bwESnFdX237dauNJuTMiIMHFac+dO1ZFa
SFVXn3HdxITE0Hnnp6O16IhYX1G5mYmNWpmTK4n4vtV1uRWiBP5c8sGC77VQ
UCmPMRZjIr7F9dL9wVp85V7DnSLOxGetmeOuPbUI7rZxnpFg4m7tnHnMp1qo
p5cOqm9lYqmxNIVcWwuym6BugBQTFlMSD66V1uLZMYuiz9JM5HiO14u9qYXO
xiLJLdsJvBPLk/jja8GY5A29uoPA5zi1WvFJLZJLTX/n72RiF411LMKjFgaP
39n+k2HiamVVrIpNLeYvcXfpyjEREGt/aZNBLeyVbU/e38WE645e0qRaLfoE
GusK5Qk89o8OaEjWouBD8HtxRSaWXT4+cOtXDSSf/dpjtIeJj6Zyyy06ahDq
aJD9WImJNZpzs0MFNbgmJpzAUmGC9C1CM/F2DXrZtzfIqTKxzbDPjnymBjrt
PU+v7GNi7XzTo8+7ayD+4KVfizoT/FhIjhmvRvew5LVkLaL/EyZh97Wrcfg/
v5GegwRfR9+MG62rxruIcZMV2kyQDzjJs8hVCD78+pT7YSaiFTPN0oKqoJ2m
qKJ/nInUtW7yP7wrkWN3cGHWkEn4jNZpR+YHbNZOvqNwlolYeWW2oecHPBLh
oludYyLR7b1H1mIZrJrrxz6dZ0JKymnJIk8ZRHadak41YcJkV73sce5SBFBM
n522IfjQsOmV6CrEZbe7cpl3mFiS5/imozkDOX6dkb0eTGxRu7wusz0d/57K
/uXxJPSR+P6ybm8aErMHWm28mdjuwZ3ZTEnB9+8aN6R8mXi8PkjgRXQi9sxE
9JzxY6Luzr1gvv54+Pz5oeXrT9QbejPHTzoOkutjVw0/JPgXPqB+qu85rE78
eZcQTOB9JMW3pSICBRfOinx6wkThkwnLcqNwcNtm+8yHMGEjPqIQRA1F2gOT
M6ZPmYhcray/uzkIrJCC/4LDmdjJt1HOyDwQR2MFpMoiCH3kz6vbrA4AuaiM
IfKMiTJHxYS74Q+wr0bYVDeamL8u6eXUFC88+mxfeyeGieVa0glLmHfQ/7Vm
V+ZzJnYLKVfw+blC5ufmZ70vmPh97OSuC2duwWPWZZ4nlvADEpnPvM4RTcta
bVTjmPi0dW10hIMdRISlP9nEM/GekRmaFWuF6xJeqs8SmJh9riHUmnkZZfJf
EmoTmbhl+aFgQPk8BDR3LWcmEfnnFpYrF5+CyXF/J6lXTHzpNFny+agOso0G
e8+kMNEU7LIyQ2sf/liqwDeVmO+rxx20RLfjpPOTzLw0JlzUI4t6Tgki3nts
9XA6E/DivO6pZh789Xi/x+pMJnhWrjj34cFKHHgeNXzwNTFfvgGY/bYdoWnT
uk5ZTCTbRAv1LlXDUL5OfkI2Ue/NDWfWzelgd2Xcpk9vmNiaYtirM2yA+21M
3/kcJsZL016KiRvj88DJn7veMkGbvLxVhNcckpOpZ03fMcGJ3xI8E22Nm6y/
ZcF5TPxLsvD1bbiGqqVG0mX5TPgNVdx0inbCmtU5T34UEH7bf2bVZV8XWIku
Y4kUMXFz90yLBK87CmQvX9YtZmL/X/6MkcG74FIrqrtTwsTeO4deOC/ew9kj
ggqZ74nzgrdp1qr7gmn+8R9PGeH/ZR2spZKBOOK47qrqByY0aN8c6z4F4dld
x3abj0S/tqt/pL56gr3PRJNqK5gI4ZRXSA+FI+CVKy+zkonprYGJIz6R6Hnb
5ixVzcTIi0Ur6X3P4N7sre1bS8SBe8XPEfql28aZttQxkTu61Ulj5iUcucrc
1zYQ+sprimzdGA/L/bM56U1E/y+1nG4xSoZ+7q1NLZ+Y4NJwLEwySUejXvje
tZ+ZyKgdtN9QmIHD5LenL3cQ/K/eHnV63WuoSfx6SOki8Ifzq0nQsiEVcZUh
3M/EVEmNoaZ/HhIUHq68PEDMf7KVwc7T+RBpSZVJJzFx6k7UMi/xAqzkHjFX
+8aEyskWx86GQsy5mraajjLRvt1GPFTzPT5fNExL+0X4Z37oSZ/wCpxgO1XO
zDDxjU98gsu/EnURoaR9VCbuO3DSru2vQllLi1AznQkzb66GqT3VyDhw9N4M
h5jPdfG3fxN+6y2pabxvKQs3xGS2PuNrhMyUNF/TehYOtNgzbRPbYRViuOfv
BhbWXH/pliXwGfF77l3cLcKCeeqmw6runyF0t/f1s80sNEVtGny0vQNz/I/1
LCVYyJdiH0pmd6BxFyX4jwwLlNazPiSfLizp2FyoIMfCItdM5fa8Lmi6Hh+0
2MWCm9P2fuZQF95+TN7VqMDCbbF1xmv3f0HMqXNtUcospPwYph2c+YKrzqUr
FQ6wsGUdT9pt9R4kr51QtdBiobTcsu3WlR6Q3q8xjzrIgm/iPsOJhz0wWOLw
9rc2C9P8YjfkOnuwL0LsdMNRFpz3pYlus+zFTdUTd34fY2Eo+wu1xr8X2QPu
SfK6LDQ2LWnqTu+FuFQHNfIECz/X+i0/M9WL5YV+4VdOs8BRpk5lXe2D9oV3
pZGGLPxXer9kKKAPnn8Hh+vPsOAUtWtzYEofKDqqSvJGLLR5R0zt+tqH3u7J
zrmLLBz+k/t8ULef4G/dn10mLNwjPV392qofJ8QOSV0xZUHT5PWxKa9+VNjG
utSbsVDAIyBUn9OPdI7+2kgrFlY4qXuzeAcgIKdNGbJm4U2y8itZiQE4mak0
77JlYUArne+j6gD21W16UG9H9I/H+u5viwHEzgqaCF9nQbVxo2a62wAW5Zao
XrFnocrg9Kt3jwfQFEH+OefIgjU7+evIuwHI1w/UH3Vi4eqFe+YCNQMIn2tL
jnRmYf5K6ffILwO4dKXQWN6FhZYq/qP1rAFURGYo3b3NgsG6g23Oy0iQangp
2ODKQk3cpTSvtST8lPepuXKHhT63N7WliiQYWNxOyPFgIeC/dyk/D5BQGHXV
4/ddFoQ5+sIP9Ejw/qO/O8qbhc9Hrz7osCBhWEGbf/geCz522xTDHEg4Yqky
Lv+AhYNqoa/fuZGwsmlTbIMvC8OH81Qlgkhw+Svottafhd2L4X03wkno3b3E
0CKAhft7g223viBB04opl/uQwFP3bKdmEgmJ0WSeP4EsXNuRfbk0nQSu5oHh
Y0EshNSWqMe/IcFuvu1D1GMWoj2vzU7kkdCmWBUzHMxCuMCeb9HFJOyxLryl
EMIidPVDLOc/Ep7FZOh7hrKwPVN3UKachN/NL3c2hrHw0W6ptmAVCeb/QrjW
hRP9PNpmbVxDQs0en28WESxY1A/e4a0jYYfN7dLcSBYitkS+l6gnIfj51ag/
UYSePv3TTyJiSsslp+PRLOxMarIOJOJzC/p6z2JYmM1oF+0hvi9V0t428pyF
Yp7XUU9qSRC1VVlUeMmC/Y6xsaxqEnxe7CB5xrKw8NVbak8lCeOtm4ob44j+
mlTbiH8kQXdRMHxdAgu97sJVrqUk5CovcbBMZKHbvfuYShEJwleZR98msfBp
zHityTsS3F+SJf8ms6B/cZfMjywSSG0Df4+nsODprfJoOJWEg0s+9T5LZaF1
4OBe7QQSUlSq8kfSWHgZIi3NF0MCr11hyO4MFtZfMXBQDyPBMTbDziuThR3v
tmzpfEhCx6eXh5tesyCue0Ozy5uEF3t95izfsMAQK5lfeZ2EebvbX97msODu
n+qja06CZdzVt39zWehSvG89fZYEOa5TNtF5LDxsV15hr0lCmKo2RvNZ0LG0
zj6qQALjmspmxUIW9qqIWDyWIOHD500dTcWEP53wCNTlIvSgzh27+j0L6hvK
KlYyB3Ai+Ze1cSkLYyGKhtpjA+i/WTk7Vkb087qE7kz1ANhrbCUWK1nQ3ZeY
bO0xgAOeBj+OVrOQ9CfrUoTNAAJG1QpDalgwdD/Vs8twAMKFAsc31xP+tFJp
Z+b2ASga5TmptrAgKaxlUdTcD/ePL9W9W1mIC84sP5ZP+MM2f67aNhYi97m4
HH3RD332+RjDzyyMCz0SDLLpx/WYv+UO3SxQlSdvSnL6kNp/bGXKEAtffH7k
pfzrxU/tPX1T3wm9WmRenR/shXLWpleKI0S/A2f9av/rRdXdX3vLx1iY2JSi
GHe7F982R17un2KBj3zM+s5wDzaafXuziknMv1vTd52kbpjXN7idZ7GwtXO5
f6prNzIU8hDPJu4L+SGGh1439i74fZGdI/Rm9F3tCf0LziTJ/D3yj4Xl9sLZ
Vwi/fzJy+4QXLxsPzvt8bC3pROQZh605fGxI/jQ5e+9RJ15UW8195WfjoZ9G
QPOFTqS9OpNxUJBN7AHW4xqzHaiwVOTiWsMGPffcvUylDjBGfv4XtJk47wTf
7Kz8J1wctZSNUWDDVzf1wH+2DTA/e2lJ4242RI7rtm6YrYdtjWHfrCIbxy2X
xloG1cMlBQ8vKbOxyn5SbzS7DiFWYiOiamwwde7nRtFqUDna/yJVmzjvayWO
rapEw9kO5+5DbDzz7TgepVaBtprGYzw6bOjaPx2ZsyxHf0oJ6+pRNvxy6pPs
yj6AYfXMUO4EG3PZi9vPepdix9hpvvxzbPyKTx1beqkAF0ZXRv41YmObRquh
3NN8BI20bjlmzEZUxoGmS015+PH9uOLgRaL+vX/ooUFvkfMVxjzmbFicl85Q
b32Nb4P/vp++wsaSDVc6/JwysWrww/VYCzYORYoJFW/KwM0BtXuK1myY0xxf
FwalQqVXMe3SNTa03ynel05MgE3PjELadTbC1zmtU3KOw7PuN+8p9mxc3L7U
1fTcS3C6drb632Cj9FfPoKdxNHZ2TRi1O7Gxxa9ZQso9Chc7U4dEbrKxTqou
/ER2BMo+SzByXdgwKpXhfp8Sgun2b15zt9mQNRql/vf4MUTb43h03NjozVdd
KxofCP1Pl56GurNxTEzyuCXJH/faNm7qv8PGXw8eA56jvnjb2pMidZeNw5RY
vtnSexhqiZK/4UngfeRlZnb4Lla3nCl570X0K2xIbmGHG7SbV2tz3WPDsSVc
NczuFm41fWrWv8/Gj3PLMq7wOyKl8cm55w/YkHIVsB/5Z4uuBr1vIz5Ef9ac
sn+eawHuBl47eT829mbu9UtRvoi99fU0d382DN9+ULnpbwibOn/P6gA2tLgr
izUSjiC69tAywUA2Su6Oyyae24eGmsVQ40dsDO8J+3m9WAqz1eUbXwWxcXWi
Ty7dhwsy1V6vph+zsWZ+ISJSkXnwYpXGrn1PiPOiSUIFPCJ4XDlb5BPChh5r
t9TJ0j0oqyg+2BpK8Gn2rP1VljZ+lt9uWv+UjWDven9H8klsKVc6axHORvmL
B12veM9D/yN1MDuCjSyBmSixcDPc+5Bry44k+HgtE61ab423ZQ5UPGPDwSpA
jtvzOob+k70bHM3GFJetovCEM1b/N8nVE8NGz5kNljf8bkO7ND1E4gUbPlu2
Jw443MHN99Yb7F+ysSNtq+9Urhe6ir/LLsaxYWmW/Eog3g/cxQmFeglsNCp0
iwrgIfYWmWo9S2Qjt/Jn7iHBIMQU9BnKvmLDZlf3bYpUGBrzo0m3U9h4ffm/
6rDicMzlnbOpSGVjGfW2h/eNSFx69/nOuQw20lqbxK5vjIFuSdyqoEw2OsmH
Pm6afA71crv0j6/ZuLHzyduehpcQaV3s2v6GOI9f8LFCcQL6yYq7596xYd9E
7dgslYqmmb918vkEvhQTjaijaShlNZpaFrBBq6pd9cE5HS+4LB63FLHxs3d8
wKovExfFw8fj/2ODi9qXPUfJge72y16dZWy0fS662H/4LdTlZYSXf2RDXjlq
KTPuHUQ0q+Bcwcb9esyE7c5H/3la7KFaNlgy7s9FVhThYqjhGXIbG6ojNPtr
YmXQfSY6tbmd8I/Wbl89chnU46bun/5M+OHmBycv5X2ASJZPTmknG+MPrq3K
P074S10e75NeNhavzXD7a1fh4rxQheIwGzUKJ2RrA2txwaFT7i6TjeKV6xeO
rmiBXGZUXiaLjSezRe5azi2YHz2/r5fNRsovRYOOrhakmJAOqcwRfrDI+/D9
i1ZQ9MYuzsyzsa8wwniJxCc8lGEHWi7nwP2Gs9gcXwcu2rwXDOflQHuJXnvn
vg7IJd+NrODjQHXT3Y8mNh3o2LiQsGUFB6yqkUHXig6I8vIW96zmQFcxQD3L
qROFEyJjeps4+G/b3xLVii4Ebh285rGZA4VEsbd+5C5cNEugZGzhoFP57Jzz
qi9Y6N76h1ucgzy+qFgZsy84USe3pkKKg4sfL+1dZH/BSMoBKMtz4LqMf5fg
+h4UDS3UWShw0PL5cK2cWg8CN1efeLqbg4lID6Pxiz2Qjzxq/GsPB5H6ruSd
cT3w8DW4kaHKQVjTOg/K5l6strCI2wwORhPO1jzg7YPgrh9frLQ5UD7I+pC0
vQ8CnFuCbw4R+Tglc3o6fVgW4n9v/xEOhkcebD96rw+/32dcuazHAf3parW6
6T5w/BRfpJ3gQKade/XB5f1gnSrt+HWSgz05Ub90JPtBGWs+dM+AAwenEqm5
s/0YWz0jnXiOqM9mLn9JYT+GSW6XyUYcXGhedBsn3gdD6QvPdhtzUNSW3GE8
3I/+/ULLKy9ysEbbIerHigF8slOZ+m7Ggb/z6tIOswG0KH+UlLnCId4Ztxb2
3iLe//+OXLppwYHs/i9HdwUMoCbKuGWJNQcHBhp0O18P4H3l3Zyt1zioDun4
s/BrAEXBXBPXr3OgX/E1/vf8AArOPxErsOfgVPYTUpAgCTnT8WGHbxD8dAjs
vC5HQlbJ9sZgJw62yI/2lqmTkOH7drHLmejvugMKqcdIeLWx6qa1C1Gv+NOl
mpbEe3xUN+vNbQ427mJmTt0gIT63c4TpykH/3vXduz1JiNEZOxtwh4Nsjly5
TwQJT5yXq6Z7c6DebXj49AcSgjSf3pi5x0GpNSutjngPB/KIZKg+4MAofSGx
+xPx/o2T3djgy4Ht9gsOdUMk3LtacHqVP1HPWc096WQSPJX2BxkHcLB46f3o
VgoJbo36v8mBHDySndem/yX2i8geJcUgDlRya/Yd4RrETTNz+zuPOajLeCe7
l28QN2QmUyqDOeh67LmzeuUg7JnOg7whHCQIMZ2mhQdhVzG31jCU4J8j7Fa4
cRA2j331X4RxoKHXcn2T6CCsjAQeDj/lwCaLeltMchBXJKLKZSI4mMzn7a2U
HoQoQ5bbNJIDoZAJ+7Ydg8T8V+mGRnGwKTCtOkB2EM+eXwirfMbBfET68R+7
BmFoT/lCj+bgnpth8B+FQQhqPdy07TkHVyTjNEoVB9G8WvSK8QsOTmRp3JJS
GkTgaEFa0EsOqEuP6WsoD+Jwsd7PslgOTLzu1s0T8cKjYcWZOA7SeZbJ3FAZ
xAeTO24SCRxE893PCCZiD4VVH84kciBPNXA8T8R7l6QvCUjiQOSxm/sn4nta
1/5jJckclEXErGcS+XLTu55MveJgYaVYSsMegi+P652bUzl4vszLVJfAt+Pk
ko2n0gg8AeIZHgT+UbHnlx+kc7BVPaHmAlFfEk0hJT+Dg9yEqYcTMoO4XFs3
OZbJwZcj/5ZIEfyIxJgqbMjiwJrnx4GVBH/d1xguutkcSKXe3pgpMYjw/Y9L
Pd9w4FyfwqRuGQT/SInO91zC3wxidJ+uHURD4anHa95x8HplkSp51SD8Asfb
dfI46A0PqPrFP4g/u4RNXhcQ/tTivoZ/kYSShddJpEIOzrskN4n/JuF2JyYE
izngVu23G2eQ8Mv9xs1b7zngOs2r7TtBwmu9ZSWppRxiX9Y0u0To0VY07m/P
f8Tv50T9x3pJGKpuCtT8yMEY+V2yQCMJsc+utDmWE3qweHcss4KEC3acNUkV
HHx6cOAmk9hHOwS3JXBXc7DcOlMgkdi/Qr6XjarWEPMvfPT7/EsS9ArOyFyr
5UD01siOlcR+XHPhQWFbPeFfOp1Ch72IfTyF1BzdwsFgSAZ54RQJN91urW5q
5UDQTeDPz0MkyOvynf/TxsE26d+3HquSkDajOmz+meinzgm3oS3EfKpHcHZ2
c/Dr+3EH8vgAPNuPS5d94yA5cPWY77UBNGe78Ap950Dy8Sa15PMDEHmUMG07
zIHHmsCEK4cHUAJm4ZoxDtTC7YxqNw+Anpd45PoUBzsOMxY2NfbjWhTbVoTJ
gf14qLniqn68d5Y84cTiIKC1w/4muw/L9U/urmMTelMOv3r+ax/Slr3iOM9x
wNDnKKzM6sOwm/6jxn8cpJovP6B2sA8XLqa+duebxY9orYH3F3qRsbc9pI1/
FkVnjuWZavSCJfT7ptQKIra+Up9J3AeRzQYa7StnIdXqH73/aw/aNf80b187
iyOPnbVsTHuId+uZ6W6xWax40Bp/+EQ3on97fZaTmIW44OhUyY5ujPdkFPpI
zuJTSrT7N65u+IXNe8lLz2LYtPXQ0bIvKF/MFAyQmcXm1S6icdu/QPBrF21A
lsAnnrBYttgFk9J/3Yq7ZvElaUlv1EAX5m6eSxhUmMW+3MYq15AuHD9131dJ
cRa7a3y/3LftQoxslu2jPbMICH6z7NjBLkzwdOt9U5rFmQ3Wtq0burB3dEFB
RWUWGoHLVglRO/E//emh9g==
       "]]},
     Annotation[#, "Charting`Private`Tag$27163#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923166339332857`*^9, 3.8923167324407406`*^9, 
  3.8923167984984207`*^9},
 CellLabel->
  "Out[949]=",ExpressionUUID->"ac4fda87-b6b7-4db2-89fc-8fe142f9fca8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$27217#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
176nmYAg63eXq+3wPFfMW3jTSsBIcO3d7Q54vfDg/viXBJCnH7Y/ccT6rOC/
PN02AtTU3G8IniOBnF/w/cev8f66dAxbnPG8S6aj7OwgYLrWuMHaBetlh/ZM
x04C3ifued9wEePLn9iHfm8I8LrHOnrcHePd149JiV04H3c6rnd4kODqwHhA
SDfGs7WGJWlvPB+EJMKP9xCwK73J/KUP5uHtpcwqvQRk8aYclvUngZCEn/FP
tMF4ML86Wu/L34Q19I/yC5P66CiVwrfr6MOHdINPoD3i5Czp3xKw4U2URqGD
7kYf5kCf7TfbOoz+4RDCK42WSdjyJiYA4426D509+rPNSnoqOptnfK8jOlp0
3PE2evXtFYtz6LG657+eoF9f2Zbjik6dvbB3FN14g1fcD/3ToD1WKRDrn86v
XMnoe5xV1oCWK/0kcxNtMZonZIKOL/lrkIF+6ONb64Aeutrvm4u2u7eHdB2t
cexWdzGayYOjOh2d9/rP11L0U831sAJ0tV3Kjwo067tBvmfoQ4HGPE/R9Xkt
Ey3/rm+9tKcWfcG17FEXeqPshVI9mlslM2gI/TLXSL8J3UobZfgNHUD8tWhF
/w8EkVc0
          "]]}, Annotation[#, "Charting`Private`Tag$27217#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
MIV29g6XTUP/B3W6VD0=
          "]]}, Annotation[#, "Charting`Private`Tag$27217#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
RQ==
          "]]}, Annotation[#, "Charting`Private`Tag$27217#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
lgP/D4rj0wQ=
          "]]}, Annotation[#, "Charting`Private`Tag$27217#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.7500000003061225, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.7500000003061225, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.7500000003061225, 0.7649999996938776}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8923166339332857`*^9, 3.8923167324407406`*^9, 
  3.892316806328617*^9},
 CellLabel->
  "Out[950]=",ExpressionUUID->"1bdf91cf-b914-4950-ade4-ec3c0ea80029"],

Cell[BoxData["8.912995957520762`"], "Output",
 CellChangeTimes->{3.8923166339332857`*^9, 3.8923167324407406`*^9, 
  3.892316810393194*^9},
 CellLabel->
  "Out[959]=",ExpressionUUID->"9f51623a-68cb-48e0-9267-b6f69442c7fb"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.7521440779802644}, {0.25, 0.7543563422130993}, {
       0.5, 0.7565798048740845}, {0.75, 0.7588135335334143}, {1., 
       0.7610567272670077}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0Xk0FWgYBnBKkxknURpzq0s3tIi0yNItT2SGLgqRpU1CpRmTMqNSlrrW
skzUlC1SWoylULKkI6fFiLi4qpvb1WW+a/vKFKMJ880f73nP75/nvOd5eb4/
u/pPUVJScmLz/xb4k5aHCnere78Ghx3XJFDZOPeQlGOK5RXTzSOZV1++mFnK
scW1sazhaGaH5+I7WRw3pJ5oOPAbs4ffaM05jh+CTul53mB+YxK7MZETAoOk
dtMO5pw5W2ISOEKkXrMcWjmLIEq1dHE8Jw1Bbcp7FMyeXrnF7z9cRfsrLb1Q
LQK1yagddjrFyAh1ju+bQ2DgMkQenSlD7PaT+du0CUKbLHHx433oE6Mc2XcE
2mWaXcrKtVigNs3KdS7B3e6Njc3r6tDYsbtCNo+gLjBrntdAPbIUBYoDXIJP
i9bPLPzpCZrPLagV6xBMGSvQmGfQgBK5drDfAgKzSZ+7W4saMdxo/qSDR9Ao
NG16bNgMry/2bdZ6BLop/WM3h17gUJuk5k99gv5RaVf7ilb02lxy4C8iuNpX
1aCeJMIM787yZ4sJ1LnXqVzeBu8KVbHzUoKzB8oDcvQ78FXhnswaQ4KRDQXy
/RFi+ArWW20yIghZVV/27aNO6IZbCyuNCaRF9WdaeK9wxvtpvsCE4N/Atoyl
x1+DG74hUrSCYJn19ImAKglmWsjGrVcR2F3h7but3YWSdBXP5tWsL+7uhbId
UtxJdd5ms4bAaMBdTez0Fi9FiWpFZgSzZ75Xrf/8FiXVTlkWFuz/tRnFepky
EL6Z6IYlwUHTqpdfO3SjeW9ujzmfoGCTb86DkW68bh0vql3H+uyfq9F74R3s
O0/NN7YiKN9qNzXNVg7/mISA+yCIsI++XNYrh6yh0m2ZNQHvjaAzL7oHp7dJ
xs7bEKw1F6ZxVvWiPSEyTNeWYIdO85iyqBex7k65Sd+z/IbE7kNRf0HxNDNv
vh3BRZVdIa6s94JWLUGKPbu/q/zKlHqCc3rh179sIph2MsrNMlgBQ26gLNaB
QOnmruLuWX3gFYbX/uNIcDi9OHFWXR+e9cw5HreZoGZZnKpmUD/O+2f3azgT
aAoOG51SH0Bd2BblCBcCifEL0bHqAVxee/pvta0EJdnQl+8ahCRZGh/uRrCz
2EyTOzEIKyNjscKdIDI6N0pyawjOweNKIR4EhYSboe5IUec40vTOkyAuK9qn
azOFpdDeso/Zz3XQoMiFoqQqPe898/zq6hInD4psQxwdZ05I3v74rC/FMdU4
nrYXwX6zSx++OUZhUs8JETAvFGrZT8+nyOSv59xmnrA4MUN8g2L2keTT95hf
Dr5rzS+giL8lG6xhTvEo3fnDbYpQTkxdA/OkoeuR6GoK19Gmg3JmSUty9lQR
hWqpzwNtb4KKmNG9onaKiL47S3SY0/i7l+Z1UozwpqXqMztcW15m00UhT7m5
byVz5dHnz6IUFLVBwxoOzBeM1yS7DFCY5duGuTAHd2e68SjFH28u9HgwL3H8
UfrwI0W6I7/Sj1lFue1qyiiFpjBR/yDz23J+oM9nitgqaVIwc3VgnsmKcYqJ
4ZVjocy/66p9mpyk+MVQuDec+T8cHHBJ
        "]]},
      Annotation[#, "Charting`Private`Tag$27347#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7516489307976679},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.008912995957520762`", " ", "\[Delta]"}], "+", 
             "0.7521335991948136`"}], "\"mirror symmetry\""}}, RowSpacings -> 
         1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.7516489307976679, 0.7610567272670077}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8923166339332857`*^9, 3.8923167324407406`*^9, 
  3.892316810523301*^9},
 CellLabel->
  "Out[960]=",ExpressionUUID->"e77db35f-08b7-40c7-a3df-9d74e77acd2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "\:0411\:0435\:0437", " ", 
    "\:0437\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:043e\:0439", " ", 
    "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:0438", 
    RowBox[{"(", "WMS", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1", "=", "0.100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", "0.114"}], ";"}], 
   RowBox[{"(*", "\[Mu]m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Np", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
      "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\
\:0441\:043a\:0438\:0439"}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:043e\:043a\:0441\:0438\:0434", " ", 
       "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
      RowBox[{
      "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
       "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
       "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
      "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rsi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Isi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"980", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nRsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"n1", "=", 
     RowBox[{"nRsi", "+", 
      RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rsio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"398", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrsio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nisio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2", "=", 
     RowBox[{"nrsio2", "+", 
      RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rh2o", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih2o", " ", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"104", "+", 
        RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"nRh2o", "+", 
      RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ret", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRet", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0435\:0442\:043e\:0434", " ", 
     "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
     "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nddEMA", "=", 
     RowBox[{"nd", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "Vet", "*", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
         RowBox[{"2", "nd"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "nd"}], "+", "net", "-", 
         RowBox[{"Vet", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bdd", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
      "nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"n1", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", 
     RowBox[{"n2", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdd", "=", 
     RowBox[{"nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p1", "*", 
          RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
    RowBox[{"L2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p2", "*", 
          RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ldd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "bdd", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
          RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "pdd", "*", 
          RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
         RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
    RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\:0441\:0442\:0438\:043b\:0438", " ", 
     "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
     "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelR", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"label", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"style", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       "12", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"color", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"color", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
         "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
       RowBox[{"LegendFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RightWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LeftWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mwms", "=", 
     RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
    RowBox[{"M11WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M12WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
    RowBox[{"M21WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M22WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "Q0"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Twms", " ", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rwms", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl", "=", "0.75"}], ";", 
    RowBox[{"ll", "=", "0.77"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"G1WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Rwms", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dd", "\[Rule]", "ddf"}], ",", 
         RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"G2WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]2WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]3WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]4WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]5WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f1", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f1", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "\"\<Without mirror symmetry\>\""}], "}"}], 
          "}"}], "]"}], ",", "16", ",", "Black"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.89037270685114*^9, 3.8903727118557873`*^9}, 
   3.8904540948631887`*^9, {3.8915752915880604`*^9, 3.891575292114193*^9}, {
   3.891592988129046*^9, 3.8915929887480354`*^9}, {3.8923161300121827`*^9, 
   3.8923161370930395`*^9}, 3.8923165289688697`*^9, {3.8923165694017987`*^9, 
   3.892316575701684*^9}},
 CellLabel->
  "In[737]:=",ExpressionUUID->"e846b00d-cf1f-4b05-93ec-d9be26554386"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
5WuZuL5q0lpKjolHL05g9w0mEmy5zy8vYmLPurKzWu1MNMYN07oUmJA1zb75
RY6F8eHO1ZpLmUgs/p3x2pIF6SUNjpHLmfhrbTCjLYwF7eOlGd8VmRiWqr5k
95YFmyfZ45armVgeu9Ui9RsLgb2JG0vJd+2vDL8qXTaKTJmoK4uVyXlU4tNe
7R5F59HgVz7rmYhYPuNgyolRfA/1+zmsxsSf4EsmgZdHsbTjyk6djUxsF18a
qh8wir0STn7xm5jQuiFEaw0ehbPhiRphTSZ6ONLLWA9G8fDeYVF7LSbervT7
ZUSeFzXuM6jTZkI4sPBA5s1RDIpqB6/ZycS0T+c/hLiNQnifWvsdMDEi1Rtx
1mwUSgGKUpzdTLRaUhP9NUZh/EbW7MBeJqSu0fTFRUdxZYrM6XpMbC4dfj7R
xkL0zqmBOQZkvz3Xa0SCWajy/rLE9SATaRSJroLtLLBKRm3ajZhwqE+atmmQ
iTnfPySqmzBh8P3nA6NzTGhodrBCjzARU+DtY0t0anGldt0XUyaytk+uNSZ9
xTev2MX0GIlfTaCS5WMyB33MzC60ZCIncmXU+nIy96rFf5a1ZsLEtnd/VzUV
H13Ct3ieZMLdNMR95Bnxhxl3PfttmPjoLLL3WuQwdnB8SrXtmAhmtSeL3v0A
27WX/j49w4S0rqzu4Jw+BJ05u/uPAzmPSq0YbU0XXiZa3TrpzIRzX2juj752
dFGNGypdiH7uizmbLG3Az2W64ivcmDAf066bFVOO5Se3GvlfZOJK4T2dlVnZ
0ItReUi/zMTdWJH0QOtYuAwse7/XnYmBNzoOUrOe4NFCadkUTxKfhnr3p2sz
UGw+01LMm4neurqHAaFlGA77/dTRh0nqoZnL9luNEHn/cfgt0W3BqlVHfWd3
Qnk+c4WKPxMrCqwjWdRemBzqtw++xcSUz/afyyyH4H6/NXUskInqiQyzK4up
iGl+wzW+ywR79fnEAeJnq2cVqeb8x4TlB6n5ISQv2fvTL8wPYeLhrq28nzdZ
mBv4LP/SQ3Lf26wX2NWMIoi2zFrsMRNl0dkJrgw2hBEvEhPOxIaUNrPaTg58
nipmqUcxsUt9s7lUFBffvyWa1UUzsdj44pzdO3i4bLr6r2UsE3OFIwTpdTyM
56SkjD9nor/llIPtNj4c5yodCkgg+T/BcHZ7ygfd6cU3uWQm7gScXSYm4ONk
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
Czf2r6q0I7GweasblydZjPXzFpLvyCzMnRM9siq/GHWdb2MWDbLw3iPoPlOh
BOJO5vaJwyzsU8wSTlV5i8Gi3G3NY0R9cmLMuuTKEOi/MFRkgoWfVuvkT+eU
QfH8+dnLFBbeSNSUdex8hyje3y7eFAsJ948b3xcqh76yvu+unywE2EnmhXyo
wO+lyTQHKgvPj90Q/yP5Hq8G2SYVNIJvD3ttR8LfY7Fnorwhk4Vw6mWZFoNK
FOvTXySxWKCmXtJ7l1sJiy0aQt/ZhD/kCN//LliF6ipiDuYRerxkrDZeVAX7
x0fPtM6wMO1ksSiO8JPNVyIr1/9iQdHFa+T6uWq4LVSJzf3DQoN2wTep79XY
/SmM79dfwj9ylQWDN9SgL3XMXnOOBfePdrN/lGogpxl0YmgBG2JlhgV6rjUY
FflctJuPjaOFJvM7o2sQPnlA3Jmfjff0Q7X2b2pw+K1/aOUiNua6d0xINtdg
OoA8u2QxG5N6kWlnx2qQcGGf5TlBNvqEtc/+mKmBtoR394slbASbLHT5KVQL
3mzPkemlbLwzDaIbi9cirXlPtuJyNkg119L2y9XCMMFjva8QG9fc49tuqddi
oW2nb/sKNlZpOEwJn6lFvupOuugqNh6XxsaJm9fCXMjV9PpqNmLqIzpjbtZC
6HNL45s1bNgtee7qfLsW5blbFf4Is+Hhv77grUctrB84J2uJsLFLY7zbwrcW
G043CEWuY0PBokLd9VEtGraJ3fu8ng3h8o+fOMG1uMOwm5QQZWOpW4D9cGgt
dtTWnrmzkch331kJmbBadEWsq6oWY8M3WuEMLaQWDyxuSi3fzEagds3BTUG1
kJavjDXawsZybzmTUv9aDPOv4U/dysbNne32dQ9qEdx73YG6jQ2tZqWrmq61
UEovG1LazgbXrG+Xsn0tpu4KafvvYCO5cdd42rVaRGtdKe7cyUbp88wfQRdq
obGhWHzTf2xc1vMr/aFTC9ZXwTCr3WzUJTz63qxSi+Qy018Fe9horTumIyVV
i78X+T9pS7FBfhqj776oFjZylnoP9rJB30hxG2XUgLSssa5oHxsh8cGV/MM1
KKwILt0qQ/BDMeRCWF4NxKN/Hjh3gI2E7kejv2JqEHbrVHaQLBtU5YzvMp41
sN4inMSRJ34n2/4TOF6Dfu7t9VIH2Wgs2LQ+d08NNDr6Hl9WZGOkMFpm39Ia
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
mqqLAXOd+B9HGUeC
       "]]},
     Annotation[#, "Charting`Private`Tag$23491#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892316533274129*^9, 3.892316580626979*^9},
 CellLabel->
  "Out[781]=",ExpressionUUID->"bf0c5598-a282-4d9d-80aa-b26c902fb478"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
ffNp6eFp9P8BwJ6Dsw==
          "]]}, Annotation[#, "Charting`Private`Tag$23545#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
x/0h0SW17NIQrWqp5leDZ/7aNmt23BDdnrdp1nrYY7375NqUIYq6rLlgN+xo
M+JWUzBEBy5I6cTAYTcNt4w0D1FHeczGNNgz2iUpo3OILHhnGefBEnNHrFb2
D5GeL69tLfw4Y25nx58hEj3ce2IK8ubbSMsdWeIcCs9x8BeGs/b0zjNbzCFe
TsuFxbAnoxjRgnpqyLU6Rhe+ar9sOFyTQ+W7cwuOwekm2ifTzDnkZXSK6fnf
vbNtRy9w6M3+yAc/YCHuvfZP4RySCUk/zbsR54t1djA7ikNNlXX80rB6x8e1
QjdQz+nLLLKAm+pPz20v4BA/1Zi+gC0e9p3nbefQHvsu0Xewr7TAtsedHHpy
5nf7R3jpE5mRPT0c8ihZdOAPvPXWC5FALodYa44FqupjP+/Oez8D9e8N9QX5
N+Atqwz1g1A/j5ir+dyHszxk4q1QX+84YrjuCexrV5C6QIFLk/MPv2n8f3x/
TWqYCpfcVF59FtzEpp2ieXnNulxareglfBo+ZXR86CDq+Qij860h8PC2jZev
ot5n709IjoXtwkRzc9APJNyuWJ4P1+it/1PtzCUeOXH9fjhCbm1qvBeXaha+
OLpzM+Lj0khm8gUu3eTqbXeGY3/Enp+N/uNEadlSb/iAXVbnqYtcWmJX2hYG
Zzg989C5jPHYIr2ncI3Q8vXHrmF8Zo6gnAHuzyeuH97exft+UOpdCacZB/p9
vo/+6e79snVwx/d/XUw2l3wM7x62hj81lqmMon+qPXur5SK8adH0p41PMP43
Mf073H4v/2Lma/RjryX8/sGTIvhYntVckom/tlPQkE2WCn7vVWu5VLc6TkAe
FucXWpWJfk7GO8rLBjZrndLv0ozxvhCdZ7DqQf9pCt1ckm081nDJCPXPtbb3
IqPonwZ+vkiEeS/zXDg/hn6L52jeHTjajLf2+ziXDJcfjngJf1P4rV3Ow5BH
oKfhOPxwM1+ZzlSGCpVcSzy2oP4K912ViP5Wd2Pv3VOwzIlbVa1zGKq0drkW
Ake81AyfJ8xQy9m9x9Ph/YYHS8/NY2is1UG1Hf7oKpe9QYIh/QvW6cbGeP/2
qviN6K9rE5ujbOCedx+eWqP/tsqzCnSFFXb7hbvLMbS/3cL+LGwsbbsmbClD
4at2iBXD3OK4y/eXoz/vMApX3MomU2dOepgaQ86aa49O38YmTd/Aovr1DB0Y
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
          "]]}, Annotation[#, "Charting`Private`Tag$23545#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$23545#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
Tb/m9wQ+uUVPQ25siM60m5X3wOoX7DbdFRqmJn8uLV0LhuLnm7akaQ1T7vax
VSbwkcc1I0F7hunWpIHZ1vDfFdue6aNeMvSo/+gDB7XJWISgnqq3TnDIh13K
TV27zqHe0tS9tdLy3/c/wSl6KcP0aLLGOVX4098NmiXpwxRQpGy+A97iHGO5
MGeYdFSkZI/Cy+6lBt8rHqbypaOFkXCFx5Mv5Q3DVMIT0TvNCut/Pkzi889h
insR8EYMfia8XmDvxDB5n7+YvgQupYg9sdwcUh87eUYd/jyzqUR0OocKuzcJ
usOjiaygqSTq/ZIu5T5Yb3twmtd6DkV4Ns0dg4vWbB2cuYlDbhur/3IfR342
/9t3Q51D6zJzKhbAW98ltpzRRP8Q53/QEJ6mL3a1AvX144trLr+C3Rdp/w20
4xDfcOD5OliowsZZxxH1udHQ6U/w/IA7WpOcOSS5JsnqJzxgeeuSoTvq8RZp
LTlrxEuWslyyN4eOqohND4OVC8MXCYRz6Hmcy+Q42PJWTqJpBIckBOt/P4ab
xuvFH0Rx6F138FA5PPsLL/fSuxxSu873dtz63/edMtT5EP3G8HiIxQmcD812
EYNcDjkZmfo7we9nZu7QzeNQVcmzixdgmbhb1zYXcMgnyvVUBHxORDdYBP3Q
iOaIfhW86ra6st9rDlXGdYkpnWTI/nv1QNR7DnkaVcZMtsH+7Lx9upKD9X5Q
qj8Lvp+r8kFlhEMTo4X88//5UvjUuM8cOheY6b4OfnpTiNvuK/qVlzH7T8Af
Ol/tb/uJfmSVg8A7ePxS6oTyFJbSPE6UfIRbuqcFuPCwxCk7doaBk2rvO6Xz
or81N2Im2SKfzL54bCEfSyfCNUqV4HkHEx91oJ88yiVyLgouO/C2n0X/eW+X
oOJD+Mo6M+2p6Ffbo6YNZMLmhU128+awdEj5z4FqWOXh8/nqkiyZnuxV5LJD
fGx8+txOiqX9DbmDlvDeUd5uq2UsbU88aCpvj/qEK/vEV2WWVNWMlhFccPG7
esc6llbW6H3RhYXeaypVof+e9UPzmjXMPA7xiVnPUrOmQv5duNrFc+8y9O+O
fbySgg4MHXx0uqp/K0sxS9ObB+A35y9cVd/LUnBecsIPWFRvTepP2Hv3g1O8
jsgHSV5OGftYOu4axS8Ne4kkfJ2nz5JC2aUNxrAql8SGbgOWyi2No17DsQuC
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
1AM8/I3weYUGk8vw/yjlv60=
          "]]}, Annotation[#, "Charting`Private`Tag$23545#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
i/hC6lpWiwi+xZURdm1aCylWmY4Ywz73PgQ2XG6hqb/0LzjCRcKJG3OutFKT
vnLhDfjjzxnhG8va6P3nZcGZsHmYXHYvbzsVH11kVgivjZkcOLK+nVJjZPvr
4RLhI01Cj9vJtYdvluhRhjjsaqfQpA46cIK7ZxZsLd7R593YQRZiYzlL4MT8
92OxYp2kqTa0WRf+49Hw2u5EJ/EFf/b1g+UKH7p+N+iihIVZTX3wdhvep7WF
3RT+5M7tX/AjZQUZ/6/dFLg19RifKz7fKfdzz9Sv5OAZJzgfzjM+0fVq/1dS
LgvS2AkvDlrh5/v3Kyns8udzgD/3rH41bW4PSXN8ajxg2TtTbX9s6qF/kkcP
R8Anj7VkpIb20Bu7nXGvYXXXHjF+EczFv83sP8J/ixcZGSzDOQ/bqtwJv8ny
3tKPOfZy3qa343BQvEC53TmG9kxe8We1G0ORm1yWnB5l6Pstnl234EaDpaNv
i3rJlrFfmw27a0fITq3tpeql76SfwbW9q2RGetAfci43NMCfll70ipvaR4eK
F5gLHWOI/+0Rnlu7+6iRN1RVGk5SyzUTQX/S0x+crgBfi1hgKR/YRwsq82rW
wV3zTDRsUvuo5bOeyTHYfaD6zwqmj7bI3V3pD/sfdL219FcfPbUVE7sI75i7
Mqt9Sj/F9ja8T4UfmE++67+wn3b8dDT6BDuHvgvM2NdP5dMu6K13x/M3rjxR
Xd5P6haswhZYh6ddkbu+n27Hmk3eBX/UWjT0r72fgubKlrrDazyL3tn+7qd1
KzI3pMHKHZ1l3xWQD9zE5z2ETRc226YrDZBs3nGuElgw40G8kuYA/dZc97wJ
9vwwSffFtgF6aPhBS9SDoX9tujO4vQZofpiK7Cz4ylr+Pa6nByiyKubvIvhl
O+fik9ABcrHc92QDHCYi4dURP0BL7IbUjsNRDfecLz8boMTT01Wa4TfN4SGT
xweoWNB7UR/s6+DSJso3SB1Xmmf9gn/Kj0/9JTJIizJSJ0kcZ0jk2tkzTrMH
Katard4IzpD+c5mjMUgv5tv4FMKr+kyP17oOUte9Yudy2PC6h7Ac8h6fmoJt
AyywdJGU2clBMjLibB6B+W/c3OAZOkh17qdll3oydHf1r5yHSYPUU3rreRy8
aUD2sOO7QRLcJvAwHZaMixk+XDVIyz45pz+C2yIkB60/DpLr4JrIGnhmVZG7
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
          "]]}, Annotation[#, "Charting`Private`Tag$23545#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.7500000004081633, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.7500000004081633, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.7500000004081633, 0.7699999995918367}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.892316533274129*^9, 3.89231658459086*^9},
 CellLabel->
  "Out[782]=",ExpressionUUID->"1d5e9f5b-e0be-4bab-9821-2162ae6eb438"],

Cell[BoxData["8.282402700382326`"], "Output",
 CellChangeTimes->{3.892316533274129*^9, 3.892316586046644*^9},
 CellLabel->
  "Out[791]=",ExpressionUUID->"5f7c31e3-f7a9-4b85-85b3-675ea136a99f"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.7549376877883468}, {0.25, 0.7569929611890354}, {
       0.5, 0.7590587644433764}, {0.75, 0.7611346288866473}, {1., 
       0.7632198573150186}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0Xs01HkYBnBKNeWkht21o8UqpBBJovBUbMqlllgpDbmlqTahrbaVpjWi
EpVoG0pIF8tkDKsaaWVTjtxGTRe3mPTF8EtLlt3MfvvjPe/5/POc9zyvUcg+
n/ApampqXnQ+b/dw0vygz89ZO7fkzXYzAg0XvahOji281GOWh1Ivu3Ixq5Tj
iqRg2+RIao+ncnE2xxcqgz+sY6j9w8Yqz3HCoBRK45Oo261OuKRwYlF7oVa/
lDrny02JJzkJiEtuD2AtIuCzShcmc9LxLmpmi5h6S8BV0fvhfDgvGNpnbE6g
qeIHuhmIkKUblhpnQWDiPUQenpKAv6Sqr9GS4GCDAy6O3MFbs+vDzlYEuhJ2
h7p6FXzCvz1ywZqgvNulvtGxGhCYilk2BNW87HkByhqIa9nGB5YRjJo6zSna
WwtLzzO6T2wJpowXzp1nUgczSWaFgx2BnSq4fHNxPSy4Nq/PriCoT7BteLS4
EWWLxfY99gSGaQPjN4eaUPXqvov3SoKBsc6OZ9YtaK4PbCpYRZDff69O64wM
obknZnGcCLT0rzMKRSuOXMqMT3AmOL2rLCLH+DmErfY/yUHwcXWhIjJeDscP
EXpuawhibWokXz18AYW36erLawk6i2tONRu9wuwL0TrargT/8lqFi35+DelE
nlH8dwTma2ZMRtxrQ0xuRIlsHYFbrtHOEt0OFFqWD7mup33pB81/E9iJ/omM
ouwNBBZKP025VxdE/YHXGXcCnTnvWTUTXRitFG3ketL/VwlFC7LewEV2/qDE
i2C37b2XMz26wa7X2LhwE0HhhpCc+x+7Ef5ua9D572mfA3pzezN68Kfr2g+9
3gRlm92mprsqkC0ot/HfTBC/XnBF0qvAcZZ0pNiXwKjd/UWe4C2URQXDKj+C
lSsS0jk2vZDbGWTt9ScINGgcV5f1ok594ePqLTS/LqU7iv8OTrelV223ElzU
4Mb6GBPcyen5L2Ubvb+jLHdKDcHdUuZcVyDBtDi+r8P+PjjeSnq+iUugdpMr
6tbux6NusbAgiCD6kihFu7ofTZO7tPR2EFSaJ7HYPw4gyGm6NDGEgO0ebXFc
S4l/KpcNvAolaLNskh2WKjF3/lCtRzjB7cswVnAHsfSxg2l+BMF2kR1bf3IQ
8jRe1ehOgmOCq/y2W0P45Gg2PWwXQRHRF2p5MrAwP9hwh0eQlC0I7tjIoLgi
s6aKOsxn0KTYm4HVuoq7f1F/I5Xe9vJnYLNjvKCZ+mTqtkenQxjYZx6J76OO
tPtteNZhBq5Tj1lzdhPMT/hi/YwCBtteJ507RD1p/8ts+Q0GbZE3k45Svxzs
aSkoZMD9+ORoAnWaf+n2dSUMgtmau9OoVYt9YgRSBhFuKS43qNuaUy9PlTGI
Lj07IqeuSBwLlT1j8PdqcX87dfqqoEV5LxgcaGjp6qH2uLZEsraDwaE+nacM
9d1DT5/w+xjEGWZcm7GHIMNyeaq3koHq93LhbOr93Vm+RgyDYyvlZ3WozTz3
dD4YYfCr39dHDak11Fvz08YYTOuxjzWh7ipbxQueYJAYFcAzp5by8qysPzFg
TR4OXkqdaag5qlIxSD516YcV1P8DX8Z2Kg==
        "]]},
      Annotation[#, "Charting`Private`Tag$23675#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7544775672590875},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.008282402700382326`", " ", "\[Delta]"}], "+", 
             "0.7549275785742936`"}], "\"Without mirror symmetry\""}}, 
         RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
         ColumnAlignments -> Center], "\[NoBreak]", ")"}], StripOnInput -> 
      False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.7544775672590875, 0.7632198573150186}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892316533274129*^9, 3.8923165861698093`*^9},
 CellLabel->
  "Out[792]=",ExpressionUUID->"ba075d42-9c04-438d-a13b-e445cd68eff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\:0417\:0435\:0440\:043a\:0430\:043b\:044c\:043d\:0430\:044f", " ", 
      "\:0441\:0438\:043c\:043c\:0435\:0442\:0440\:0438\:044f", " ", "d"}], 
     ")"}], 
    RowBox[{"(", "MS", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1", "=", 
     RowBox[{"0.1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", "0.114"}], ";"}], 
   RowBox[{"(*", "\[Mu]m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Np", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0423", " ", "\:043a\:0440\:0435\:043c\:043d\:0438\:044f", " ", 
     "\:043f\:0440\:0435\:043b\:043e\:043c\:043b\:0435\:043d\:0438\:0435", 
     " ", "\:0431\:043e\:043b\:044c\:0448\:0435", " ", "\:0447\:0435\:043c", 
     " ", "\:0443", " ", "\:043e\:043a\:0441\:0438\:0434\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:041a\:0440\:0435\:043c\:043d\:0438\:0439", "-", 
      "\:043a\:0440\:0438\:0441\:0442\:0430\:043b\:043b\:0438\:0447\:0435\
\:0441\:043a\:0438\:0439"}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:043e\:043a\:0441\:0438\:0434", " ", 
       "\:043a\:0440\:0435\:043c\:043d\:0438\:044f"}], "-", 
      RowBox[{
      "\:0442\:043e\:043d\:043a\:0430\:044f", " ", 
       "\:043f\:043b\:0435\:043d\:043a\:0430"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "\:0432\:043e\:0434\:0430", " ", "\:0438", " ", 
       "\:044d\:0442\:0430\:043d\:043e\:043b"}], " ", "-", " ", 
      "\:0436\:0438\:0434\:043a\:043e\:0441\:0442\:044c"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rsi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Isi", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<TiO2.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"980", "+", 
        RowBox[{"Range", "[", "977", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nRsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rsi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIsi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Isi", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"n1", "=", 
     RowBox[{"nRsi", "+", 
      RowBox[{"nIsi", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rsio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isio2", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<SIO22.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"398", "+", 
        RowBox[{"Range", "[", "395", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrsio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"rsio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nisio2", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"isio2", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2", "=", 
     RowBox[{"nrsio2", "+", 
      RowBox[{"nisio2", "*", "I"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rh2o", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ih2o", " ", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Kedenburg.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"104", "+", 
        RowBox[{"Range", "[", "1011", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Rh2o", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"nIh2o", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ih2o", ",", "\[Lambda]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nd", "=", 
     RowBox[{"nRh2o", "+", 
      RowBox[{"nIh2o", "*", "I"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ret", "=", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<Aceton.csv\>\"", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"Range", "[", "101", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nRet", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Ret", ",", "\[Lambda]"}], "]"}]}], ";", 
    RowBox[{"net", "=", "nRet"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0435\:0442\:043e\:0434", " ", 
     "\:041c\:0430\:043a\:0441\:0432\:0435\:043b\:043b\:0430", " ", 
     "\:0413\:0430\:0440\:043d\:0435\:0442\:0430"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nddEMA", "=", 
     RowBox[{"nd", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "Vet", "*", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}], "+", "net", "+", 
         RowBox[{"2", "nd"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "nd"}], "+", "net", "-", 
         RowBox[{"Vet", 
          RowBox[{"(", 
           RowBox[{"net", "-", "nd"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d1"}], ")"}], "n1", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", "Pi", "*", "d2"}], ")"}], "n2", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bdd", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi", "*", "dd"}], ")"}], "/", "\[Lambda]"}], ")"}], 
      "nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"n1", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", 
     RowBox[{"n2", " ", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdd", "=", 
     RowBox[{"nddEMA", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p1"}], ")"}], 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p1", "*", 
          RowBox[{"Sin", "[", "b1", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
    RowBox[{"L2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "b2", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "p2"}], ")"}], 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "p2", "*", 
          RowBox[{"Sin", "[", "b2", "]"}]}], ",", 
         RowBox[{"Cos", "[", "b2", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ldd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "bdd", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "/", "pdd"}], ")"}], 
          RowBox[{"Sin", "[", "bdd", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], "*", "pdd", "*", 
          RowBox[{"Sin", "[", "bdd", "]"}]}], ",", 
         RowBox[{"Cos", "[", "bdd", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q0", " ", "=", " ", "1"}], ";", 
    RowBox[{"Qf", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\:0441\:0442\:0438\:043b\:0438", " ", 
     "\:043e\:0444\:043e\:0440\:043c\:043b\:0435\:043d\:0438\:044f", " ", 
     "\:0433\:0440\:0430\:0444\:0438\:043a\:043e\:0432"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transmittance\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labelR", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Reflection\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Wavelength,\[Mu]m\>\"", ",", "None"}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"label", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda],\[Mu]m\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"style", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       "12", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"color", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "Purple"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legend", "=", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"color", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", "\"\<0.25\>\"", ",", "\"\<0.5\>\"", ",", 
         "\"\<0.75\>\"", ",", "\"\<1\>\""}], "}"}], " ", ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Concentrations\>\""}], ",", 
       RowBox[{"LegendFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"var", " ", "d"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RightWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2", ".", "L1"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LeftWMS", "=", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"L1", ".", "L2", ".", "L1"}], ",", "Np"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mwms", "=", 
     RowBox[{"RightWMS", ".", "Ldd", ".", "LeftWMS"}]}], ";", 
    RowBox[{"M11WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M12WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
    RowBox[{"M21WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"M22WMS", "=", 
     RowBox[{"Mwms", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "Q0"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Twms", " ", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"tWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rWMS", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "-", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M11WMS", "+", 
           RowBox[{"Qf", "*", "M12WMS"}]}], ")"}], "*", "Q0"}], "+", 
        RowBox[{"(", 
         RowBox[{"M21WMS", "+", 
          RowBox[{"Qf", "*", "M22WMS"}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rwms", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"rWMS", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rl", "=", "0.773"}], ";", 
    RowBox[{"ll", "=", "0.785"}], ";"}], 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"1.155", " ", "1.17", "rl"}], "=", "0.875"}], ";", 
     RowBox[{"ll", "=", "0.895"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"G1WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Rwms", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dd", "\[Rule]", "ddf"}], ",", 
         RowBox[{"Vet", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0.5", ",", "1.45"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "Red", "}"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"G2WMS", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "->", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.001"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "10"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", "labelR"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "style"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "rl", ",", "ll"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]2WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.25"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0.774", ",", "0.7755"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]3WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0.776", ",", "0.7775"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]4WMS", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "0.75"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0.778", ",", "0.7781"}], "}"}]}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]5WMS", " ", "=", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Last", "[", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"Rwms", "/.", 
          RowBox[{"Vet", "\[Rule]", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0.77815", ",", "0.783"}], "}"}]}], "]"}],
        "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WMS", "=", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Lambda]1WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "\[Lambda]2WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "\[Lambda]3WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.75", ",", "\[Lambda]4WMS"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Lambda]5WMS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3WMS", " ", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", "WMS", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "label"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "style"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f1", " ", "=", " ", 
     RowBox[{"Fit", "[", 
      RowBox[{"WMS", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Delta]"}], "}"}], ",", "\[Delta]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"f1", ",", "\[Delta]"}], "]"}], "*", "1000"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"G3WMS", ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"f1", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "\"\<mirror symmetry\>\""}], "}"}], "}"}], 
         "]"}], ",", "16", ",", "Black"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8903735469756656`*^9, 3.8903735677198524`*^9}, {
   3.8903736322938213`*^9, 3.8903736464546623`*^9}, {3.8904543468850775`*^9, 
   3.890454372295929*^9}, {3.890454420283122*^9, 3.890454428542984*^9}, {
   3.8904544621779957`*^9, 3.8904544783132915`*^9}, 3.8904545266874313`*^9, {
   3.890454620638104*^9, 3.8904546348081226`*^9}, {3.8904547060626545`*^9, 
   3.890454711974291*^9}, {3.8904547430582285`*^9, 3.8904547447331142`*^9}, {
   3.8904547795730844`*^9, 3.8904548893878145`*^9}, {3.8915734295583534`*^9, 
   3.891573430698945*^9}, {3.891573502709073*^9, 3.891573528142525*^9}, {
   3.8915736488709745`*^9, 3.8915736570828943`*^9}, 3.8915737084099865`*^9, {
   3.8915737493058796`*^9, 3.8915737701474934`*^9}, 3.891573969206673*^9, {
   3.8915753019795046`*^9, 3.8915753024789605`*^9}, {3.8915930147580214`*^9, 
   3.8915930152780247`*^9}, {3.892316151847721*^9, 3.89231615720098*^9}, {
   3.8923161910836916`*^9, 3.8923162306941433`*^9}, {3.8923162657592354`*^9, 
   3.8923164895866795`*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"56eebf9a-b04f-43bb-96b1-2ecc1128541b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
bHrA9Dpktm6oZy2lYlH4xUuln1qg0Dq06dJyKqYr5cyVbXqPmy3X0+etpGKW
Tx7NcqobEi26MnmrqBCPCag/860Pgc3MS3prqajO9LIVzfmIr03xvF51Kspp
+k73ZQfh1gT7UxuoCJz3pK50+zAGG/l1opuo6LzrWDceT4FV4+1Nd7Sp+HU3
4JGIOxUNDUbpGpup+HzQ+UHMMhp2NHyTrt9KhYKXOFPxHQ1l9Q8uHd5BhW9x
5ZiIJR2Pet3FG/SosG7+6qbymo40puYNTQMqUgp8q2iLGLj5/bfsXUMqvsQK
paWcYiBU9F3aNBMqggpnuJ8oZMBvbsxyHzMq1vsLqexiMOC59EDBgDmV+K2u
/89ZTBzTWLLJeC8Vsy8EpaquZsIGnJfF+6joMjo5tHsbE2Z7SgyUrKlQqRd+
88aAiR2HA5rDbcl5JtUXv9NjQtNz1/4vdlRInFmj47WRCdWA2Z8OHqSid32D
RqUiEwpRvY51h0k+tGdrxP5iQOr2fa7GMSoe9MxcUNDCgMgjN59URyqkXM58
f5HAwET5hklxFyr+CZcrWuxjgPtu8or3CSpWBUjqfBBmYKj77YxPJI41A8yv
VVl0dNKj4ww9qZDNPSttuI2O+q828kVeVNxRVwxOq6WhUnjxQ4UzVBzS/LeV
tZ2GIhm2WthZKngJcd90cogOFxcXCc5Tsakzgl3wj4IUdX9dBz8qHBa4//Qw
InPUdoPqWn8qOvjrXM6ODyHYfJbJ+ktUJCWcnrNcl+Tf494BsRAqdK7/KNq0
+wMOXTwx7BVKhYvxS66ych8sIzVOfAinwp+mGj7e0Y3N2W98n1yn4t1TM6dP
lHaoP73+d2EMFXMjEvbfpzZBpdY6/OpNEg+jwu6hL+8g17VIaiyeCmGGsOi2
jTWQpLES7RKp2FUl/4OeWIG/nwsXvU0m8b1bqL/gdTG+/vPLWneHiojO5G3T
DmSDJaW/LiWNip2fuq7+dU3Bx0Uzn4rcp+JFsMvVq+VhaFvbve3UQypMmOVl
LtfP4M3Wu7V9GaQ+am2mSb49i3IzV3P9bLKfqfCQwnWRyLdf313wiIq+ur75
YnK38cDt58EF+VRc0jjd/MM/CwkXauhXHpP6eX37MmtlESLDo07yC6mQPCna
F7+9HIGJ+7/ZlpD8qbgLT39ZCe9MpYCaMpKv7p1/J4tr4FzKFFn7jIoPy51D
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
MjwSixeBgfmyoUTfb3+mLOBbLM5+DedKCichSGR5w1blOEycjTP+FUnCsd97
nMViifthZQ5/QywJZ8181godjke2zVOHHQlE/lau+yq84yHfWdLln0SCsNS9
ftn2eFwPbfQ9l0acd7E/y4K4j//8aB9/mkHCGY5snYFw4n7W6D/Km03CQqJe
S3Z7AprXTM4OPiHqd5piuUImEc/DnJ5fLyChy7V7h4xVIh6tXnFrqZCEg937
yZmxiQgMSZGMLSL4V7fTV64uEY4rpcj7S0hIdKAdfz+VCKPglhf1ZcR5MsUE
73Ik4dxy/du6L0lwfBH9lyGUhMOBc1I/qgh+6tp2KksnQZT7PtWnlhh/akFR
VUkCj//m0k31JJgmN1z8q5EENkehU2EjCTMbtYYMtJLw2Vf5sMprEqjCC0La
RNz3d4g+0kpCTezh8x+J+dXeNuU3O0gQeZk3yEHsl7u0eIezm4R1Xy+9r5BK
QrRntGwS8e7K3PdiaGlrErx+72EdHCBBa1ua7+TfRNjeq3n5+g0JPG393iYf
EnF54YKb/jAJ/Gf6maHViVC5+1mOPEqCq3Rki31kIg6w3eYD3pFwb6jVU8A4
EQKua6q3TpBQPyy6+Gh/IriYme7FH0gwe3CGbzUpAeO0zl/j0yTcYJre3nIj
Ae2OxrWOMyS8EbgjQNmegDIKzWPFDxL2b3dbt3coHqEkoSUZMsF3WcdIefF4
uNgX13VQSRhkqcmb9sfBbPa0tzGDBB/m4WNut+Mg/8P+b8gCCcU7Y4Y35sVi
jy1no+giCZvvTBxbOh6L9d8SfCv+kGCYuJMZ3x+Db18aOKa4yNCj659O/BmN
xKn13MfWkjHGyZY6tjIKjLcVK7/uJEPBQ1fvy4cgfNBT7/TYQwbn1pgox9FA
dI9MhqzfT4ate4I5rT8AOf+t4DlxkIw4qRl5Rut9aA3o88bJkRGpdS7ter4n
Tlwk9YopEO9icmPGjZZ7EOu7H9lwnAzVwz2WRT/u4l93Id9PFTKclwYvv9F3
wYv2pfUnz5Oxcvt04u7qmxC8UjRbeIEM922r/439soX/tHH7Ji0ywqTd2EcN
r2POiS/bR4cMFbnCV5bjltDjaPT8fpmMc6mrVyd6mqMp6raezlUyjvEtP9vn
bQIJkR0ydQZk1M83dHGdN8RfhfszD03IWHFstbr+ax3Ydso0/zIj47rrEqfM
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
z1fkRlksiBfGLLV9qEGO4fjJIwssKKgJF9a01IKsPq1PWiL0ztylUxBZhyAx
VrD5CjZ6Tog2CfM1ofyr4LT6VjZaKzR5RHxbELzzva27EBvUZbbPjla0QN84
nZy3jQ3XuJmLK3604O/wzt/comyiD/ok1qHdCo1WiQ0Nu9h405i8FL69DZ9y
TuDwQTZk7XaYDhS2o+LD31YzSTau8Co6x4+3I1ioWePhITbWaxySn1/dgYOx
Z/XmpNnwUW61jrbpgPv9i7fyjrJRWxSiNifSiXVmZqlCYIMyxXNDy60LvAd+
/GehwsbZJsXe4Zwu8LCdeJ+dZOOw9QPtN/1dWBYR4H38DDGudSBIbi/RL1bl
mRqps2GY71fgQfRvbH+pR7kabLz+tnfuCaMbzAvVg3Pn2QhrCPY9ua0H5Omu
k94X2ViyNRXttu3B9DrS7gxdNiquKulx/OnB1Lir0cxlNuy4ygxSdvTiw5O/
8Yf02Fi15sLWzNO9GDu+fkWjPhtjhVo53x70os/myPePxmx8O7dM+vrqPnQf
rtshZsrGkPXb1Rpifej8c8bA0YyN4BFvlwTVPryO0+vmsGTDz874k+X9PlQ1
3nu+05aNuMW/11opfagI4/p64wYbx8fZd0ZX96PsSrhImR0bQhUu8hd29+P5
bFrUqVtsjLj+4r55uR/ZW5ocLZ3ZWFF82NS8uB8Zn9WePrvDhu115e/Jrf1I
K3rzieHCxjtus7dH3/Uj8fS0TuBdNnRlOQPiOQYQfnvF0SdebBwsenBy4dwA
QhQf3iJ5s8E1EPxJQ38AwcsF8476stGk8oqT03YAfqniW9rvs2HWKnQtMWgA
3tfLLvEFsJHQGbrBLW4AHjLHQ/QC2VAc7IqqyRqAa4fmr5lgNp4uaOffqhmA
c+yIjFQIGz+FQmmTrQNwNDaxuxvKBv9um71lAwO4JfYtpzGMDW/Tcb6f7wZg
x7j9fmUEG7Gt96qDpgdg07DArxXJxqF8IY+guQFYhd7XfBTFRkiO/rUfzAGY
bo+rF4thY4Mlo4vMOQhhujj3tVg2JO7w+nMuHyT02KQWGceGunx7x+DKQcQn
XY1qjGfD6t+aISOeQWjZkf+jJbARLraF/IR3ELxKQVv3JLFRd8Lz/TO+QXSt
EzbVe8QGp3BZlsP6QQR/LssNSWYja6XMWfKGQZx6qf6zNoWNmTOBFRL8g/j7
YEqKlErwrXTjrj2bBvHK8K7r9nQ2kjje5I8Tsbsk3yvtDALv8/dNLm4ehCzH
E47ATDbWjBmf9CVi6tBx1cosNvQ2Xg24RcRFT4bCv2ezsTpywHgrEdu533gj
9JiN/NMnF/2J/fad59hyIZcN++ZTOYXE9z+LJBn5PiHGvSbuR28cRCZVMqc0
jw0bCQEfWSJfo5bWb9P5bIxerMpPXDcIwcRrkgJPifpIpa+pWjuIYVu6s1oh
MX9nUmrCmkFEHw+t9njGxmXzT9mHVw9Ck2/H3+fPifzf7zsVtWIQqz9Vnv5Y
RODluJhVwD2I9vILoRuK2TDZ0fv7Pscg/IO/9J8uYUO87WO77O8BKBt4bnIr
ZaMtqI41TR/A7wMbDQvK2Lh5cqp3w+wAKv8WZI6XsyFSW3u04fMA7rzBV96X
bDwePVX8g+DHnNstR6cqNjK+/2I1tQ+gQH1Z5eNqNiqD8jUc6gZgLZy6OFLD
BkPt5JGM0gF8aO4MVqxjw9JEQtY/ZQAp8aa99vVs/PK1vyAXNYCrNuwNmQ1s
7DJP9rO7P4BB3j3p3M1sqKw4ss7g+gAiPtZ+Pvqa8NdP1+w3EfpQL9MWs21h
Q2Ao8qau+gBeX/Ut721jw+h6ipOxxADKc8a7EroJv9sU8+bZTD8cXZ3Wdfaw
oTSz3z9quB8H1VZd+d3LxnalDe4Lzf3IJR2dMhlgw2t1QoNVKqFX+Rj2/mE2
tnb/Cnqi1g+P/nO7ayfZiPicWSof2YeuQueV6z+ywcu84d7t2AfBB+mz1lNs
9G48tn9Qtw+VYJRvmCbyvaXHe0KwD7SSjDM3vrPBfSx45+OUXtjGsawFGWzw
Rfz4FRzcg6rbOzQcmGwcGw1QfG3egxWa5w+1stig7+vo9zvRg9xl2ezbC2xk
DlqNRlK7MeWq+aDjDxvJX+PJXLrduKr/uMBt1TxO3+u968jVhTzZ/oje1fPY
qTBZ5DraCeb6X4671szj0XL7NxsKOxHbdVGhf+08LH0u6QpodaJf8XfXXv55
GO6sXO2f1EG8W7Vnh0Xm8Y8iEWSzuR0JvzwHJLbP49IK/aIX0234MpJX7rdj
HkzFir6C0jb4Ry15HtxNxHK0Rw2abaj/l88bKDZP9G+/NYp8W8E7MUR9Jz6P
1z/WZbafb4Vh9Z9hqQPz2Lta4EvOllYsOOqmv5ecx/s3sm5FL1pw7oLPfRmp
eZhpiQlN3WtBovhT6wfS89CNsEn4cKYFX5cPq0/KzCMy98KeZ+taIPv5r+SR
I/MYftK2Wm38Nf4HZo5xkg==
       "]]},
     Annotation[#, "Charting`Private`Tag$21147#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 5], 0.2],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000193877551, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Reflection\"", TraditionalForm], None}, {
     FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000193877551, 1.4499999806122448`}, {-0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8923161724106407`*^9, {3.892316212035084*^9, 3.892316235699003*^9}, {
   3.89231627046062*^9, 3.892316299544888*^9}, 3.8923164962773657`*^9},
 CellLabel->
  "Out[669]=",ExpressionUUID->"f8949f70-86ea-45ce-be33-ae80319085ea"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$21201#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
oxNKf7EU0NG7jSdzYzta4aFo+rZ59OplRTkTy1bYa65uv4Le/qf/0lvmVoim
eyux9+F8cEmP3+PSAo8W1lbLoK396j/tN/8MSmwrzTbomok63atZH2DwqCGz
CzohRGrpwPoP4GtVf8wL/Shw1PG2YT10t/q/C0erNAdpe4nUweM1xFQc2ugb
VacsoBZEZLX3vUbXxjhfos7XgHXYjoQitKFtb97n3mrgqXfqq0Bf418w/KRd
DdWz/dsa0HbdIrx5cVXAdiXFrxv96upZVZPMCijyZq4fQHcw59x4WlMO+sUW
K2PoyvKJt71D7yGD+4DNH/Rvt/U0brUy0D4Tnr2K5hX253DxKIWFR3/Gmb9T
wN851I+xpQReZVzbzYEuXVK0HRIpgVPfK/S50ZocmT0aPsVA3ygUKYiOs/nl
ZTn3DsKVvdrE0b9mLKi2Vu9A2XJ84wE070nTBd+5IhiO1zilhP5TOc/U4lME
/i3ZbsfQQvsu5JmIFYHsKsf7M+iLqrY1d9oKoXe/7Zw22sruF/e8byG43fq2
/xpaSv10vIBWIewJOWxhhM6r0hSf5S+Elpr4FAt0RUmKk+ffArD7zfDTGp0i
elO2a7QA+IRNeJzRXUIx9fQfBVB3sfGiJ7oxMcLpy2ABWHhJBAWgF5akrB9M
F8CWomcfw9AbnMoTW9gKoWR0ijEOvXxM9+d3xUK4uf2SSgo69pTppI9VITCd
LnbIQqcdsntSmV8IOQ68+YVo5/XHr91mLILLaY9p5eia2dYbZgZFsNwzKPYB
3bBsHxfbUAQpLCcMv6Cj/Oodhg+/g7OH38R2oaUvcZRvf/8Ofluwdvej3ef9
q1hPF0N0rCXHGPrW8zTPkIFiUG1u1SDQYvV5PY/cSyBIKrJqBb0jutQ4llIK
Bw2WFpl+4Hz0r31pnFUGP4JuyLOj9e61NmY6vQeJKeH0XeiCkIqblQcroE3Q
Z3gP+kokLW3d7kpw1J7gl0EzH+Qna3dUQUN+bqgqmvGFVdLJ4GqwHN76RR2t
Tmlsdd9RA9u2OTBro/fev+BISa4BIzsVF0O0/cUxx/iPtbCq8MnUA/3+YYzk
fZUPUPlSidMfrRknx/js2wdwWZ9eGYKeF+qJV7VtgIV2nx2J6Pp7bRcohY0w
bXmyqQr98lhka8f5TzCcXC35D53P+mTdv7av0MhePOPQj/F8s43WTesCb3ux
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

          "]]}, Annotation[#, "Charting`Private`Tag$21201#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
K7PgBdrs4uv/QtAhX9+eLEdz5E+LxKL/B5GpC18=
          "]]}, Annotation[#, "Charting`Private`Tag$21201#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
UMJEDA==
          "]]}, Annotation[#, "Charting`Private`Tag$21201#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
2HimDK0RNzwry0jC/wDUw7G7
          "]]}, Annotation[#, "Charting`Private`Tag$21201#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.773000000244898, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 5], 0.2], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.773000000244898, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Reflection\"", TraditionalForm], None}, {
        FormBox["\"Wavelength,\[Mu]m\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Times New Roman", 12, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.773000000244898, 0.784999999755102}, {-0.05, 1.001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"0\"", "\"0.25\"", "\"0.5\"", "\"0.75\"", "\"1\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"Concentrations\"", {
                 FontFamily -> "Times New Roman", FontSize -> 12, 
                  GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #2, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #3, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    All, PlotRangePadding -> None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #4, 
                    GraphicsBox[{
                    EdgeForm[
                    GrayLevel[0]], 
                    Opacity[0.5], 
                    RectangleBox[{0, 0}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}, ImageSize -> {10, 10}, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)}], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Times New Roman", FontSize -> 12, 
           GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
         RoundingRadius -> 5, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", "12", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Concentrations\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               EdgeForm[
                GrayLevel[0]], 
               Opacity[0.5], 
               RectangleBox[{0, 0}]}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8923161724106407`*^9, {3.892316212035084*^9, 3.892316235699003*^9}, {
   3.89231627046062*^9, 3.892316299544888*^9}, 3.8923165031302805`*^9},
 CellLabel->
  "Out[670]=",ExpressionUUID->"397ae4ed-8613-4d97-99f9-084c506cc5b9"],

Cell[BoxData["7.326435497659431`"], "Output",
 CellChangeTimes->{
  3.8923161724106407`*^9, {3.892316212035084*^9, 3.892316235699003*^9}, {
   3.89231627046062*^9, 3.892316299544888*^9}, 3.892316506882962*^9},
 CellLabel->
  "Out[679]=",ExpressionUUID->"2b898c95-9e7d-4196-85bd-2474668baba6"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0., 0.7749477570818546}, {0.25, 0.7767928685601887}, {
       0.5, 0.7786289568657286}, {0.75, 0.7804561727242316}, {1., 
       0.7822741493719078}}]}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwV0XtUzHkYBvBuiCip3UwUtXJJbVbtpFo92uymC12d1kZaJTa3yiUjt2Gm
kqJDK1akKBSFpo40LqtOFuk26aL7NMb3Z2b66aIUmv3uH+95z+ef57zneS02
7QrYrKWhobGazv/bazOpf8KsdT07uGpubDWBjrtpdBfHAcmOOU37qO2zzmcW
c1aCH/85JZ7a+1XzvUucIOzSLhwVUAdHjDw8w4mAl5GRJIO6wy7RPZWzB5r2
HcKH1Fe+8U1I5ggQHRuj0H1FwNctXnCCkw6f/gulWdS/rcsu+tB/DaodMwvk
NQR6av56D/Mi8DzlQyZ1BFb+faTipAj9vTlu7vUEcTVOOD9UBr+vKcrEBgIT
kWGnpuZjZO6tUpZKCEql7tW1Pz1F7XZbb3UjwdOoS7PWKSvRZ3n8llsTwcf5
yw1u73iGT44Lw3c2E2iNFkyfZfUCipdjcaIWAq46rDSwsBrPH82WyloJqgUO
NVXWtTgbbetr0EYwJ00xerOvDiuzt5kGthMoRro6Xy9pQM+SUWd+B8G19+Uv
9E9JsAWisn87CfTNrrMyWSOap4a6TOkmSPmzJPLKvCbYOwXP4PYQDK8okG09
0oz9skMe8VKCPUsrRd9WtOBG32B9fi9BV2HlyXqLN3gSl/FgUEbwOarx4qID
bah8vCiPKydY7DZpPLK8HcWReu/C3xF45FhsuWvSieQU04R8Qvsy22jZs74L
awx5B9oYAhvlWr3m1d34ElQVM1FBYGTwQbdyrBtnTNyeeSnp/x9fLPouswfG
TnqxPBXBNofy1sneUhxu1Yr/p4+gwHPTlUfDUkiWMQnaH2ifCtPp8nO9MB4x
J3b9BCWBHtrpK2VY7nDs+t4BgiOrhFkiuQyBdQ7i3EECiw6vlqvCtwhc3CSp
HSJwdhSkc5bK4TIh19NomGC9ee2opkQOA9cKY7cRmv8iVRrNf4eXH/Vdkz4R
nNcJ3RMwj2D31Hxx2Si9v7MkR6uSYKLU3vXtGMGEQ/wgpxgGfK7CzPoLgcbN
0CLpjPcgTH/Auq8EsX8Xpc54+h6Os+fLs8cJHi5O0jXcqUDMNM+DMjWBoVes
zTF9JTI2lG8x1GTQblsn4YmVyLUJuRusxeDOZcyThaqQ9buXX5I2gw1FXEOz
cRUEHgsH7ukwOCrM5rfn98Gv2H5geAKD28Tsor4Pi8mHT3lYTWKQdEkY1rmG
RfgPJ1KtqSMCVFaF/iweyY5L7Khni8V3VgeziPXmbXSmTj4dUpWyiUXbzIg4
X+qt3Av9U3gsbhU7XedRWwqMV03KY+HLyCbWUI8vOzit+QaLm5ldPhLqVlVv
Q14BC22/N2daqNOCizf8epfF/dJa815qtXXAbqGYxVzBA+4n6vb605e1JSwG
zNMiLXUZ3E8YCZe8ZuHTkHxrAXW6y8ZFV1tY5AmFAzbU3rnfi37uZBGiPHDY
kfrB/lfP+QyLirLN53yoz9n+eNpfycJsR1i7P3WMNDPIgmWxf26IZTD1Qp/t
XU+GWNgk+hX+Qa2j2XgtbYRFgrP3UCR1d4lLVNgYi27VL87bqcVRV+2WfGXh
kr3iaAx1xhy9j2o1i7+CXKr2Uf8H23CApg==
        "]]},
      Annotation[#, "Charting`Private`Tag$21331#1"]& ]}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.774540735287963},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda],\[Mu]m\"", TraditionalForm], None}, {
     FormBox["\"\[Delta]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times New Roman", 12, 
    GrayLevel[0]},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{
           RowBox[{
             RowBox[{"0.007326435497659431`", " ", "\[Delta]"}], "+", 
             "0.7749567631719526`"}], "\"mirror symmetry\""}}, RowSpacings -> 
         1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], StripOnInput -> False], 16, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 1.}, {0.774540735287963, 0.7822741493719078}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8923161724106407`*^9, {3.892316212035084*^9, 3.892316235699003*^9}, {
   3.89231627046062*^9, 3.892316299544888*^9}, 3.8923165070407963`*^9},
 CellLabel->
  "Out[680]=",ExpressionUUID->"f7fe23a5-3782-4bcf-ab4b-fc7df6b98588"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8921604803029556`*^9, 
  3.89216048111075*^9}},ExpressionUUID->"cfe49a65-c00a-4511-bf58-\
1f179d0aa09d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n1", "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"n2", "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", "1"}]}]}], "Input",
 CellChangeTimes->{{3.892160484670225*^9, 3.8921605426536274`*^9}},
 CellLabel->
  "In[1958]:=",ExpressionUUID->"246a6116-c5c9-4b9c-ac1b-5a1b32b1d01e"],

Cell[BoxData[
 RowBox[{"2.075657`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8921605166574655`*^9, 3.8923229407942395`*^9, 
  3.892323812552679*^9},
 CellLabel->
  "Out[1958]=",ExpressionUUID->"e81a08bb-6f33-469a-80a5-cc8fa48192f3"],

Cell[BoxData[
 RowBox[{"1.45911073022442`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.001041044462177375`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8921605166574655`*^9, 3.8923229407942395`*^9, 
  3.8923238125618553`*^9},
 CellLabel->
  "Out[1959]=",ExpressionUUID->"c58e59f1-7ef8-4693-832a-4fea03170f48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8921605102915955`*^9, 
  3.892160514360436*^9}},ExpressionUUID->"e520fa3f-2cd0-4461-ab0c-\
e1eb630a49f1"],

Cell[BoxData[
 RowBox[{"1.45911073022442`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.001041044462177375`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.8921605045275364`*^9, 3.892160511101054*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"a0add6aa-25f9-4293-90cb-a120ddbe9ddc"]
}, Open  ]]
},
WindowSize->{958.5, 741.},
WindowMargins->{{Automatic, -5.25}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f47019c5-8747-49f9-b4bf-9e13aebc796a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 27327, 715, 2447, "Input",ExpressionUUID->"1e1d5f88-552d-407b-915e-b8efdc9be19a"],
Cell[27910, 739, 42907, 724, 125, "Output",ExpressionUUID->"6233d565-3e66-48d4-b881-71b2a256fa2b"],
Cell[70820, 1465, 74788, 1337, 184, "Output",ExpressionUUID->"c5a65fea-af40-471b-85bd-097d57041655"],
Cell[145611, 2804, 4186, 92, 215, "Output",ExpressionUUID->"90d33cf3-9838-4790-a022-cbb613544b6e"],
Cell[149800, 2898, 294, 5, 32, "Output",ExpressionUUID->"559c14cf-2caa-480e-b795-097d8ecf26da"]
}, Open  ]],
Cell[150109, 2906, 156, 3, 28, "Input",ExpressionUUID->"a0e2059e-a9af-471e-8507-1f3a92c01886"],
Cell[150268, 2911, 154, 3, 28, "Input",ExpressionUUID->"50b4ed49-ace9-457b-a3cf-fabf89c92772"],
Cell[150425, 2916, 154, 3, 28, "Input",ExpressionUUID->"6f59ad83-c66e-4149-93d8-09affc701b91"],
Cell[150582, 2921, 154, 3, 28, "Input",ExpressionUUID->"49de2d5b-bafa-4ba8-b14e-630cc8bcaf83"],
Cell[CellGroupData[{
Cell[150761, 2928, 27411, 756, 2850, "Input",ExpressionUUID->"a011b9d2-9d19-45d8-a266-13bb2ce4df89"],
Cell[178175, 3686, 42849, 723, 125, "Output",ExpressionUUID->"040f9c01-2e4f-4aeb-afd6-4f18442c7a82"],
Cell[221027, 4411, 64562, 1170, 184, "Output",ExpressionUUID->"d20bc0c0-9f9b-499d-9e47-f54085825203"],
Cell[285592, 5583, 63334, 1148, 184, "Output",ExpressionUUID->"ef31528a-2176-4a07-9168-4663c0592ef3"],
Cell[348929, 6733, 266, 4, 32, "Output",ExpressionUUID->"37646ca5-4949-4fc5-bb2d-20a1d9145e85"],
Cell[349198, 6739, 4125, 90, 239, "Output",ExpressionUUID->"abd77953-e35e-4f4e-b208-94e242eff5bf"],
Cell[353326, 6831, 267, 4, 32, "Output",ExpressionUUID->"4ab7a832-0af4-4fbe-bfe3-e7bc49f81fc3"],
Cell[353596, 6837, 4143, 90, 239, "Output",ExpressionUUID->"b74dd7e5-7a6c-42fd-a7d1-cb4e7c735b00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357776, 6932, 27278, 754, 2850, "Input",ExpressionUUID->"58d6ccc7-467a-4389-90d9-4954fe1847b0"],
Cell[385057, 7688, 42505, 717, 125, "Output",ExpressionUUID->"17e714b2-e855-4a13-a330-3686e2af7f8b"],
Cell[427565, 8407, 70998, 1276, 184, "Output",ExpressionUUID->"b955fb8c-3248-48d2-8ca3-ed1d3e65ff0a"],
Cell[498566, 9685, 64932, 1176, 184, "Output",ExpressionUUID->"70eb5424-5562-476b-afcc-7489f569bcca"],
Cell[563501, 10863, 319, 5, 32, "Output",ExpressionUUID->"4ed0c741-3afa-4953-a1cf-06a91b262428"],
Cell[563823, 10870, 4196, 91, 239, "Output",ExpressionUUID->"1ca917cd-a420-4cf6-a7ac-8afee05ebc50"],
Cell[568022, 10963, 4192, 91, 239, "Output",ExpressionUUID->"c17168ba-c219-4633-b06c-5eea2e92e7d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572251, 11059, 21414, 601, 2301, "Input",ExpressionUUID->"02d66e64-2505-4341-92e4-763d15d9f2c4"],
Cell[593668, 11662, 43497, 734, 125, "Output",ExpressionUUID->"ac4fda87-b6b7-4db2-89fc-8fe142f9fca8"],
Cell[637168, 12398, 75971, 1358, 184, "Output",ExpressionUUID->"1bdf91cf-b914-4950-ade4-ec3c0ea80029"],
Cell[713142, 13758, 221, 4, 32, "Output",ExpressionUUID->"9f51623a-68cb-48e0-9267-b6f69442c7fb"],
Cell[713366, 13764, 4096, 90, 239, "Output",ExpressionUUID->"e77db35f-08b7-40c7-a3df-9d74e77acd2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[717499, 13859, 20611, 585, 2263, "Input",ExpressionUUID->"e846b00d-cf1f-4b05-93ec-d9be26554386"],
Cell[738113, 14446, 44190, 745, 272, "Output",ExpressionUUID->"bf0c5598-a282-4d9d-80aa-b26c902fb478"],
Cell[782306, 15193, 76334, 1362, 375, "Output",ExpressionUUID->"1d5e9f5b-e0be-4bab-9821-2162ae6eb438"],
Cell[858643, 16557, 192, 3, 99, "Output",ExpressionUUID->"5f7c31e3-f7a9-4b85-85b3-675ea136a99f"],
Cell[858838, 16562, 4088, 90, 460, "Output",ExpressionUUID->"ba075d42-9c04-438d-a13b-e445cd68eff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[862963, 16657, 22005, 611, 4720, "Input",ExpressionUUID->"56eebf9a-b04f-43bb-96b1-2ecc1128541b"],
Cell[884971, 17270, 44788, 755, 272, "Output",ExpressionUUID->"f8949f70-86ea-45ce-be33-ae80319085ea"],
Cell[929762, 18027, 69249, 1248, 378, "Output",ExpressionUUID->"397ae4ed-8613-4d97-99f9-084c506cc5b9"],
Cell[999014, 19277, 292, 5, 90, "Output",ExpressionUUID->"2b898c95-9e7d-4196-85bd-2474668baba6"],
Cell[999309, 19284, 4171, 91, 498, "Output",ExpressionUUID->"f7fe23a5-3782-4bcf-ab4b-fc7df6b98588"]
}, Open  ]],
Cell[1003495, 19378, 153, 3, 57, "Input",ExpressionUUID->"cfe49a65-c00a-4511-bf58-1f179d0aa09d"],
Cell[CellGroupData[{
Cell[1003673, 19385, 331, 7, 122, "Input",ExpressionUUID->"246a6116-c5c9-4b9c-ac1b-5a1b32b1d01e"],
Cell[1004007, 19394, 292, 6, 90, "Output",ExpressionUUID->"e81a08bb-6f33-469a-80a5-cc8fa48192f3"],
Cell[1004302, 19402, 320, 6, 99, "Output",ExpressionUUID->"c58e59f1-7ef8-4693-832a-4fea03170f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004659, 19413, 154, 3, 57, "Input",ExpressionUUID->"e520fa3f-2cd0-4461-ab0c-e1eb630a49f1"],
Cell[1004816, 19418, 288, 4, 65, "Output",ExpressionUUID->"a0add6aa-25f9-4293-90cb-a120ddbe9ddc"]
}, Open  ]]
}
]
*)

